name: "two deep renames"
enabled: true
# language=GraphQL
overallSchema:
  Issues: |
    type Query {
      issues: [Issue]
    }
    type Issue {
      id: ID
      authorId: ID @renamed(from: "authorDetails.authorId")
      authorName: String @renamed(from: "authorDetails.name")
    }
# language=GraphQL
underlyingSchema:
  Issues: |
    type AuthorDetail {
      authorId: ID
      name: String
    }

    type Issue {
      authorDetails: AuthorDetail
      id: ID
    }

    type Query {
      issues: [Issue]
    }
# language=GraphQL
query: |
  query {
    issues {
      id
      authorId
      authorName
    }
  }
variables: { }
serviceCalls:
  - serviceName: "Issues"
    request:
      # language=GraphQL
      query: |
        query {
          issues {
            __typename__deep_rename__authorId: __typename
            __typename__deep_rename__authorName: __typename
            deep_rename__authorId__authorDetails: authorDetails {
              authorId
            }
            deep_rename__authorName__authorDetails: authorDetails {
              name
            }
            id
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "issues": [
            {
              "deep_rename__authorId__authorDetails": {
                "authorId": "USER-1"
              },
              "__typename__deep_rename__authorId": "Issue",
              "id": "ISSUE-1",
              "__typename__deep_rename__authorName": "Issue",
              "deep_rename__authorName__authorDetails": {
                "name": "User 1"
              }
            },
            {
              "deep_rename__authorId__authorDetails": {
                "authorId": "USER-2"
              },
              "__typename__deep_rename__authorId": "Issue",
              "id": "ISSUE-2",
              "__typename__deep_rename__authorName": "Issue",
              "deep_rename__authorName__authorDetails": {
                "name": "User 2"
              }
            }
          ]
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "issues": [
        {
          "id": "ISSUE-1",
          "authorId": "USER-1",
          "authorName": "User 1"
        },
        {
          "id": "ISSUE-2",
          "authorId": "USER-2",
          "authorName": "User 2"
        }
      ]
    },
    "extensions": {}
  }
