name: "extending types via hydration returning a connection"
enabled: true
overallSchema:
  Issue: |
    type Query {
      synth: Synth
    }
    type Synth {
      issue: Issue
    }
    type Issue {
      id: ID
    }
  Association: |
    type Query {
      association(id: ID, filter: Filter): AssociationConnection
      pages: Pages
    }
    type Pages {
      page(id: ID): Page
    }
    type AssociationConnection {
      nodes: [Association]
    }
    input Filter {
      name: String
    }
    type Association {
      id: ID
      nameOfAssociation: String
      page: Page @hydrated(service: "Association" field: "pages.page" arguments: [{name: "id" value: "$source.pageId"}])
    }
    type Page {
      id: ID
    }
    extend type Issue {
      association(filter: Filter): AssociationConnection @hydrated(service: "Association" field: "association" arguments: [{name: "id" value: "$source.id"} {name: "filter" value: "$argument.filter"}])
    }
underlyingSchema:
  Issue: |
    type Issue {
      id: ID
    }

    type Query {
      synth: Synth
    }

    type Synth {
      issue: Issue
    }
  Association: |
    type Association {
      id: ID
      nameOfAssociation: String
      pageId: ID
    }

    type AssociationConnection {
      nodes: [Association]
    }

    type Page {
      id: ID
    }

    type Pages {
      page(id: ID): Page
    }

    type Query {
      association(filter: Filter, id: ID): AssociationConnection
      pages: Pages
    }

    input Filter {
      name: String
    }
query: |
  query {
    synth {
      issue {
        association(filter: {name: "value"}) {
          nodes {
            page {
              id
            }
          }
        }
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: "Issue"
    request:
      query: |
        query {
          synth {
            issue {
              __typename__hydration__association: __typename
              hydration__association__id: id
            }
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "synth": {
            "issue": {
              "hydration__association__id": "ISSUE-1",
              "__typename__hydration__association": "Issue"
            }
          }
        },
        "extensions": {}
      }
  - serviceName: "Association"
    request:
      query: |
        query ($v0: Filter, $v1: ID) {
          association(filter: $v0, id: $v1) {
            nodes {
              __typename__hydration__page: __typename
              hydration__page__pageId: pageId
            }
          }
        }
      variables:
        v0:
          name: "value"
        v1: "ISSUE-1"
    # language=JSON
    response: |-
      {
        "data": {
          "association": {
            "nodes": [
              {
                "__typename__hydration__page": "Association",
                "hydration__page__pageId": "1"
              }
            ]
          }
        },
        "extensions": {}
      }
  - serviceName: "Association"
    request:
      query: |
        query ($v0: ID) {
          pages {
            page(id: $v0) {
              id
            }
          }
        }
      variables:
        v0: "1"
    # language=JSON
    response: |-
      {
        "data": {
          "pages": {
            "page": {
              "id": "1"
            }
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "synth": {
        "issue": {
          "association": {
            "nodes": [
              {
                "page": {
                  "id": "1"
                }
              }
            ]
          }
        }
      }
    },
    "extensions": {}
  }
