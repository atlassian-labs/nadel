name: hydration matching using index with null input nodes
enabled: true
overallSchema:
  UserService: |
    type Query {
      usersByIds(ids: [ID]): [User]
    }
    type User {
      id: ID
      name: String
    }
  Issues: |
    type Query {
      issues: [Issue]
    }
    type Issue {
      id: ID
      authors: [User] @hydrated(service: "UserService" field: "usersByIds" arguments: [{name: "ids" value: "$source.authorIds"}] indexed: true batchSize: 5)
    }
underlyingSchema:
  UserService: |
    type Query {
      usersByIds(ids: [ID]): [User]
    }

    type User {
      id: ID
      name: String
    }
  Issues: |
    type Issue {
      authorIds: [ID]
      id: ID
    }

    type Query {
      issues: [Issue]
    }
query: |
  query {
    issues {
      id
      authors {
        name
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: Issues
    request:
      query: |
        query {
          issues {
            __typename__batch_hydration__authors: __typename
            batch_hydration__authors__authorIds: authorIds
            id
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "issues": [
            {
              "__typename__batch_hydration__authors": "Issue",
              "batch_hydration__authors__authorIds": [
                "1"
              ],
              "id": "ISSUE-1"
            },
            {
              "__typename__batch_hydration__authors": "Issue",
              "batch_hydration__authors__authorIds": [
                null,
                "2"
              ],
              "id": "ISSUE-2"
            }
          ]
        },
        "extensions": {}
      }
  - serviceName: UserService
    request:
      query: |
        query {
          usersByIds(ids: ["1", "2"]) {
            name
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "usersByIds": [
            {
              "name": "Name"
            },
            {
              "name": "Name 2"
            }
          ]
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "issues": [
        {
          "id": "ISSUE-1",
          "authors": [
            {
              "name": "Name"
            }
          ]
        },
        {
          "id": "ISSUE-2",
          "authors": [
            null,
            {
              "name": "Name 2"
            }
          ]
        }
      ]
    },
    "extensions": {}
  }
