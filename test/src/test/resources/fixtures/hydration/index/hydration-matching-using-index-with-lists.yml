name: "hydration matching using index with lists"
enabled: true
overallSchema:
  UserService: |
    type Query {
      usersByIssueIds(issueIds: [ID]): [[User]]
    }
    type User {
      id: ID
      name: String
    }
  Issues: |
    type Query {
      issues: [Issue]
    }
    type Issue {
      id: ID
      authors: [User] @hydrated(service: "UserService" field: "usersByIssueIds" arguments: [{name: "issueIds" value: "$source.id"}] indexed: true batchSize: 5)
    }
underlyingSchema:
  UserService: |
    type Query {
      usersByIssueIds(issueIds: [ID]): [[User]]
    }

    type User {
      id: ID
      name: String
    }
  Issues: |
    type Issue {
      id: ID
    }

    type Query {
      issues: [Issue]
    }
query: |
  query {
    issues {
      id
      authors {
        name
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: "Issues"
    request:
      query: |
        query {
          issues {
            __typename__batch_hydration__authors: __typename
            id
            batch_hydration__authors__id: id
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "issues": [
            {
              "__typename__batch_hydration__authors": "Issue",
              "id": "ISSUE-1",
              "batch_hydration__authors__id": "ISSUE-1"
            },
            {
              "__typename__batch_hydration__authors": "Issue",
              "id": "ISSUE-2",
              "batch_hydration__authors__id": "ISSUE-2"
            }
          ]
        },
        "extensions": {}
      }
  - serviceName: "UserService"
    request:
      query: |
        query ($v0: [ID]) {
          usersByIssueIds(issueIds: $v0) {
            name
          }
        }
      variables:
        v0:
          - "ISSUE-1"
          - "ISSUE-2"
    # language=JSON
    response: |-
      {
        "data": {
          "usersByIssueIds": [
            [
              {
                "name": "Name"
              }
            ],
            [
              {
                "name": "Name"
              },
              {
                "name": "Name 2"
              }
            ]
          ]
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "issues": [
        {
          "id": "ISSUE-1",
          "authors": [
            {
              "name": "Name"
            }
          ]
        },
        {
          "id": "ISSUE-2",
          "authors": [
            {
              "name": "Name"
            },
            {
              "name": "Name 2"
            }
          ]
        }
      ]
    },
    "extensions": {}
  }
