name: "oneOf fails when invalid variables are passed"
enabled: true
overallSchema:
  MyService: |
    type Query {
      search(by: SearchInput!): String
    }
    input SearchInput @oneOf {
      name: String
      id: ID
    }
underlyingSchema:
  MyService: |-
    type Query {
      search(by: SearchInput!): String
    }
    input SearchInput @oneOf {
      name: String
      id: ID
    }
query: |
  query myQuery($name: String, $id: ID) {
    search(by: {name: $name, id: $id})
  }
variables:
  name: "Figaro"
serviceCalls: []
# language=JSON
response: |-
  {
    "data": null,
    "errors": [{
      "message":"Exactly one key must be specified for OneOf type 'SearchInput'.",
      "extensions":{
        "classification":"ValidationError"
      }
    }],
    "extensions": {}
  }
