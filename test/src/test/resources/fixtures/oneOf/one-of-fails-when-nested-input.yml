name: "oneOf fails when nested input"
enabled: true
overallSchema:
  MyService: |
    type Query {
      search(by: SearchInput): String
    }
     
    input SearchInput {
      name: String
      id: IdInput
    }
    
    input IdInput @oneOf {
      email: String
      id: ID
    }

underlyingSchema:
  MyService: |-
    type Query {
      search(by: SearchInput): String
    }
    
    input SearchInput {
      name: String
      id: IdInput
    }
    
    input IdInput @oneOf {
      email: String
      id: ID
    }
query: |
  query myQuery {
    search(by: {id: {email: null}})
  }
variables: { }
serviceCalls: []
# language=JSON
response: |-
  {
    "data": null,
    "errors": [{
      "message":"OneOf type field 'IdInput.email' must be non-null.",
      "extensions":{
        "classification":"ValidationError"
      }
    }],
    "extensions": {}
  }
