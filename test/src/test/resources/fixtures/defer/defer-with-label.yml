name: "defer with label"
enabled: true
overallSchema:
  service: |
    directive @defer(if: Boolean, label: String) on FRAGMENT_SPREAD | INLINE_FRAGMENT
    
    type Query {
      defer: DeferApi
    }
    
    type DeferApi {
      hello: String
      slow: String
    }
underlyingSchema:
  service: |
    directive @defer(if: Boolean, label: String) on FRAGMENT_SPREAD | INLINE_FRAGMENT
    
    type Query {
      defer: DeferApi
    }
    
    type DeferApi {
      hello: String
      slow: String
    }
query: |
  query {
    defer {
      hello
      ... @defer(label: "slow-defer") {
        slow
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: "service"
    request:
      query: |
        query {
          defer {
            hello
            ... @defer(label: "slow-defer") {
              slow
            }
          }
        }
      variables: { }
    # language=JSON
    incrementalResponse:
      initialResponse: |-
        {
          "hasNext": true,
          "data": {
            "defer": {
              "hello": "world"
            }
          },
          "extensions": {}
        }
      delayedResponses: |-
        [{
          "hasNext": false,
          "incremental": [{
            "label": "slow-defer",
            "path": ["defer"],
            "data": {
              "slow": "snail"
            }
          }]
        }]

# language=JSON
incrementalResponse:
  initialResponse: |-
    {
      "hasNext": true,
      "data": {
        "defer": {
          "hello": "world"
        }
      },
      "extensions": {}
    }
  delayedResponses: |-
    [{
      "hasNext": false,
      "incremental": [{
        "label": "slow-defer",
        "path": ["defer"],
        "data": {
          "slow": "snail"
        }
      }]
    }]
