name: "handles include directive field with hydrated parent"
enabled: true
overallSchema:
  service: |
    type Query {
      foo: Foo @renamed(from: "bar")
      fooById(id: ID): Foo
    }
    type Foo {
      id: String
      water: Foo @hydrated(
        service: "service"
        field: "fooById"
        arguments: [
          {name: "id" value: "$source.id"}
        ]
      )
    }
underlyingSchema:
  service: |
    type Query {
      bar: Foo
      fooById(id: ID): Foo
    }
    type Foo {
      id: String
    }
query: |
  query ($test: Boolean!) {
    foo {
      water {
        id @include(if: $test)
      }
    }
  }
variables:
  test: false
serviceCalls:
  - serviceName: "service"
    request:
      query: |
        query {
          rename__foo__bar: bar {
            __typename__hydration__water: __typename
            hydration__water__id: id
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "rename__foo__bar": {
            "__typename__hydration__water": "Foo",
            "hydration__water__id": "Foo-1"
          }
        },
        "extensions": {}
      }
  - serviceName: "service"
    request:
      query: |
        query {
          fooById(id: "Foo-1") {
            __typename__skip_include____skip: __typename
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "fooById": {
            "__typename__skip_include____skip": "Foo"
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "foo": {
        "water": {
        }
      }
    },
    "extensions": {}
  }
