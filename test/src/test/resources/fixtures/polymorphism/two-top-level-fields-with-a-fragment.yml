name: "two top level fields with a fragment"
enabled: true
# language=GraphQL
overallSchema:
  UserService: |
    type Query {
      user: User
    }
    type User {
      id: ID
      name: String
    }
  Issues: |
    type Query {
      issues: [Issue]
    }
    type Issue {
      id: ID
    }
# language=GraphQL
underlyingSchema:
  UserService: |
    type Query {
      user: User
    }

    type User {
      id: ID
      name: String
    }
  Issues: |
    type Issue {
      authorId: ID
      id: ID
    }

    type Query {
      issues: [Issue]
    }
# language=GraphQL
query: |
  fragment I on Issue {
    id
  }

  fragment U on User {
    id
    name
  }

  query {
    issues {
      ...I
    }
    user {
      ...U
    }
  }
variables: { }
serviceCalls:
  - serviceName: "UserService"
    request:
      # language=GraphQL
      query: |
        query {
          user {
            id
            name
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "user": {
            "name": "User 1",
            "id": "USER-1"
          }
        },
        "extensions": {}
      }
  - serviceName: "Issues"
    request:
      # language=GraphQL
      query: |
        query {
          issues {
            id
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "issues": [
            {
              "id": "ISSUE-1"
            },
            {
              "id": "ISSUE-2"
            }
          ]
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "issues": [
        {
          "id": "ISSUE-1"
        },
        {
          "id": "ISSUE-2"
        }
      ],
      "user": {
        "id": "USER-1",
        "name": "User 1"
      }
    },
    "extensions": {}
  }
