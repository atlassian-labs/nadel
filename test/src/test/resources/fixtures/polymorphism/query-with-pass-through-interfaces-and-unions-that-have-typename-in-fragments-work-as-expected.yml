name: query with pass through interfaces and unions that have __typename in fragments
  work as expected
enabled:
  current: true
  nextgen: true
overallSchema:
  PetService: |
    type Query {
      pets(isLoyal: Boolean): [Pet]
      raining(isLoyal: Boolean): CatsAndDogs
    }
    interface Pet {
      name: String
      owners: [Owner] @hydrated(service: "OwnerService" field: "ownerById" arguments: [{name: "id" value: "$source.ownerIds"}])
      collar: Collar
      collarToRenamed: Collar @renamed(from: "collar")
    }
    type Cat implements Pet {
      name: String
      wearsBell: Boolean
      owners: [Owner]
      collar: Collar
      collarToRenamed: Collar @renamed(from: "collar")
    }
    type Dog implements Pet {
      name: String
      wearsCollar: Boolean
      owners: [Owner]
      collar: Collar
      collarToRenamed: Collar @renamed(from: "collar")
    }
    union CatsAndDogs = Cat | Dog
    interface Collar {
      color: String
      size: String
    }
    type DogCollar implements Collar {
      color: String
      size: String
    }
    type CatCollar implements Collar {
      color: String
      size: String
    }
  OwnerService: |
    type Query {
      owner(id: String): Owner
    }
    interface Owner {
      name: String
    }
    type CaringOwner implements Owner {
      name: String
      givesPats: Boolean
    }
    type CruelOwner implements Owner {
      name: String
      givesSmacks: Boolean
    }
underlyingSchema:
  PetService: |
    interface Collar {
      color: String
      size: String
    }

    interface Pet {
      collar: Collar
      name: String
      ownerIds: [String]
    }

    union CatsAndDogs = Cat | Dog

    type Cat implements Pet {
      collar: Collar
      name: String
      ownerIds: [String]
      wearsBell: Boolean
    }

    type CatCollar implements Collar {
      color: String
      size: String
    }

    type Dog implements Pet {
      collar: Collar
      name: String
      ownerIds: [String]
      wearsCollar: Boolean
    }

    type DogCollar implements Collar {
      color: String
      size: String
    }

    type Mutation {
      hello: String
    }

    type Query {
      hello: World
      pets(isLoyal: Boolean): [Pet]
      raining(isLoyal: Boolean): CatsAndDogs
    }

    type World {
      id: ID
      name: String
    }
  OwnerService: |
    interface Owner {
      name: String
    }

    type CaringOwner implements Owner {
      givesPats: Boolean
      name: String
    }

    type CruelOwner implements Owner {
      givesSmacks: Boolean
      name: String
    }

    type Query {
      ownerById(id: String): Owner
    }
query: |
  query petQ($isLoyal: Boolean) {
    pets(isLoyal: $isLoyal) {
      name
      ...DogFrag
      ... on Dog {
        wearsCollar
        __typename
      }
      ... on Cat {
        wearsBell
        __typename
      }
    }
    raining(isLoyal: $isLoyal) {
      ... on Dog {
        wearsCollar
        __typename
      }
      ... on Cat {
        wearsBell
        __typename
      }
    }
  }

  fragment DogFrag on Dog {
    wearsCollar
    __typename
  }
variables:
  isLoyal: true
serviceCalls:
  current:
    - serviceName: PetService
      request:
        query: |
          query nadel_2_PetService_petQ($isLoyal: Boolean) {
            pets(isLoyal: $isLoyal) {
              name
              ...DogFrag
              ... on Dog {
                wearsCollar
                __typename
              }
              ... on Cat {
                wearsBell
                __typename
              }
              type_hint_typename__UUID: __typename
            }
          }

          fragment DogFrag on Dog {
            wearsCollar
            __typename
          }
        variables:
          isLoyal: true
        operationName: nadel_2_PetService_petQ
      # language=JSON
      response: |-
        {
          "data": {
            "pets": [
              {
                "name": "Sparky",
                "wearsCollar": true,
                "__typename": "Dog",
                "type_hint_typename__UUID": "Dog"
              },
              {
                "name": "Whiskers",
                "wearsBell": false,
                "__typename": "Cat",
                "type_hint_typename__UUID": "Cat"
              }
            ]
          },
          "extensions": {}
        }
    - serviceName: PetService
      request:
        query: |
          query nadel_2_PetService_petQ($isLoyal: Boolean) {
            raining(isLoyal: $isLoyal) {
              ... on Dog {
                wearsCollar
                __typename
              }
              ... on Cat {
                wearsBell
                __typename
              }
              type_hint_typename__UUID: __typename
            }
          }
        variables:
          isLoyal: true
        operationName: nadel_2_PetService_petQ
      # language=JSON
      response: |-
        {
          "data": {
            "raining": {
              "wearsCollar": true,
              "__typename": "Dog",
              "type_hint_typename__UUID": "Dog"
            }
          },
          "extensions": {}
        }
  nextgen:
    - serviceName: PetService
      request:
        query: |
          query petQ {
            pets(isLoyal: true) {
              name
              ... on Cat {
                __typename
                wearsBell
              }
              ... on Dog {
                __typename
                wearsCollar
              }
            }
          }
        variables: {}
        operationName: petQ
      # language=JSON
      response: |-
        {
          "data": {
            "pets": [
              {
                "name": "Sparky",
                "wearsCollar": true,
                "__typename": "Dog"
              },
              {
                "name": "Whiskers",
                "wearsBell": false,
                "__typename": "Cat"
              }
            ]
          },
          "extensions": {}
        }
    - serviceName: PetService
      request:
        query: |
          query petQ {
            raining(isLoyal: true) {
              ... on Cat {
                __typename
                wearsBell
              }
              ... on Dog {
                __typename
                wearsCollar
              }
            }
          }
        variables: {}
        operationName: petQ
      # language=JSON
      response: |-
        {
          "data": {
            "raining": {
              "wearsCollar": true,
              "__typename": "Dog"
            }
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "pets": [
        {
          "name": "Sparky",
          "wearsCollar": true,
          "__typename": "Dog"
        },
        {
          "name": "Whiskers",
          "__typename": "Cat",
          "wearsBell": false
        }
      ],
      "raining": {
        "wearsCollar": true,
        "__typename": "Dog"
      }
    },
    "extensions": {
      "resultComplexity": {
        "totalNodeCount": 14,
        "serviceNodeCounts": {
          "PetService": 14
        },
        "fieldRenamesCount": 0,
        "typeRenamesCount": 0
      }
    }
  }
