name: can declare common types
enabled: true
overallSchema:
  IssueService: |
    type Query {
      node: Node
    }
    type Issue implements Node {
      id: ID!
      name: String
    }
  common: |
    common {
      interface Node {
        id: ID!
      }
    }
underlyingSchema:
  IssueService: |
    interface Node {
      id: ID!
    }

    type Issue implements Node {
      id: ID!
      name: String
    }

    type Query {
      node: Node
    }
query: |
  query {
    node {
      ... on Issue {
        name
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: IssueService
    request:
      query: |
        query {
          node {
            ... on Issue {
              name
            }
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "node": {
            "name": "My Issue"
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "node": {
        "name": "My Issue"
      }
    },
    "extensions": {}
  }
