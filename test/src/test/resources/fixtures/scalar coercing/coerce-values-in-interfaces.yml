name: coerce values in interfaces
enabled: true
overallSchema:
  service: |
    type Query {
      user(id: ID!): User
    }
    interface User {
      id: Int
    }
    type AccountUser implements User {
      id: Int!
    }
    type AdminUser implements User {
      id: Int
    }
underlyingSchema:
  service: |
    type Query {
      user(id: ID!): User
    }
    interface User {
      id: Int
    }
    type AccountUser implements User {
      id: Int!
    }
    type AdminUser implements User {
      id: Int
    }
query: |
  query {
    user(id: "1000") {
      id
    }
  }
variables: { }
serviceCalls:
  - serviceName: service
    request:
      query: |
        query {
          user(id: "1000") {
            id
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "user": {
            "id": "1000"
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "user": {
        "id" : 1000
      }
    }
  }
