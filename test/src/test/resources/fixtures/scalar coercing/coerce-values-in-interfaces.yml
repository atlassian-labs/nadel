name: coerce values in interfaces
enabled:
  current: true
  nextgen: true
overallSchema:
  service: |
    type Query {
      user(id: ID!): User
    }
    interface User {
      id: Int
    }
    type AccountUser implements User {
      id: Int!
    }
    type AdminUser implements User {
      id: Int
    }
underlyingSchema:
  service: |
    type Query {
      user(id: ID!): User
    }
    interface User {
      id: Int
    }
    type AccountUser implements User {
      id: Int!
    }
    type AdminUser implements User {
      id: Int
    }
query: |
  query {
    user(id: "1000") {
      id
    }
  }
variables: {}
serviceCalls:
  current:
    - serviceName: service
      request:
        query: |
          query nadel_2_service {
            user(id: "1000") {
              id
              type_hint_typename__UUID: __typename
            }
          }
        variables: {}
        operationName: nadel_2_service
      # language=JSON
      response: |-
        {
          "data": {
            "user": {
              "id": "1000",
              "type_hint_typename__UUID": "AccountUser"
            }
          },
          "extensions": {}
        }
  nextgen:
    - serviceName: service
      request:
        query: |
          query {
            user(id: "1000") {
              id
            }
          }
        variables: {}
      # language=JSON
      response: |-
        {
          "data": {
            "user": {
              "id": "1000"
            }
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "user": {
        "id" : 1000
      }
    }
  }
