name: ari argument in renamed object input in hydration
enabled: true
overallSchema:
  # language=GraphQL
  MyService: |
    type Query {
      issue(id: ID!): Issue
      issues(input: [IssueInput]): [Issue]
    }
    type Issue {
      id: ID! @ARI(type: "issue", owner: "jira-software", interpreted: true)
      projectId: ID! @ARI(type: "project", owner: "jira-software", interpreted: true)
      key: String!
      related: [Issue] @hydrated(
        service: "MyService"
        field: "issues"
        arguments: [{name: "input" value: "$source.relatedIds"}]
        inputIdentifiedBy: [
          {sourceId: "relatedIds.projectId" resultId: "projectId"}
          {sourceId: "relatedIds.issueId" resultId: "id"}
        ]
      )
    }
    input IssueInput @renamed(from: "UnderlyingIssueInput") {
      projectId: ID! @ARI(type: "project", owner: "jira-software", interpreted: true)
      issueId: ID! @ARI(type: "issue", owner: "jira-software", interpreted: true)
    }
    type Sprint {
      id: ID!
    }
    directive @ARI(
      type: String!
      owner: String!
      interpreted: Boolean! = false
    ) on ARGUMENT_DEFINITION | FIELD_DEFINITION | INPUT_FIELD_DEFINITION
underlyingSchema:
  # language=GraphQL
  MyService: |
    type Query {
      issue(id: ID!): Issue
      issues(input: [UnderlyingIssueInput]): [Issue]
    }
    type Issue {
      id: ID!
      projectId: ID!
      key: String!
      relatedIds: [RelatedIssue]
    }
    type RelatedIssue {
      projectId: ID!
      issueId: ID!
    }
    input UnderlyingIssueInput {
      projectId: ID!
      issueId: ID!
    }
    type Sprint {
      id: ID!
    }
# language=GraphQL
query: |
  query {
    issue(id: "ari:cloud:jira-software::issue/123") {
      related {
        projectId
        key
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: MyService
    request:
      # language=GraphQL
      query: |
        query ($v0: ID!) {
          issue(id: $v0) {
            __typename__batch_hydration__related: __typename
            batch_hydration__related__relatedIds: relatedIds {
              projectId
            }
            batch_hydration__related__relatedIds: relatedIds {
              issueId
            }
          }
        }
      variables:
        v0: "ari:cloud:jira-software::issue/123"
    # language=JSON
    response: |-
      {
        "data": {
          "issue":{
            "__typename__batch_hydration__related": "Issue",
            "batch_hydration__related__relatedIds":  [
              {
                "projectId": "ari:cloud:jira-software::project/100",
                "issueId": "ari:cloud:jira-software::issue/1"
              },
              {
                "projectId": "ari:cloud:jira-software::project/100",
                "issueId": "ari:cloud:jira-software::issue/2"
              },
              {
                "projectId": "ari:cloud:jira-software::project/101",
                "issueId": "ari:cloud:jira-software::issue/3"
              }
            ]
          }
        }
      }
  - serviceName: MyService
    request:
      # language=GraphQL
      query: |
        query ($v0: [UnderlyingIssueInput]) {
          issues(input: $v0) {
            batch_hydration__related__id: id
            key
            projectId
            batch_hydration__related__projectId: projectId
          }
        }
      variables:
        v0:
          - projectId: "100"
            issueId: "1"
          - projectId: "100"
            issueId: "2"
          - projectId: "101"
            issueId: "3"
    # language=JSON
    response: |-
      {
        "data": {
          "issues": [
            {
              "batch_hydration__related__id": "1",
              "key": "GQLGW-001",
              "projectId": "100",
              "batch_hydration__related__projectId": "100"
            },
            {
              "batch_hydration__related__id": "3",
              "key": "BUILD-003",
              "projectId": "101",
              "batch_hydration__related__projectId": "101"
            }
          ]
        }
      }
# language=JSON
response: |-
  {
    "data": {
      "issue": {
        "related": [
          {
            "key": "GQLGW-001",
            "projectId": "ari:cloud:jira-software::project/100"
          },
          null,
          {
            "key": "BUILD-003",
            "projectId": "ari:cloud:jira-software::project/101"
          }
        ]
      }
    },
    "errors": []
  }
