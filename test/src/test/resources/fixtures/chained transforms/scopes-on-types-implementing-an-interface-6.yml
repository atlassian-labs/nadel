name: scopes on types implementing an interface 6
enabled: true
overallSchema:
  service: |
    directive @toBeDeleted on FIELD_DEFINITION | OBJECT

    type Query {
      issue: Issue
    }

    type JiraIssue @toBeDeleted {
      id: ID
      title: String
      assignee: ID
    }

    type ThirdPartyIssue {
      id: ID
      title: String
      description: String
    }

    union Issue = JiraIssue | ThirdPartyIssue

underlyingSchema:
  service: |
    type Query {
      issue: Issue
    }

    type JiraIssue {
      id: ID
      title: String
      assignee: ID
    }

    type ThirdPartyIssue {
      id: ID
      title: String
      description: String
    }

    union Issue = JiraIssue | ThirdPartyIssue

query: |
  query {
    issue {
      ... on JiraIssue {
        uuid_typename: __typename
      }
      ... on ThirdPartyIssue {
        id
        title
      }
    }
  }
variables: { }
serviceCalls:
    - serviceName: service
      request:
        query: |
          query {
            issue {
              ... on JiraIssue {
                uuid_typename: __typename
              }
              ... on ThirdPartyIssue {
                id
                title
              }
            }
          }
        variables: { }
      # language=JSON
      response: |-
        {
          "data": {
            "issue": {
              "uuid_typename": "JiraIssue"
            }
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "issue": null
    },
    "errors": [
      {
        "message": "aint gonna work",
        "locations": [],
        "extensions": {
          "classification": "ValidationError"
        }
      }
    ],
    "extensions": {}
  }
