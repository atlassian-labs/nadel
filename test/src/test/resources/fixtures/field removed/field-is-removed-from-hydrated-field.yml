name: "field is removed from hydrated field"
enabled: false
# language=GraphQL
overallSchema:
  UserService: |
    type Query {
      users(ids: [ID]): [User]
      userById(id: ID): User
    }
    type User {
      userId: ID
      displayName: String
      avatarUrl: String
    }
  CommentService: |
    type Query {
      comments(ids: [ID]): [Comment]
      commentById(id: ID): Comment
    }
    type Comment {
      id: ID
      commentText: String @renamed(from: "text")
      created: String
      author: User
      @hydrated(
        service: "UserService"
        field: "userById"
        arguments: [{name: "id" value: "$source.authorId"}]
      )
    }
# language=GraphQL
underlyingSchema:
  CommentService: |
    type Comment {
      authorId: ID
      created: String
      id: ID
      text: String
    }

    type Query {
      commentById(id: ID): Comment
      comments(ids: [ID]): [Comment]
    }
  UserService: |
    type Query {
      userById(id: ID): User
      users(ids: [ID]): [User]
    }

    type User {
      avatarUrl: String
      displayName: String
      userId: ID
    }
# language=GraphQL
query: |
  query {
    commentById(id: "C1") {
      author {
        displayName
        userId
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: "CommentService"
    request:
      # language=GraphQL
      query: |
        query nadel_2_CommentService {
          commentById(id: "C1") {
            authorId
          }
        }
      variables: { }
      operationName: "nadel_2_CommentService"
    # language=JSON
    response: |-
      {
        "data": {
          "commentById": {
            "authorId": "fred"
          }
        },
        "extensions": {}
      }
  - serviceName: "UserService"
    request:
      # language=GraphQL
      query: |
        query nadel_2_UserService {
          userById(id: "fred") {
            displayName
          }
        }
      variables: { }
      operationName: "nadel_2_UserService"
    # language=JSON
    response: |-
      {
        "data": {
          "userById": {
            "displayName": "Display name of Fred"
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "errors": [
      {
        "path": [
          "commentById",
          "author",
          "userId"
        ],
        "message": "removed field",
        "extensions": {
          "classification": "ExecutionAborted"
        }
      }
    ],
    "data": {
      "commentById": {
        "author": {
          "displayName": "Display name of Fred",
          "userId": null
        }
      }
    },
    "extensions": {}
  }
