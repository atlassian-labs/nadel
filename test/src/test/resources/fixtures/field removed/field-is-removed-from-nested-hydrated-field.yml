name: field is removed from nested hydrated field
enabled: false
overallSchema:
  IssueService: |
    type Query {
      issues(jql: String): [Issue]
      issueById(id: String): Issue
    }
    type Issue {
      id: ID
      key: String
      summary: String
      description: String
      epic: Epic
      reporter: User @hydrated(service: "UserService" field: "userById" arguments: [{name: "id" value: "$source.reporterId"}])
      comments: [Comment] @hydrated(service: "CommentService" field: "commentById" arguments: [{name: "id" value: "$source.commentIds"}])
    }
    type Epic {
      id: ID
      title: String
      description: String
    }
  UserService: |
    type Query {
      users(ids: [ID]): [User]
      userById(id: ID): User
    }
    type User {
      userId: ID
      displayName: String
      avatarUrl: String
    }
  CommentService: |
    type Query {
      comments(ids: [ID]): [Comment]
      commentById(id: ID): Comment
    }
    type Comment {
      id: ID
      commentText: String @renamed(from: "text")
      created: String
      author: User @hydrated(service: "UserService" field: "userById" arguments: [{name: "id" value: "$source.authorId"}])
    }
underlyingSchema:
  IssueService: |
    type Epic {
      description: String
      id: ID
      title: String
    }

    type Issue {
      commentIds: [ID]
      description: String
      epic: Epic
      id: ID
      key: String
      reporterId: ID
      summary: String
    }

    type Query {
      issueById(id: String): Issue
      issues(jql: String): [Issue]
    }
  CommentService: |
    type Comment {
      authorId: ID
      created: String
      id: ID
      text: String
    }

    type Query {
      commentById(id: ID): Comment
      comments(ids: [ID]): [Comment]
    }
  UserService: |
    type Query {
      userById(id: ID): User
      users(ids: [ID]): [User]
    }

    type User {
      avatarUrl: String
      displayName: String
      userId: ID
    }
query: |
  query {
    issues {
      key
      summary
      key
      summary
      reporter {
        displayName
      }
      comments {
        commentText
        author {
          displayName
          userId
        }
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: IssueService
    request:
      query: |
        query nadel_2_IssueService {
          issues {
            key
            summary
            key
            summary
            reporterId
            commentIds
          }
        }
      variables: { }
      operationName: nadel_2_IssueService
    # language=JSON
    response: |-
      {
        "data": {
          "issues": [
            {
              "key": "WORK-I1",
              "summary": "Summary for WORK-I1",
              "reporterId": "fred",
              "commentIds": [
                "C1",
                "C3",
                "C5"
              ]
            },
            {
              "key": "WORK-I2",
              "summary": "Summary for WORK-I2",
              "reporterId": "zed",
              "commentIds": [
                "C2",
                "C4",
                "C6"
              ]
            }
          ]
        },
        "extensions": {}
      }
  - serviceName: UserService
    request:
      query: |
        query nadel_2_UserService {
          userById(id: "fred") {
            displayName
          }
        }
      variables: { }
      operationName: nadel_2_UserService
    # language=JSON
    response: |-
      {
        "data": {
          "userById": {
            "displayName": "Display name of fred"
          }
        },
        "extensions": {}
      }
  - serviceName: UserService
    request:
      query: |
        query nadel_2_UserService {
          userById(id: "zed") {
            displayName
          }
        }
      variables: { }
      operationName: nadel_2_UserService
    # language=JSON
    response: |-
      {
        "data": {
          "userById": {
            "displayName": "Display name of zed"
          }
        },
        "extensions": {}
      }
  - serviceName: CommentService
    request:
      query: |
        query nadel_2_CommentService {
          commentById(id: "C1") {
            text
            authorId
          }
        }
      variables: { }
      operationName: nadel_2_CommentService
    # language=JSON
    response: |-
      {
        "data": {
          "commentById": {
            "text": "Text of C1",
            "authorId": "fred"
          }
        },
        "extensions": {}
      }
  - serviceName: CommentService
    request:
      query: |
        query nadel_2_CommentService {
          commentById(id: "C3") {
            text
            authorId
          }
        }
      variables: { }
      operationName: nadel_2_CommentService
    # language=JSON
    response: |-
      {
        "data": {
          "commentById": {
            "text": "Text of C3",
            "authorId": "zed"
          }
        },
        "extensions": {}
      }
  - serviceName: CommentService
    request:
      query: |
        query nadel_2_CommentService {
          commentById(id: "C5") {
            text
            authorId
          }
        }
      variables: { }
      operationName: nadel_2_CommentService
    # language=JSON
    response: |-
      {
        "data": {
          "commentById": {
            "text": "Text of C5",
            "authorId": "fred"
          }
        },
        "extensions": {}
      }
  - serviceName: CommentService
    request:
      query: |
        query nadel_2_CommentService {
          commentById(id: "C2") {
            text
            authorId
          }
        }
      variables: { }
      operationName: nadel_2_CommentService
    # language=JSON
    response: |-
      {
        "data": {
          "commentById": {
            "text": "Text of C2",
            "authorId": "ned"
          }
        },
        "extensions": {}
      }
  - serviceName: CommentService
    request:
      query: |
        query nadel_2_CommentService {
          commentById(id: "C4") {
            text
            authorId
          }
        }
      variables: { }
      operationName: nadel_2_CommentService
    # language=JSON
    response: |-
      {
        "data": {
          "commentById": {
            "text": "Text of C4",
            "authorId": "jed"
          }
        },
        "extensions": {}
      }
  - serviceName: CommentService
    request:
      query: |
        query nadel_2_CommentService {
          commentById(id: "C6") {
            text
            authorId
          }
        }
      variables: { }
      operationName: nadel_2_CommentService
    # language=JSON
    response: |-
      {
        "data": {
          "commentById": {
            "text": "Text of C6",
            "authorId": "ted"
          }
        },
        "extensions": {}
      }
  - serviceName: UserService
    request:
      query: |
        query nadel_2_UserService {
          userById(id: "fred") {
            displayName
          }
        }
      variables: { }
      operationName: nadel_2_UserService
    # language=JSON
    response: |-
      {
        "data": {
          "userById": {
            "displayName": "Display name of fred"
          }
        },
        "extensions": {}
      }
  - serviceName: UserService
    request:
      query: |
        query nadel_2_UserService {
          userById(id: "zed") {
            displayName
          }
        }
      variables: { }
      operationName: nadel_2_UserService
    # language=JSON
    response: |-
      {
        "data": {
          "userById": {
            "displayName": "Display name of zed"
          }
        },
        "extensions": {}
      }
  - serviceName: UserService
    request:
      query: |
        query nadel_2_UserService {
          userById(id: "fred") {
            displayName
          }
        }
      variables: { }
      operationName: nadel_2_UserService
    # language=JSON
    response: |-
      {
        "data": {
          "userById": {
            "displayName": "Display name of fred"
          }
        },
        "extensions": {}
      }
  - serviceName: UserService
    request:
      query: |
        query nadel_2_UserService {
          userById(id: "ned") {
            displayName
          }
        }
      variables: { }
      operationName: nadel_2_UserService
    # language=JSON
    response: |-
      {
        "data": {
          "userById": {
            "displayName": "Display name of ned"
          }
        },
        "extensions": {}
      }
  - serviceName: UserService
    request:
      query: |
        query nadel_2_UserService {
          userById(id: "jed") {
            displayName
          }
        }
      variables: { }
      operationName: nadel_2_UserService
    # language=JSON
    response: |-
      {
        "data": {
          "userById": {
            "displayName": "Display name of jed"
          }
        },
        "extensions": {}
      }
  - serviceName: UserService
    request:
      query: |
        query nadel_2_UserService {
          userById(id: "ted") {
            displayName
          }
        }
      variables: { }
      operationName: nadel_2_UserService
    # language=JSON
    response: |-
      {
        "data": {
          "userById": {
            "displayName": "Display name of ted"
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "errors": [
      {
        "path": [
          "issues",
          "comments",
          "author",
          "userId"
        ],
        "message": "removed field",
        "extensions": {
          "classification": "ExecutionAborted"
        }
      },
      {
        "path": [
          "issues",
          "comments",
          "author",
          "userId"
        ],
        "message": "removed field",
        "extensions": {
          "classification": "ExecutionAborted"
        }
      },
      {
        "path": [
          "issues",
          "comments",
          "author",
          "userId"
        ],
        "message": "removed field",
        "extensions": {
          "classification": "ExecutionAborted"
        }
      },
      {
        "path": [
          "issues",
          "comments",
          "author",
          "userId"
        ],
        "message": "removed field",
        "extensions": {
          "classification": "ExecutionAborted"
        }
      },
      {
        "path": [
          "issues",
          "comments",
          "author",
          "userId"
        ],
        "message": "removed field",
        "extensions": {
          "classification": "ExecutionAborted"
        }
      },
      {
        "path": [
          "issues",
          "comments",
          "author",
          "userId"
        ],
        "message": "removed field",
        "extensions": {
          "classification": "ExecutionAborted"
        }
      }
    ],
    "data": {
      "issues": [
        {
          "key": "WORK-I1",
          "summary": "Summary for WORK-I1",
          "reporter": {
            "displayName": "Display name of fred"
          },
          "comments": [
            {
              "commentText": "Text of C1",
              "author": {
                "displayName": "Display name of fred",
                "userId": null
              }
            },
            {
              "commentText": "Text of C3",
              "author": {
                "displayName": "Display name of zed",
                "userId": null
              }
            },
            {
              "commentText": "Text of C5",
              "author": {
                "displayName": "Display name of fred",
                "userId": null
              }
            }
          ]
        },
        {
          "key": "WORK-I2",
          "summary": "Summary for WORK-I2",
          "reporter": {
            "displayName": "Display name of zed"
          },
          "comments": [
            {
              "commentText": "Text of C2",
              "author": {
                "displayName": "Display name of ned",
                "userId": null
              }
            },
            {
              "commentText": "Text of C4",
              "author": {
                "displayName": "Display name of jed",
                "userId": null
              }
            },
            {
              "commentText": "Text of C6",
              "author": {
                "displayName": "Display name of ted",
                "userId": null
              }
            }
          ]
        }
      ]
    },
    "extensions": {
      "resultComplexity": {
        "totalNodeCount": 52,
        "serviceNodeCounts": {
          "IssueService": 12,
          "UserService": 22,
          "CommentService": 18
        },
        "fieldRenamesCount": 6,
        "typeRenamesCount": 0
      }
    }
  }
