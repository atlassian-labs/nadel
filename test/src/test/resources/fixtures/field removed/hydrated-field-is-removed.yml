name: "hydrated field is removed"
enabled: false
# language=GraphQL
overallSchema:
  UserService: |
    type Query {
      users(ids: [ID]): [User]
      userById(id: ID): User
    }
    type User {
      userId: ID
      displayName: String
      avatarUrl: String
    }
  CommentService: |
    type Query {
      comments(ids: [ID]): [Comment]
      commentById(id: ID): Comment
    }
    type Comment {
      id: ID
      commentText: String @renamed(from: "text")
      created: String
      author: User @hydrated(service: "UserService" field: "userById" arguments: [{name: "id" value: "$source.authorId"}])
    }
# language=GraphQL
underlyingSchema:
  UserService: |
    type Query {
      users(ids: [ID]): [User]
      userById(id: ID): User
    }
    type User {
      userId: ID
      displayName: String
      avatarUrl: String
    }
  CommentService: |
    type Comment {
      authorId: ID
      created: String
      id: ID
      text: String
    }

    type Query {
      commentById(id: ID): Comment
      comments(ids: [ID]): [Comment]
    }
# language=GraphQL
query: |
  query {
    commentById(id: "C1") {
      author {
        displayName
        userId
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: "CommentService"
    request:
      # language=GraphQL
      query: |
        query nadel_2_CommentService {
          commentById(id: "C1") {
            empty_selection_set_typename__UUID: __typename
          }
        }
      variables: { }
      operationName: "nadel_2_CommentService"
    # language=JSON
    response: |-
      {
        "data": {
          "commentById": {
            "empty_selection_set_typename__UUID": "Comment"
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "errors": [
      {
        "path": [
          "commentById",
          "author"],
        "message": "removed field",
        "extensions": {
          "classification": "ExecutionAborted"
        }
      }
    ],
    "data": {
      "commentById": {
        "author": null
      }
    },
    "extensions": {}
  }
