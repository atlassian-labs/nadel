name: inlined-all-arguments-with-mixed-literals-and-variables
enabled: true
overallSchema:
  MyService: |
    type Query {
      hello(arg: InputArgType): String
    }
    
    input InputArgType @renamed(from: "UnderlyingInputArgType") {
      age : Int
      inputWithJson : InputWithJson
    }

    input InputWithJson @renamed(from: "InputWithJsonUnderlying") {
      names : [String!]!
      payload: JSON 
    }
    
    scalar JSON

underlyingSchema:
  MyService: |-
    type Query {
      hello(arg: UnderlyingInputArgType): String
    }
    
    input UnderlyingInputArgType {
      age : Int
      inputWithJson : InputWithJsonUnderlying
    }

    input InputWithJsonUnderlying {
      names : [String!]!
      payload: JSON 
    }
    
    scalar JSON
query: |
  query myQuery($varX : InputWithJson)  {
    hello(arg: { age : 50, inputWithJson : $varX } )
  }

variables:
  varX: { names: [ "Bobba","Fett" ], payload: { "name": "Bobert", age: "23" } }

serviceCalls:
  - serviceName: MyService
    request:
      query: |
        query myQuery($v0: UnderlyingInputArgType) {
          hello(arg: $v0)
        }
      variables:
        v0: {age : 50, inputWithJson : { names: [ "Bobba","Fett" ], payload: { "name": "Bobert", age: "23" } } }
      operationName: myQuery
    # language=JSON
    response: |-
      {
        "data": {
          "hello": "world"
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "hello": "world"
    },
    "extensions": {}
  }
