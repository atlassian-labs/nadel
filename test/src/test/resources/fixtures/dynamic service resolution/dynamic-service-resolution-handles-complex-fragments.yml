name: "dynamic service resolution handles complex fragments"
enabled: true
overallSchema:
  shared: |
    directive @dynamicServiceResolution on FIELD_DEFINITION

    type Query {
      node(id: ID!): Node @dynamicServiceResolution
    }

    interface Node {
      id: ID!
    }
  RepoService: |
    type PullRequest implements Node {
      id: ID!
      description: String
      author: User
    }
    type User {
      name: String
      avatarUrl: String
    }
  IssueService: |
    type Issue implements Node {
      id: ID!
      issueKey: String
    }
underlyingSchema:
  shared: |
    type Query {
      echo: String
    }
  RepoService: |
    type Query {
        node(id: ID): Node
    }

    interface Node {
        id: ID!
    }

    type PullRequest implements Node {
        id: ID!
        description: String
        author: User
    }

    type User {
      name: String
      avatarUrl: String
    }
  IssueService: |
    type Query {
        node(id: ID): Node
    }

    interface Node {
        id: ID!
    }

    type Issue implements Node {
        id: ID!
        issueKey: String
    }
query: |
  {
    node(id: "pull-request:id-123") {
      ... {
        ... {
          ... on PullRequest {
            id
          }
        }
      }
      ... on PullRequest {
        description
        author {
          ... on User {
            name
            ... {
              avatarUrl
            }
          }
        }
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: "RepoService"
    request:
      query: |
        query ($v0: ID!) {
          node(id: $v0) {
            id
            ... on PullRequest {
              author {
                avatarUrl
                name
              }
              description
            }
          }
        }
      variables:
        v0: "pull-request:id-123"
    # language=JSON
    response: |-
      {
        "data": {
          "node": {
            "id": "pull-request:id-123",
            "description": "this is a pull request",
            "author": {
              "name": "I'm an User",
              "avatarUrl": "https://avatar.acme.com/user-123"
            }
          }
        }
      }
# language=JSON
response: |-
  {
    "data": {
      "node": {
        "id": "pull-request:id-123",
        "description": "this is a pull request",
        "author": {
          "name": "I'm an User",
          "avatarUrl": "https://avatar.acme.com/user-123"
        }
      }
    }
  }
