name: "new batching conditional hydration works with int type"
enabled: true
overallSchema:
  service2: |
    type Query {
      barsById(ids: [Int]): [Bar]
    }
    type Bar {
      id: Int
      name: String
    }
  service1: |
    type Query {
      foo: Foo
    }
    type Foo {
      id: Int
      barIds: [Int] @hidden
      bar: [Bar] 
        @hydrated(
          service: "service2"
          field: "barsById"
          arguments: [
            {
              name: "ids"
              value: "$source.barIds"
            }
          ]
          when: {
            result: {
              sourceField: "barIds"
              predicate: { equals: 2 }
            }
          }
        )
    }
underlyingSchema:
  service2: |
    type Bar {
      id: Int
      name: String
    }

    type Query {
      barsById(ids: [Int]): [Bar]
    }
  service1: |
    type Foo {
      barIds: [Int]
      id: Int
    }

    type Query {
      foo: Foo
    }
query: |
  query {
    foo {
      bar {
          name
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: "service1"
    request:
      query: |
        query {
          foo {
            __typename__batch_hydration__bar: __typename
            batch_hydration__bar__barIds: barIds
            batch_hydration__bar__barIds: barIds
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "foo": {
            "__typename__batch_hydration__bar": "Foo",
            "batch_hydration__bar__barIds": [1, 2, 3]
          }
        },
        "extensions": {}
      }
  - serviceName: "service2"
    request:
      query: |
        query {
          barsById(ids: [2]) {
            batch_hydration__bar__id: id
            name
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "barsById": [{
            "batch_hydration__bar__id": 2,
            "name": "Bar2"
          }]
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "foo": {
        "bar": [null, {"name":"Bar2"}, null]  
      }
    },
    "extensions": {}
  }