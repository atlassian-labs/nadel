name: "new nullable argument for hydration is missing"
enabled: true
overallSchema:
  boards: |
    type Query {
      board: Board
    }

    type Board {
      id: ID
      issue: Issue
      @hydrated(service: "issues" field: "issue" arguments: [
          { name: "id", value: "$source.issueId"}
      ])
    }
  issues: |
    type Query {
        issue(id: ID): Issue
    }

    type Issue {
      id: ID!
      cloudId: ID!

      comments(after: String): CommentConnection
        @hydrated(service: "comments" field: "comments" arguments: [
            { name:"cloudId" value:"$source.cloudId"},
            { name:"after" value:"$argument.after"},
        ])
    }
  comments: |
    type Query {
        comments(cloudId: ID!, after: String): CommentConnection
    }

    type CommentConnection {
        totalCount: Int
    }
underlyingSchema:
  boards: |
    type Query {
      board: Board
    }

    type Board {
      id: ID
      issueId: ID!
    }
  issues: |
    type Query {
        issue(id: ID): Issue
    }

    type Issue {
        id: ID!
        cloudId: ID!
    }
  comments: |
    type Query {
        comments(cloudId: ID!, after: String): CommentConnection
    }

    type CommentConnection {
        totalCount: Int
    }
query: |
  query {
    board {
      issue {
        comments {
          totalCount
        }
      }
    }
  }
variables:
  first: 10
serviceCalls:
  - serviceName: "boards"
    request:
      query: |
        query {
          board {
            __typename__hydration__issue: __typename
            hydration__issue__issueId: issueId
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "board": {
            "hydration__issue__issueId": "ISSUE-1",
            "__typename__hydration__issue": "Board"
          }
        },
        "extensions": {}
      }
  - serviceName: "issues"
    request:
      query: |
        query {
          issue(id: "ISSUE-1") {
            __typename__hydration__comments: __typename
            hydration__comments__cloudId: cloudId
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "issue": {
            "hydration__comments__cloudId": "CLOUD_ID-1",
            "__typename__hydration__comments": "Issue"
          }
        },
        "extensions": {}
      }
  - serviceName: "comments"
    request:
      query: |
        query {
          comments(cloudId: "CLOUD_ID-1") {
            totalCount
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "comments": {
            "totalCount": 10
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data":
    {
      "board": {
        "issue": {
          "comments": {
            "totalCount":10
          }
        }
      }
    },
    "extensions": {}
  }
