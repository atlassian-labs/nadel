name: "nested renamed types"
enabled: true
# language=GraphQL
overallSchema:
  service1: |
    type Query {
      foo: FooX
    }
    type FooX @renamed(from: "Foo") {
      id: ID
      parent: FooX
      building: Bar
    }
    type Bar @renamed(from: "Building") {
      id: ID!
    }
# language=GraphQL
underlyingSchema:
  service1: |
    type Foo {
      id: ID!
      parent: Foo
      building: Building
    }

    type Building {
      id: ID!
    }

    type Query {
      foo: Foo
    }
# language=GraphQL
query: |
  query {
    foo {
      __typename
      parent {
        id
        __typename
        building {
          __typename
          id
        }
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: "service1"
    request:
      # language=GraphQL
      query: |
        query {
          foo {
            __typename
            parent {
              __typename
              building {
                __typename
                id
              }
              id
            }
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "foo": {
            "__typename": "Foo",
            "parent": {
              "__typename": "Foo",
              "id": "ParentFoo1",
              "building": {
                "__typename": "Building",
                "id": "Bar-1"
              }
            }
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "foo": {
        "__typename": "FooX",
        "parent": {
          "__typename": "FooX",
          "id": "ParentFoo1",
          "building": {
            "__typename": "Bar",
            "id": "Bar-1"
          }
        }
      }
    },
    "extensions": {}
  }
