name: "rename inside multiple hydrations"
enabled: true
# language=GraphQL
overallSchema:
  service2: |
    type Query {
      barById(id: ID): Bar
    }
    type Bar {
      id: ID
      title: String @renamed(from: "name")
    }
  service1: |
    type Query {
      foos: [Foo]
    }
    type Foo {
      id: ID
      bar: Bar @hydrated(service: "service2" field: "barById" arguments: [{name: "id" value: "$source.barId"}])
      barLongerInput: Bar @hydrated(service: "service2" field: "barById" arguments: [{name: "id" value: "$source.fooDetails.externalBarId"}])
    }
# language=GraphQL
underlyingSchema:
  service2: |
    type Bar {
      id: ID
      name: String
    }

    type Query {
      barById(id: ID): Bar
    }
  service1: |
    type Foo {
      barId: ID
      fooDetails: FooDetails
      id: ID
    }

    type FooDetails {
      externalBarId: ID
    }

    type Query {
      foos: [Foo]
    }
# language=GraphQL
query: |
  query {
    foos {
      bar {
        title
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: "service1"
    request:
      # language=GraphQL
      query: |
        query {
          foos {
            __typename__hydration__bar: __typename
            hydration__bar__barId: barId
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "foos": [
            {
              "hydration__bar__barId": "barId",
              "__typename__hydration__bar": "Foo"
            },
            {
              "hydration__bar__barId": "barId2",
              "__typename__hydration__bar": "Foo"
            }
          ]
        },
        "extensions": {}
      }
  - serviceName: "service2"
    request:
      # language=GraphQL
      query: |
        query {
          barById(id: "barId") {
            __typename__rename__title: __typename
            rename__title__name: name
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "barById": {
            "rename__title__name": "Bar1",
            "__typename__rename__title": "Bar"
          }
        },
        "extensions": {}
      }
  - serviceName: "service2"
    request:
      # language=GraphQL
      query: |
        query {
          barById(id: "barId2") {
            __typename__rename__title: __typename
            rename__title__name: name
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "barById": {
            "rename__title__name": "Bar2",
            "__typename__rename__title": "Bar"
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "foos": [
        {
          "bar": {
            "title": "Bar1"
          }
        },
        {
          "bar": {
            "title": "Bar2"
          }
        }
      ]
    },
    "extensions": {}
  }
