name: "renamed top level field with argument"
enabled: true
overallSchema:
  MyService: |
    type Query {
      renameObject(id: ID!): ObjectOverall @renamed(from: "renameObjectUnderlying")
    }
    type ObjectOverall @renamed(from: "ObjectUnderlying") {
      name: String
    }
underlyingSchema:
  MyService: |
    type ObjectUnderlying {
      name: String
    }

    type Query {
      renameObjectUnderlying(id: ID!): ObjectUnderlying
    }
query: |
  query {
    renameObject(id: "OBJECT-001") {
      name
    }
  }
variables: { }
serviceCalls:
  - serviceName: "MyService"
    request:
      query: |
        query {
          rename__renameObject__renameObjectUnderlying: renameObjectUnderlying(id: "OBJECT-001") {
            name
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "rename__renameObject__renameObjectUnderlying": {
            "name": "Object 001"
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "renameObject": {
        "name": "Object 001"
      }
    },
    "extensions": { }
  }
