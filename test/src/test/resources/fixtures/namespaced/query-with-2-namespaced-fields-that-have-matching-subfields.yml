name: query with 2 namespaced fields that have matching subfields
enabled: true
overallSchema:
  Issues: |
    directive @namespaced on FIELD_DEFINITION

    type Query {
      issue: IssueQuery @namespaced
    }

    type IssueQuery {
      getIssue: Issue
    }

    type Issue {
      id: ID
      text: String
    }
  IssueSearch: |
    extend type IssueQuery {
      search: SearchResult
    }

    type SearchResult {
      id: ID
      count: Int
    }
  Pages: |
    type Query {
      page: PagesQuery @namespaced
    }

    type PagesQuery {
      getIssue: IssuePage
    }

    type IssuePage {
      id: ID
      pageText: String
    }
underlyingSchema:
  Issues: |
    type Query {
      issue: IssueQuery
    }

    type IssueQuery {
      getIssue: Issue
    }

    type Issue {
      id: ID
      text: String
    }
  IssueSearch: |
    type Query {
      issue: IssueQuery
    }

    type IssueQuery {
      search: SearchResult
    }

    type SearchResult {
      id: ID
      count: Int
    }
  Pages: |
    type Query {
      page: PagesQuery
    }

    type PagesQuery {
      getIssue: IssuePage
    }

    type IssuePage {
      id: ID
      pageText: String
    }
query: |
  {
    issue {
      getIssue {
        text
      }

      search {
        count
      }
    }

    page {
      getIssue {
        pageText
      }
    }
  }
variables: { }
serviceCalls:
  - serviceName: IssueSearch
    request:
      query: |
        query {
          issue {
            search {
              count
            }
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "issue": {
            "search": {
              "count": 100
            }
          }
        },
        "extensions": {}
      }
  - serviceName: Issues
    request:
      query: |
        query {
          issue {
            getIssue {
              text
            }
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "issue": {
            "getIssue": {
              "text": "Foo"
            }
          }
        },
        "extensions": {}
      }
  - serviceName: Pages
    request:
      query: |
        query {
          page {
            getIssue {
              pageText
            }
          }
        }
      variables: { }
    # language=JSON
    response: |-
      {
        "data": {
          "page": {
            "getIssue": {
              "pageText": "Bar"
            }
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "issue": {
        "getIssue": {
          "text": "Foo"
        },
        "search": {
          "count": 100
        }
      },
      "page": {
        "getIssue": {
          "pageText": "Bar"
        }
      }
    },
    "extensions": {}
  }
