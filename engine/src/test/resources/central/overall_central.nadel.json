{"web_triggers":"type Query {\n    \"\"\"\n    Gets all webtrigger URLs for an application in a specified context.\n    \"\"\"\n    webTriggerUrlsByAppContext(appId: ID!, envId: ID!, contextId: ID!): [WebTriggerUrl!]\n}\n\ntype WebTriggerUrl implements Node {\n    id: ID!\n    appId: ID!\n    envId: ID!\n    triggerKey: String!\n    extensionId: ID!\n    contextId: ID!\n    url: URL!\n    \"\"\"\n    Product extracted from the context id (e.g. jira, confulence). Only populated if context id is a valid cloud context.\n    \"\"\"\n    product: String\n\n    \"\"\"\n    The tenant context for the cloud id. Only populated if context id is a valid cloud context.\n    \"\"\"\n    tenantContext: TenantContext @hydrated(service: \"tcs\" field: \"tenantContexts\" arguments : [ { name : \"cloudIds\", value : \"$source.cloudId\"}] identifiedBy : \"cloudId\"   batchSize : 90 )\n}\n\ntype Mutation {\n    \"\"\"\n    Creates a webtrigger URL. If webtrigger url is already created for given `input` the old url will be returned\n    unless `forceCreate` flag is set to true - in that case new url will be always created.\n    \"\"\"\n    createWebTriggerUrl(input: WebTriggerUrlInput!, forceCreate: Boolean = false): CreateWebTriggerUrlResponse\n    \"\"\"\n    Deletes a webtrigger URL.\n    \"\"\"\n    deleteWebTriggerUrl(id: ID!): DeleteWebTriggerUrlResponse\n\n}\n\ninput WebTriggerUrlInput {\n    \"\"\"\n    Id of the application\n    \"\"\"\n    appId: ID!\n\n    \"\"\"\n    Environment id of the application\n    \"\"\"\n    envId: ID!\n\n    \"\"\"\n    Web trigger module key\n    \"\"\"\n    triggerKey: String!\n    \"\"\"\n    context in which function should run, usually a site context.\n    E.g.: ari:cloud:jira::site/{siteId}\n    \"\"\"\n    contextId: ID!\n}\n\n\"\"\"\nResponse from creating an webtrigger url\n\"\"\"\ntype CreateWebTriggerUrlResponse implements MutationResponse {\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n    \"\"\"\n    Url of the webtrigger. Populated only if success is true.\n    \"\"\"\n    url: URL\n    \"\"\"\n    Id of the webtrigger. Populated only if success is true.\n    \"\"\"\n    id: ID\n}\n\n\"\"\"\nResponse from creating an webtrigger url\n\"\"\"\ntype DeleteWebTriggerUrlResponse implements MutationResponse {\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\n","tcs":"type TenantContext {\n    \"\"\"\n    The cloud id of a tenanted Jira or Confluence instance\n    \"\"\"\n    cloudId : ID\n    \"\"\"\n    The host name of a tenanted Jira or Confluence instance\n    \"\"\"\n    hostName : String\n    \"\"\"\n    The host URL of a tenanted Jira or Confluence instance\n    \"\"\"\n    cloudUrl : URL\n    \"\"\"\n    The organization id for this tenant\n    \"\"\"\n    orgId : ID\n}\n\ntype Query {\n    \"\"\"\n    A Jira or Confluence cloud instance, such as `hello.atlassian.net` has a backing\n    cloud ID such as `0ee6b491-5425-4f19-a71e-2486784ad694`\n\n    This field allows you to look up the cloud IDs or host names of tenanted applications\n    such as Jira or Confluence.\n\n    You MUST provide a list of cloud IDs or a list of host names to look up but not both\n    otherwise an error will be returned\n    \"\"\"\n    tenantContexts(cloudIds : [ID!], hostNames : [String!]) : [TenantContext]\n}\n","devops_tools":"type Query {\n    devOpsTools: DevOpsTools @namespaced\n}\n\ntype DevOpsTools {\n    tools(cloudId: ID!, first: Int = 20, after: String): DevOpsToolConnection\n    tool(id: ID!): DevOpsTool\n    namespace(id: ID!): DevOpsToolNamespace\n    container(id: ID!): DevOpsToolContainer\n    navbarConnectionState(cloudId: ID! @CloudID, projectId: ID!): DevOpsToolNavbarConnectionState\n}\n\ntype DevOpsToolConnection {\n    edges: [DevOpsToolEdge]\n    nodes: [DevOpsTool]\n    pageInfo: PageInfo!\n}\n\ntype DevOpsToolEdge {\n    cursor: String!\n    node: DevOpsTool\n}\n\ninterface DevOpsTool {\n    id: ID!\n    name: String!\n    productKey: String!\n    avatar: DevOpsToolAvatar\n    supportedContainerTypes: [DevOpsToolSupportedContainerType!]\n}\n\ntype DevOpsToolAvailable implements DevOpsTool & Node {\n    id: ID!\n    name: String!\n    productKey: String!\n    avatar: DevOpsToolAvatar\n    supportedContainerTypes: [DevOpsToolSupportedContainerType!]\n    namespaces(query: String, first: Int = 100, after: String): DevOpsToolNamespaceConnection\n}\n\ntype DevOpsToolUnavailable implements DevOpsTool & Node {\n    id: ID!\n    name: String!\n    productKey: String!\n    avatar: DevOpsToolAvatar\n    supportedContainerTypes: [DevOpsToolSupportedContainerType!]\n    install: DevOpsToolInstallationInfo!\n}\n\nenum DevOpsToolConnectionState {\n    INITIAL\n    UNCONNECTED\n    INCOMPLETE\n    CONNECTED\n    SEEN\n}\n\ntype DevOpsToolNavbarConnectionState {\n    codeTab: DevOpsToolConnectionState!\n    oncallTab: DevOpsToolConnectionState!\n    pagesTab: DevOpsToolConnectionState!\n}\n\ntype DevOpsToolSupportedContainerType {\n    category: DevOpsToolCategory!\n    type: DevOpsToolContainerType!\n}\n\nenum DevOpsToolCategory {\n    DEVELOPMENT\n    DOCUMENTATION\n    OPERATIONS\n}\n\nenum DevOpsToolContainerType {\n    REPOSITORY\n    DOCUMENTS_SPACE\n    ON_CALL_SCHEDULE\n}\n\ntype DevOpsToolAvatar {\n    url: URL!\n}\n\ntype DevOpsToolInstallationInfo {\n    oauthUrl: URL\n    webUrl: URL!\n}\n\ntype DevOpsToolNamespaceConnection {\n    edges: [DevOpsToolNamespaceEdge]\n    nodes: [DevOpsToolNamespace]\n    pageInfo: PageInfo!\n}\n\ntype DevOpsToolNamespaceEdge {\n    cursor: String!\n    node: DevOpsToolNamespace\n}\n\ntype DevOpsToolNamespace implements Node {\n    id: ID!\n    displayName: String!\n    productKey: String!\n    canCreateContainer: Boolean!\n    underlyingId: String!\n    containers(query: String, first: Int = 100, after: String): DevOpsToolContainerConnection\n}\n\ntype DevOpsToolContainerConnection {\n    edges: [DevOpsToolContainerEdge]\n    nodes: [DevOpsToolContainer]\n    pageInfo: PageInfo!\n}\n\ntype DevOpsToolContainerEdge {\n    cursor: String!\n    node: DevOpsToolContainer\n}\n\ntype DevOpsToolContainer implements Node {\n    id: ID!,\n    displayName: String!,\n    productKey: String!\n    url: String!\n    underlyingId: String!\n}\n\n########################################## Mutations ##########################################\n\ntype Mutation {\n    \"\"\"\n    Update a tab in navbarConnectionState to SEEN\n    \"\"\"\n    updateNavbarConnectionStateTabSeen(input: DevOpsToolUpdateNavbarConnectionStateTabSeenInput!): DevOpsToolUpdateNavbarConnectionStateTabSeenPayload\n}\n\ninput DevOpsToolUpdateNavbarConnectionStateTabSeenInput {\n    \"\"\"\n    The cloudId of the Jira project.\n    \"\"\"\n    cloudId: ID!\n\n    \"\"\"\n    The projectId of the Jira project.\n    \"\"\"\n    projectId: ID!\n\n    \"\"\"\n    The tab to set to SEEN.\n    \"\"\"\n    tab: DevOpsToolNavbarConnectionStateTab\n}\n\nenum DevOpsToolNavbarConnectionStateTab {\n    codeTab\n    oncallTab\n    pagesTab\n}\n\ntype DevOpsToolUpdateNavbarConnectionStateTabSeenPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"\"\"The updated navbarConnectionState\"\"\"\n    updatedNavbarConnectionState: DevOpsToolNavbarConnectionState!\n}\n","xen_logs_api":"##################### QUERY #####################\n\ntype Query {\n    # TODO: remove appLogs() from nadel;  This query becomes part of the AppEnvironment() query elsewhere once multi arg hydration is supported\n    \"\"\"\n    `appLogs()` returns an object for paging over AppLog objects, each of which\n    represents one invocation of a function.\n\n    The returned objects use the Relay naming/nesting style of\n    `AppLogConnection` &rarr; `[AppLogEdge]` &rarr;  `AppLog`.\n\n    It takes parameters (`query: LogQueryInput`) to narrow down the invocations\n    being searched, requiring at least an app and environment.\n    \"\"\"\n    appLogs(\n        last: Int=20,\n        first: Int,\n        before: String,\n        after: String,\n        \"\"\"\n        The app ID. Required.\n\n        \"\"\"\n        appId:ID!,\n        \"\"\"\n        Specify which environment(s) to search.\n        Must not be empty if you want any results.\n        \"\"\"\n        environmentId: [ID!]!,\n        query: LogQueryInput\n    ): AppLogConnection @apiGroup(name: XEN_LOGS_API)\n\n    \"\"\"\n    `appLogLines()` returns an object for paging over the contents of a single\n    invocation's log lines, given by the `invocation` parameter (an ID\n    returned from a `appLogs()` query).\n\n    Each `AppLogLine` consists of a `timestamp`, an optional `message`,\n    an optional `level`, and an `other` field that contains any\n    additional JSON fields included in the log line.  (Since\n    the app itself can control the schema of this JSON, we can't\n    use native GraphQL capabilities to describe the fields here.)\n\n    The returned objects use the Relay naming/nesting style of\n    `AppLogLineConnection` &rarr; `[AppLogLineEdge]` &rarr;  `AppLogLine`.\n    \"\"\"\n    appLogLines(\n        first: Int=100,\n        after: String,\n        \"\"\"\n        The `id` returned from an appLog() query.\n\n        \"\"\"\n        invocation: ID!\n    ): AppLogLineConnection @apiGroup(name: XEN_LOGS_API)\n\n    \"\"\"\n    Check if developer has access to logs\n    \"\"\"\n    developerLogAccess(\n        \"\"\"\n        An array of context ARIs\n        \"\"\"\n        contextIds: [ID!]!\n        \"\"\"\n        AppId as ARI\n        \"\"\"\n        appId: ID!\n        \"\"\"\n        App environment\n        \"\"\"\n        environmentType: AppEnvironmentType!\n    ): [DeveloperLogAccessResult]\n\n    \"\"\"\n    Return a list of installation contexts with forge logs access\n    \"\"\"\n    installationContextsWithLogAccess(appId: ID!): [InstallationContextWithLogAccess!]\n}\n\n##################### INPUT LogQueryInput & related #####################\n\n\"\"\"\nThe input for choosing invocations of interest.\n\"\"\"\ninput LogQueryInput {\n    \"\"\"\n    Specify which installations you want to search.\n    Optional: if empty will search all installations user has access to.\n\n    \"\"\"\n    installationContexts: [ID!]\n\n    \"\"\"\n    Limits the search to a particular function in the app.\n    Optional: if empty will search all functions.\n    \"\"\"\n    functionKey: String\n    \"\"\"\n    Limits the search to a particular version of the app.\n    Optional: if empty will search all versions of the app\n    \"\"\"\n    appVersion: String\n\n    \"\"\"\n    Limits the search to a particular date range.\n\n    Note: Logs may have a TTL on them so older logs may not be available\n    despite search parameters.\n    \"\"\"\n    dates: DateSearchInput\n}\n\n\"\"\"\nWhich type of trigger\n\"\"\"\nenum FunctionTriggerType {\n    FRONTEND\n    MANUAL\n    PRODUCT\n    WEB\n}\n\n\"\"\"\nTime ranges of invocation date.\n\"\"\"\ninput DateSearchInput {\n    \"\"\"\n    The start time of the earliest invocation to include in the results.\n    If null, search results will only be limited by retention limits.\n\n    RFC-3339 formatted timestamp.\n    \"\"\"\n    earliestStart: String\n\n    \"\"\"\n    The start time of the latest invocation to include in the results.\n    If null, will include most recent invocations.\n\n    RFC-3339 formatted timestamp.\n    \"\"\"\n    latestStart: String\n}\n\n##################### INPUT LogGrepInput & related #####################\n\n\n\n\n##################### RESULTS: AppLog #####################\n\n\"\"\"\nRelay-style Connection to `AppLog` objects.\n\"\"\"\ntype AppLogConnection {\n    edges: [AppLogEdge]\n    nodes: [AppLog]\n    pageInfo: PageInfo!\n}\n\n\"\"\"\nRelay-style Edge to an `AppLog` object.\n\"\"\"\ntype AppLogEdge {\n    node: AppLog!\n    cursor: String!\n}\n\ntype AppLog implements FunctionInvocationMetadata & Node {\n    id: ID!\n    appVersion: String!\n    installationContext: AppInstallationContext\n    function: FunctionDescription\n    trigger: FunctionTrigger\n    moduleType: String\n    \"\"\"\n    The start time of the invocation\n\n    RFC-3339 formatted timestamp.\n    \"\"\"\n    startTime: String\n    \"\"\"\n    Gets up to 200 earliest log lines for this invocation.\n    For getting more log lines use appLogLines field in Query type.\n    \"\"\"\n    appLogLines(first: Int=100): AppLogLines\n}\n\n\"\"\"\nThe data describing a function invocation.\n\"\"\"\ninterface FunctionInvocationMetadata {\n    \"\"\"\n    The invocation ID\n    \"\"\"\n    id: ID!\n\n    appVersion: String!\n    \"\"\"\n    The context in which the app is installed\n    \"\"\"\n    installationContext: AppInstallationContext\n    \"\"\"\n    Metadata about the function of the app that was called\n    \"\"\"\n    function: FunctionDescription\n    \"\"\"\n    Metadata about what caused the function to run\n    \"\"\"\n    trigger: FunctionTrigger\n    \"\"\"\n    Metadata about module type\n    \"\"\"\n    moduleType: String\n}\n\ntype AppInstallationContext {\n    id: ID!\n}\n\ntype FunctionDescription {\n    key: String!\n}\n\ntype FunctionTrigger {\n    type: FunctionTriggerType\n    key: String\n}\n\n##################### RESULTS: AppLogLine #####################\n\n\"\"\"\nRelay-style Connection to `AppLogLine` objects.\n\"\"\"\ntype AppLogLineConnection {\n    edges: [AppLogLineEdge]\n    nodes: [AppLogLine]\n    pageInfo: PageInfo!\n\n    \"\"\"\n    Metadata about the function invocation (applies to all log lines of invocation)\n    \"\"\"\n    metadata: FunctionInvocationMetadata!\n}\n\n\"\"\"\nAppLogLines returned from AppLog query.\n\nNot quite a Relay-style Connection since you can't page from this query.\n\"\"\"\ntype AppLogLines {\n    edges: [AppLogLineEdge]\n    nodes: [AppLogLine]\n    pageInfo: PageInfo!\n}\n\n\"\"\"\nRelay-style Edge to an `AppLogLine` object.\n\"\"\"\ntype AppLogLineEdge {\n    node: AppLogLine!\n    cursor: String!\n}\n\ntype AppLogLine {\n    \"\"\"\n    Time the log line was issued\n\n    RFC-3339 formatted timestamp\n    \"\"\"\n    timestamp: String!\n\n    \"\"\"\n    Log level of log line.  Typically one of:\n    TRACE, DEBUG, INFO, WARN, ERROR, FATAL\n    \"\"\"\n    level: String\n\n    \"\"\"\n    The free-form textual message from the log statement.\n    \"\"\"\n    message: String\n\n    \"\"\"\n    We really don't know what other fields may be in the logs.\n\n    This field may be an array or an object.\n\n    If it's an object, it will include only fields in `includeFields`,\n    unless `includeFields` is null, in which case it will include\n    all fields that are not in `excludeFields`.\n\n    If it's an array it will include the entire array.\n    \"\"\"\n    other: JSON\n}\n\ntype Mutation {\n    \"\"\"\n    Allows site admins to grant Forge log access to the app developer\n    \"\"\"\n    updateDeveloperLogAccess(input: UpdateDeveloperLogAccessInput!): UpdateDeveloperLogAccessPayload\n}\n\ninput UpdateDeveloperLogAccessInput {\n    \"\"\"\n    An array of context ARIs\n    \"\"\"\n    contextIds: [ID!]!\n\n    \"\"\"\n    AppId as ARI\n    \"\"\"\n    appId: ID!\n\n    \"\"\"\n    App environment\n    \"\"\"\n    environmentType: AppEnvironmentType!\n\n    \"\"\"\n    Boolean representing whether access should be granted or not\n    \"\"\"\n    shouldHaveAccess: Boolean!\n}\n\ntype UpdateDeveloperLogAccessPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype DeveloperLogAccessResult {\n    \"\"\"Indicates whether developer has access to logs\"\"\"\n    developerHasAccess: Boolean!\n\n    \"\"\"Site ARI\"\"\"\n    contextId: ID!\n}\n\ntype InstallationContextWithLogAccess {\n    \"\"\"\n    Installation context as an ARI\n    \"\"\"\n    installationContext: ID!\n\n    \"\"\"\n    The tenant context for the cloud id. Only populated if context id is a valid cloud context.\n    \"\"\"\n    tenantContext: TenantContext @hydrated(service: \"tcs\" field: \"tenantContexts\" arguments : [ { name : \"cloudIds\", value : \"$source.cloudId\"}] identifiedBy : \"cloudId\"   batchSize : 90 )\n}\n","roadmaps":"type Query {\n    \"\"\"\n    Query for grouping the roadmap queries\n    \"\"\"\n    roadmaps: RoadmapsQuery @beta(name: \"RoadmapsQuery\") @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n}\n\n############################################################################\n########### BELOW HERE ARE THE TYPES SUPPORTING ROADMAPS QUERIES ###########\n############################################################################\n\n\"\"\"\nSupported colors in the Palette\n\"\"\"\nenum RoadmapPaletteColor @renamed(from : \"PaletteColor\") {\n    PURPLE,\n    BLUE,\n    GREEN,\n    TEAL,\n    YELLOW,\n    ORANGE,\n    GREY,\n    DARK_PURPLE,\n    DARK_BLUE,\n    DARK_GREEN,\n    DARK_TEAL,\n    DARK_YELLOW,\n    DARK_ORANGE,\n    DARK_GREY\n}\n\n\"\"\"\nInformation about the type of a roadmap Item\n\"\"\"\ntype RoadmapItemType {\n    \"\"\"\n    The identifier of this item type\n    \"\"\"\n    id: ID!,\n    \"\"\"\n    A description of this item type\n    \"\"\"\n    description: String,\n    \"\"\"\n    The url for the icon of the item type\n    \"\"\"\n    iconUrl: String,\n    \"\"\"\n    The display name of the item type\n    \"\"\"\n    name: String,\n    \"\"\"\n    Whether this item type represents a subtask\n    \"\"\"\n    subtask: Boolean!,\n    \"\"\"\n    The avatar for this item type\n    \"\"\"\n    avatarId: ID,\n    \"\"\"\n    Fields that are required for this item type\n    \"\"\"\n    requiredFieldIds: [ID!]\n}\n\n\"\"\"\nInformation about the permissions available for the roadmap project for the current user\n\"\"\"\ntype RoadmapProjectPermissions {\n    \"\"\"\n    can issues be edited\n    \"\"\"\n    canEditIssues: Boolean!,\n    \"\"\"\n    can issues be scheduled\n    \"\"\"\n    canScheduleIssues: Boolean!,\n    \"\"\"\n    can issues be created\n    \"\"\"\n    canCreateIssues: Boolean!,\n    \"\"\"\n    can the project be administered\n    \"\"\"\n    canAdministerProjects: Boolean!\n}\n\n\"\"\"\nDetails about how valid the roadmap project is\n\"\"\"\ntype RoadmapProjectValidation {\n    \"\"\"\n    Are all the field associations correct for the project\n    \"\"\"\n    hasAllFieldAssociations: Boolean!,\n    \"\"\"\n    Has the epic issue type been setup\n    \"\"\"\n    hasEpicIssueType: Boolean!,\n    \"\"\"\n    Is the hierarchy for the project in a valid state\n    \"\"\"\n    hasValidHierarchy: Boolean!\n    \"\"\"\n    Is roadmap feature enabled in the project\n    \"\"\"\n    isRoadmapFeatureEnabled: Boolean! @deprecated(reason: \"Use the value from RoadmapDetails if possible\"),\n}\n\n\"\"\"\nDetails of a project for a roadmap\n\"\"\"\ntype RoadmapProject {\n    \"\"\"\n    The identifier of the project\n    \"\"\"\n    id: ID!,\n    \"\"\"\n    The short key of the project i.e. ABC\n    \"\"\"\n    key: String,\n    \"\"\"\n    The display name of the project\n    \"\"\"\n    name: String,\n    \"\"\"\n    The description of the project\n    \"\"\"\n    description: String,\n    \"\"\"\n    The user who is leading the project\n    \"\"\"\n    lead: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.lead.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    \"\"\"\n    Has the current user completed onboarding\n    \"\"\"\n    hasCompletedOnboarding: Boolean!,\n    \"\"\"\n    Does this project support dependencies between issues\n    \"\"\"\n    areDependenciesSupported: Boolean!,\n    \"\"\"\n    The description for inward dependency links\n    \"\"\"\n    inwardDependencyDescription: String,\n    \"\"\"\n    The description for outward dependency links\n    \"\"\"\n    outwardDependencyDescription: String,\n    \"\"\"\n    The issue type for epic, in future this will be replaced by using the hierarchy structures directly\n    \"\"\"\n    epicIssueTypeId: ID,\n    \"\"\"\n    Start date custom field ID; used to resolve raw fields data in Bento optimistic updates\n    \"\"\"\n    startDateCustomFieldId: ID,\n    \"\"\"\n    Color custom field ID; used to resolve raw fields data in Bento optimistic updates\n    \"\"\"\n    colorCustomFieldId: ID,\n    \"\"\"\n    Lexo rank custom field ID; used in all ranking operations, in future should be replaced by mutations\n    \"\"\"\n    lexoRankCustomFieldId: ID,\n    \"\"\"\n    The types of items that this project has\n    \"\"\"\n    itemTypes: [RoadmapItemType!],\n    \"\"\"\n    Permissions for the project\n    \"\"\"\n    permissions: RoadmapProjectPermissions,\n    \"\"\"\n    Validation details for the project\n    \"\"\"\n    validation: RoadmapProjectValidation\n}\n\n\"\"\"\nDetails of the category that a status belongs to\n\"\"\"\ntype RoadmapItemStatusCategory {\n    id: ID!,\n    key: String!,\n    name: String,\n}\n\n\"\"\"\nDetails of the status an item has\n\"\"\"\ntype RoadmapItemStatus {\n    id: ID!,\n    name: String,\n    statusCategory: RoadmapItemStatusCategory,\n}\n\n\"\"\"\nThe roadmap item data\n\"\"\"\ntype RoadmapItem {\n    \"\"\"\n    The ID of this item\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The id of the project for this item\n    \"\"\"\n    projectId: ID!,\n    \"\"\"\n    The key of this item\n    \"\"\"\n    key: String!\n    \"\"\"\n    The type of this item\n    \"\"\"\n    itemType: RoadmapItemType!\n    \"\"\"\n    The ID of the parent\n    \"\"\"\n    parentId: ID\n    \"\"\"\n    The summary of this item\n    \"\"\"\n    summary: String\n    \"\"\"\n    The assignee of this item\n    \"\"\"\n    assignee: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.assignee.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    \"\"\"\n    When this item is due, note this is a Date with no TZ\n    \"\"\"\n    dueDate: DateTime\n    \"\"\"\n    When this item is set to start, note this is a Date with no TZ\n    \"\"\"\n    startDate: DateTime\n    \"\"\"\n    The status of this item\n    \"\"\"\n    status: RoadmapItemStatus,\n    \"\"\"\n    The status category of this item\n    \"\"\"\n    statusCategory: RoadmapItemStatusCategory\n    \"\"\"\n    When this item was created\n    \"\"\"\n    createdDate: DateTime\n    \"\"\"\n    When this item was resolved\n    \"\"\"\n    resolutionDate: DateTime\n    \"\"\"\n    IDs of RoadmapItem dependencies for this item\n    \"\"\"\n    dependencies: [ID!]\n    \"\"\"\n    What color should be shown for this item\n    \"\"\"\n    color: RoadmapPaletteColor\n    \"\"\"\n    Lexorank value for the issue (used to determine issues ranking when receiving update events)\n    \"\"\"\n    rank: String\n    \"\"\"\n    List of labels on this item\n    \"\"\"\n    labels: [String!]\n    \"\"\"\n    List of ids of the versions on this item\n    \"\"\"\n    versionIds: [ID!]\n    \"\"\"\n    List of sprint ids that exist on the item\n    \"\"\"\n    sprintIds: [ID!]\n    \"\"\"\n    List of ids of the components on this item\n    \"\"\"\n    componentIds: [ID!]\n    \"\"\"\n    The due date inferred from any child items, note this is a Date with no TZ\n    \"\"\"\n    inferredDueDate: Date\n    \"\"\"\n    The start date inferred from any child items, note this is a Date with no TZ\n    \"\"\"\n    inferredStartDate: Date\n}\n\n\"\"\"\nRelay edge definition for a roadmap item\n\"\"\"\ntype RoadmapItemEdge {\n    \"\"\"\n    Cursor position for this edge\n    \"\"\"\n    cursor: String!\n    \"\"\"\n    The roadmap item for this edge\n    \"\"\"\n    node: RoadmapItem\n}\n\n\"\"\"\nRelay connection definition for a roadmap item\n\"\"\"\ntype RoadmapItemConnection {\n    \"\"\"\n    The edges for this connection\n    \"\"\"\n    edges: [RoadmapItemEdge]\n    \"\"\"\n    The nodes for this connection\n    \"\"\"\n    nodes: [RoadmapItem]!\n    \"\"\"\n    Details about this page\n    \"\"\"\n    pageInfo: PageInfo!\n}\n\n\"\"\"\nDetails of the roadmap status category\n\"\"\"\ntype RoadmapStatusCategory {\n    id: ID!,\n    key: String!,\n    name: String!,\n}\n\n\"\"\"\nDetails about dependency configuration for roadmaps\n\"\"\"\ntype RoadmapDependencyConfiguration {\n    \"\"\"\n    Are dependencies enabled\n    \"\"\"\n    isDependenciesEnabled: Boolean! @renamed(from : \"dependenciesEnabled\"),\n    \"\"\"\n    The description to apply for inbound dependencies\n    \"\"\"\n    inwardDependencyDescription: String,\n    \"\"\"\n    The description to apply for outbound dependencies\n    \"\"\"\n    outwardDependencyDescription: String\n}\n\n\"\"\"\nConfiguration values for the external system(s) behind the roadmap data\n\"\"\"\ntype RoadmapExternalConfiguration {\n    \"\"\"\n    ID of external system\n    \"\"\"\n    externalSystem: ID!,\n    \"\"\"\n    The identifier for the 'field' that represents color in the external system\n    \"\"\"\n    colorFields: [ID],\n    \"\"\"\n    The identifier for the 'field' that represents start date in the external system\n    \"\"\"\n    startDateField: ID\n    \"\"\"\n    The identifier for the 'field' that represents due date in the external system\n    \"\"\"\n    dueDateField: ID,\n    \"\"\"\n    The identifier for the 'field' that represents rank in the external system\n    \"\"\"\n    rankField: ID\n    \"\"\"\n    The identifier for the 'field' that represents epic link in the external system\n    \"\"\"\n    epicLinkField: ID\n    \"\"\"\n    The identifier for the 'field' that represents epic name in the external system\n    \"\"\"\n    epicNameField: ID\n    \"\"\"\n    The identifier for the 'field' that represents sprint in the external system\n    \"\"\"\n    sprintField: ID\n}\n\n\"\"\"\nDetails of a version\n\"\"\"\ntype RoadmapVersion {\n    \"\"\"\n    A unique identifier for the version\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The name of the version\n    \"\"\"\n    name: String!,\n    \"\"\"\n    The status of the version\n    \"\"\"\n    status: RoadmapVersionStatus!\n}\n\n\"\"\"\nAvaliable version statuses\n\"\"\"\nenum RoadmapVersionStatus {\n    \"\"\"\n    version has been released\n    \"\"\"\n    RELEASED\n    \"\"\"\n    version has not been released\n    \"\"\"\n    UNRELEASED\n    \"\"\"\n    version has been archived\n    \"\"\"\n    ARCHIVED\n}\n\n\"\"\"\nDetails of a component\n\"\"\"\ntype RoadmapComponent {\n    \"\"\"\n    A unique identifier for the component\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The name of the component\n    \"\"\"\n    name: String!\n}\n\n\n\"\"\"\nStates that a sprint can be in\n\"\"\"\nenum RoadmapSprintState {\n    \"\"\"\n    A sprint that was completed in the past\n    \"\"\"\n    CLOSED\n    \"\"\"\n    A current sprint\n    \"\"\"\n    ACTIVE\n    \"\"\"\n    A sprint that is planned for the future\n    \"\"\"\n    FUTURE\n}\n\n\"\"\"\nDetails of a roadmap sprint\n\"\"\"\ntype RoadmapSprint {\n    \"\"\"\n    A unique identifier for the sprint\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The name of the sprint\n    \"\"\"\n    name: String!\n    \"\"\"\n    The start date of the sprint, note this is a Date with no TZ\n    \"\"\"\n    startDate: String!\n    \"\"\"\n    The end date of the sprint, note this is a Date with no TZ\n    \"\"\"\n    endDate: String!\n    \"\"\"\n    The state of the sprint\n    \"\"\"\n    state: RoadmapSprintState!\n}\n\n\"\"\"\nConfiguration details specific to a project\n\"\"\"\ntype RoadmapProjectConfiguration {\n    \"\"\"\n    The identifier of the project\n    \"\"\"\n    projectId: ID!,\n    \"\"\"\n    The short key of the project i.e. ABC\n    \"\"\"\n    projectKey: String,\n    \"\"\"\n    The name of the project i.e. ABC project\n    \"\"\"\n    projectName: String,\n    \"\"\"\n    The item types at the parent level\n    \"\"\"\n    parentItemTypes: [RoadmapItemType!]!,\n    \"\"\"\n    The item types at the child level\n    \"\"\"\n    childItemTypes: [RoadmapItemType!]!,\n    \"\"\"\n    Permission details for this project\n    \"\"\"\n    permissions: RoadmapProjectPermissions,\n    \"\"\"\n    Validation information for this project\n    \"\"\"\n    validation: RoadmapProjectValidation\n    \"\"\"\n    The id of the default item type\n    \"\"\"\n    defaultItemTypeId: String\n    \"\"\"\n    List of versions for this project\n    \"\"\"\n    versions: [RoadmapVersion!]\n    \"\"\"\n    List of components for this project\n    \"\"\"\n    components: [RoadmapComponent!]\n}\n\n\"\"\"\nView settings for epics on the roadmap\n\"\"\"\nenum RoadmapEpicView @renamed(from : \"EpicView\") {\n    \"\"\"\n    All epics regardless of status\n    \"\"\"\n    ALL\n    \"\"\"\n    Epics with status complete\n    \"\"\"\n    COMPLETED\n    \"\"\"\n    Epics with status incomplete\n    \"\"\"\n    INCOMPLETE\n}\n\n\"\"\"\nView settings for hierarchy level one items on the roadmap\n\"\"\"\nenum RoadmapLevelOneView {\n    \"\"\"\n    Show level one items completed within last 12 months\n    \"\"\"\n    COMPLETE12M\n    \"\"\"\n    Show level one items completed within last 9 months\n    \"\"\"\n    COMPLETE9M\n    \"\"\"\n    Show level one items completed within last 6 months\n    \"\"\"\n    COMPLETE6M\n    \"\"\"\n    Show level one items completed within last 3 months\n    \"\"\"\n    COMPLETE3M\n    \"\"\"\n    Show level one items completed within last 1 month\n    \"\"\"\n    COMPLETE1M\n    \"\"\"\n    Do not show completed level one items\n    \"\"\"\n    INCOMPLETE\n}\n\n\"\"\"\nDefines the available timeline modes\n\"\"\"\nenum RoadmapTimelineMode @renamed(from : \"TimelineMode\") {\n    \"\"\"\n    Weeks\n    \"\"\"\n    WEEKS\n    \"\"\"\n    Months\n    \"\"\"\n    MONTHS\n    \"\"\"\n    Quarters\n    \"\"\"\n    QUARTERS\n}\n\n\"\"\"\nAny user specific configuration for the roadmap\n\"\"\"\ntype RoadmapUserConfiguration {\n    \"\"\"\n    Has the current user completed onboarding\n    \"\"\"\n    hasCompletedOnboarding: Boolean!,\n    \"\"\"\n    Issue Creation Preferences\n    \"\"\"\n    creationPreferences: RoadmapCreationPreferences!,\n    \"\"\"\n    Should dependencies be visible in Roadmaps UI\n    \"\"\"\n    isDependenciesVisible: Boolean!,\n    \"\"\"\n    Should progress be visible in Roadmaps UI\n    \"\"\"\n    isProgressVisible: Boolean!,\n    \"\"\"\n    List Component width in UI\n    \"\"\"\n    listWidth: Long!,\n    \"\"\"\n    Timeline View - WEEKS, MONTHS or QUARTERS\n    \"\"\"\n    timelineMode: RoadmapTimelineMode!\n    \"\"\"\n    Epic View - ALL, COMPLETED, INCOMPLETE\n    \"\"\"\n    epicView: RoadmapEpicView!\n    \"\"\"\n    View settings for hierarchy level one items on the roadmap\n    \"\"\"\n    levelOneView: RoadmapLevelOneView!\n}\n\n\"\"\"\nBoard specific configuration for a Roadmap\n\"\"\"\ntype RoadmapBoardConfiguration {\n    \"\"\"\n    The board's JQL\n    \"\"\"\n    jql: String\n    \"\"\"\n    Is the current user a board admin\n    \"\"\"\n    isUserBoardAdmin: Boolean\n    \"\"\"\n    Sprints owned by the board associated to the roadmap\n    \"\"\"\n    sprints: [RoadmapSprint!]\n    \"\"\"\n    Is the board's jql filtering out epics\n    \"\"\"\n    isBoardJqlFilteringOutEpics: Boolean\n    \"\"\"\n    Is the sprints feature enabled on the board\n    \"\"\"\n    isSprintsFeatureEnabled: Boolean\n}\n\n\ntype RoadmapCreationPreferences @renamed(from: \"CreationPreferences\") {\n    projectId: Long,\n    itemTypes: JSON!\n}\n\ntype RoadmapConfiguration {\n    \"\"\"\n    Is this roadmap cross project\n    \"\"\"\n    isCrossProject: Boolean!,\n    \"\"\"\n    Is the roadmap feature enabled for this roadmap\n    \"\"\"\n    roadmapFeatureEnabled: Boolean!,\n    \"\"\"\n    Is the board backed with jql with Rank ASC in order by clause\n    \"\"\"\n    rankIssuesSupported: Boolean!,\n    \"\"\"\n    Dependency configuration for this roadmap\n    \"\"\"\n    dependencies: RoadmapDependencyConfiguration,\n    \"\"\"\n    External configuration details\n    \"\"\"\n    externalConfiguration: RoadmapExternalConfiguration,\n    \"\"\"\n    Project information\n    \"\"\"\n    projectConfigurations: [RoadmapProjectConfiguration!]!,\n    \"\"\"\n    Details of status categories\n    \"\"\"\n    statusCategories: [RoadmapStatusCategory!]!\n    \"\"\"\n    Configuration specific to the current user\n    \"\"\"\n    userConfiguration: RoadmapUserConfiguration,\n    \"\"\"\n    Configuration specific to a board\n    \"\"\"\n    boardConfiguration: RoadmapBoardConfiguration\n}\n\ntype RoadmapMetadata {\n    \"\"\"\n    has the roadmap exceeded the epic limit\n    \"\"\"\n    hasExceededEpicLimit: Boolean!,\n    \"\"\"\n    has the roadmap exceeded the overall limit of issues (epic + issues)\n    \"\"\"\n    hasExceededIssueLimit: Boolean!,\n    \"\"\"\n    how many corrupted issues have we found while loading the roadmap\n    \"\"\"\n    corruptedIssueCount: Int!\n}\n\n\"\"\"\nDetails of a roadmap\n\"\"\"\ntype RoadmapDetails {\n    \"\"\"\n    The configuration for this roadmap\n    \"\"\"\n    roadmapConfiguration: RoadmapConfiguration,\n    \"\"\"\n    The items in the roadmap\n    \"\"\"\n    roadmapItems: RoadmapItemConnection\n    \"\"\"\n    meta information surrounding the roadmap, such as issue limit breaches\n    \"\"\"\n    metadata: RoadmapMetadata\n}\n\n\"\"\"\nTop level grouping of potential roadmap queries\n\"\"\"\ntype RoadmapsQuery {\n    \"\"\"\n    Lookup details of a roadmap.\n    \"\"\"\n    roadmapForSource(\n        \"\"\"\n        Is the jira-software board ARI that is the source for the Roadmap\n        \"\"\"\n        sourceARI: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: false),\n\n        \"\"\"\n        Is the location that the request for the Roadmap is made from. Either an ARI for a jira-software board or\n        for a Confluence page.\n        \"\"\"\n        locationARI: ID\n    ): RoadmapDetails\n\n    \"\"\"\n    Get multiple items.\n    \"\"\"\n    roadmapItemByIds(\n        \"\"\"\n        The jira-software board that contains the items\n        \"\"\"\n        sourceARI: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: false),\n\n        \"\"\"\n        A list of Long jira issue ids.\n        \"\"\"\n        ids: [ID!]!\n    ): [RoadmapItem]\n}\n\n############################################################################\n######################## END ROADMAP QUERIES TYPES #########################\n############################################################################\n\n","content_platform_api":"type ContentPlatformImageAsset {\n  title: String!\n  description: String\n\n  \"\"\"The CDN-hosted URL for the Image\"\"\"\n  url: String!\n\n  \"\"\"Additional information about the image\"\"\"\n  details: JSON!\n  fileName: String!\n\n  \"\"\"The MIME type of the image\"\"\"\n  contentType: String!\n}\ntype ContentPlatformContextProduct @renamed(from: \"ContextProduct\") {\n  \"\"\"Contentful ID for this Context: Product\"\"\"\n  contextId: String!\n\n  \"\"\"\n  Internal title of this Product. For public-facing title, use productName\n  \"\"\"\n  title: String!\n  preventProdPublishing: Boolean\n  productName: String!\n\n  \"\"\"What platform this Product is for. Cloud, Server, or N/A\"\"\"\n  deployment: String!\n\n  \"\"\"Versioning info for this Product\"\"\"\n  version: String\n  icon: ContentPlatformImageAsset\n  productBlurb: String\n\n  \"\"\"A url slug for this Product. Used primarily for SAC\"\"\"\n  url: String\n\n  \"\"\"\n  The full support title of this Product, e.g. \"Bitbucket Support\"\n  \"\"\"\n  supportTitle: String\n  customSupportFormAuthenticated: String\n  customSupportFormUnauthenticated: String\n}\n\ntype ContentPlatformTypeOfChange {\n  label: String!\n\n  \"\"\"The icon of this change type\"\"\"\n  icon: ContentPlatformImageAsset!\n}\n\ntype ContentPlatformTaxonomyUserRole {\n  \"\"\"Role title\"\"\"\n  title: String!\n  description: String!\n}\n\ntype ContentPlatformImageComponent {\n  name: String!\n  altTag: String!\n  image: ContentPlatformImageAsset!\n\n  \"\"\"What contexts this Image Component is used for\"\"\"\n  contextReference: [ContentPlatformAnyContext!]!\n}\n\nunion ContentPlatformAnyContext = ContentPlatformContextProduct | ContentPlatformContextApp | ContentPlatformContextTheme\n\ntype ContentPlatformContextApp @renamed(from: \"ContextApp\") {\n  \"\"\"Contentful ID for this Context: App\"\"\"\n  contextId: String!\n\n  \"\"\"\n  Internal title of this App Context. For public-facing name, get appNameReference.appName\n  \"\"\"\n  title: String!\n  preventProdPublishing: Boolean\n  appName: String!\n\n  \"\"\"Products that this App can be classified for\"\"\"\n  parentProductContext: [ContentPlatformContextProduct!]!\n  icon: ContentPlatformImageAsset\n\n  \"\"\"This app's url slug. Used primarily for SAC\"\"\"\n  url: String\n}\n\ntype ContentPlatformContextTheme @renamed(from: \"ContextTheme\") {\n  \"\"\"Contentful ID for this Context: Theme\"\"\"\n  contextId: String!\n\n  \"\"\"Internal title of this Theme. For public-facing title, use hubName\"\"\"\n  title: String!\n  preventProdPublishing: Boolean!\n\n  \"\"\"Public-facing title for this Theme\"\"\"\n  hubName: String!\n  icon: ContentPlatformImageAsset\n\n  \"\"\"A url slug for this Theme. Used primarily for SAC\"\"\"\n  url: String\n}\n\ntype ContentPlatformTaxonomyChangeCategory {\n  \"\"\"Role title\"\"\"\n  title: String!\n  description: String!\n}\n\ntype ContentPlatformTaxonomyAnnouncementPlan {\n  \"\"\"Announcement plan label\"\"\"\n  title: String!\n  description: String!\n}\n\ntype ContentPlatformTaxonomyAnnouncementPlanEntry {\n  \"\"\"Announcement plan label\"\"\"\n  title: String!\n  description: String!\n}\n\ntype ContentPlatformStatusOfChange {\n  label: String!\n  description: String!\n}\n\ntype ContentPlatformReleaseNote {\n  releaseNoteId: String!\n  updatedAt: String\n  url: String\n\n  \"\"\"The related Feature Delivery Jira Ticket URL\"\"\"\n  fdIssueLink: String\n\n  \"\"\"The related Feature Delivery Jira Issue Key\"\"\"\n  fdIssueKey: String\n\n  \"\"\"The title of the Release Note\"\"\"\n  title: String\n  changeTargetSchedule: String\n  announcementPlan: ContentPlatformTaxonomyAnnouncementPlan\n\n  \"\"\"A reference to the change type\"\"\"\n  changeType: ContentPlatformTypeOfChange\n\n  \"\"\"The status of this change\"\"\"\n  changeStatus: ContentPlatformStatusOfChange\n\n  \"\"\"References to the products and apps this change affects\"\"\"\n  relatedContexts: [ContentPlatformAnyContext!]\n\n  \"\"\"References to the affected users\"\"\"\n  affectedUsers: [ContentPlatformTaxonomyUserRole!]\n\n  \"\"\"References to the users needing informed\"\"\"\n  usersNeedingInformed: [ContentPlatformTaxonomyUserRole!]\n  description: JSON\n\n  \"\"\"A reference to the featured image\"\"\"\n  featuredImage: ContentPlatformImageComponent\n  keyChanges: JSON\n  reasonForChange: JSON\n\n  \"\"\"A Rich Text document of how users can prepare for this change\"\"\"\n  prepareForChange: JSON\n\n  \"\"\"A list of references to additional imagery\"\"\"\n  supportingVisuals: [ContentPlatformImageComponent!]\n\n  \"\"\"References to related Contentful entries\"\"\"\n  relatedContentLinks: [String!]\n\n  \"\"\"Feature rollout date\"\"\"\n  featureRolloutDate: String\n  changeCategory: ContentPlatformTaxonomyChangeCategory\n  releaseNoteFlag: String\n  releaseNoteFlagOffValue: String\n\n  \"\"\"Publish status of the Release Note\"\"\"\n  publishStatus: String\n\n  \"\"\"Benefits list\"\"\"\n  benefitsList: JSON\n\n  \"\"\"Information on how to get started with this release\"\"\"\n  getStarted: JSON\n}\n\ntype ContentPlatformReleaseNotesEdge {\n  node: ContentPlatformReleaseNote!\n\n  \"\"\"Used in `before` and `after` args\"\"\"\n  cursor: String!\n}\n\ntype ContentPlatformReleaseNotesConnection {\n  pageInfo: PageInfo!\n  edges: [ContentPlatformReleaseNotesEdge!]!\n}\n\ntype ContentPlatformImageAssetEntry {\n  title: String!\n  description: String\n\n  \"\"\"The CDN-hosted URL for the Image\"\"\"\n  url: String!\n\n  \"\"\"Additional information about the image\"\"\"\n  details: JSON!\n  fileName: String!\n\n  \"\"\"The MIME type of the image\"\"\"\n  contentType: String!\n}\n\ntype ContentPlatformTypeOfChangeEntry {\n  label: String\n\n  \"\"\"The icon of this change type\"\"\"\n  icon: ContentPlatformImageAssetEntry\n}\n\ntype ContentPlatformContextProductEntry {\n  \"\"\"Contentful ID for this Context: Product\"\"\"\n  contextId: String!\n\n  \"\"\"\n  Internal title of this Product. For public-facing title, use productName\n  \"\"\"\n  title: String!\n  preventProdPublishing: Boolean\n  productName: String!\n\n  \"\"\"What platform this Product is for. Cloud, Server, or N/A\"\"\"\n  deployment: String!\n\n  \"\"\"Versioning info for this Product\"\"\"\n  version: String\n  icon: ContentPlatformImageAssetEntry\n  productBlurb: String\n\n  \"\"\"A url slug for this Product. Used primarily for SAC\"\"\"\n  url: String\n\n  \"\"\"\n  The full support title of this Product, e.g. \"Bitbucket Support\"\n  \"\"\"\n  supportTitle: String\n  customSupportFormAuthenticated: String\n  customSupportFormUnauthenticated: String\n}\n\ntype ContentPlatformImageComponentEntry {\n  name: String!\n  altTag: String!\n  image: ContentPlatformImageAssetEntry!\n\n  \"\"\"What contexts this Image Component is used for\"\"\"\n  contextReference: [ContentPlatformAnyContextEntry!]!\n}\n\nunion ContentPlatformAnyContextEntry = ContentPlatformContextProductEntry | ContentPlatformContextAppEntry | ContentPlatformContextThemeEntry\n\ntype ContentPlatformContextAppEntry {\n  \"\"\"Contentful ID for this Context: App\"\"\"\n  contextId: String!\n\n  \"\"\"\n  Internal title of this App Context. For public-facing name, get appNameReference.appName\n  \"\"\"\n  title: String!\n  preventProdPublishing: Boolean\n  appName: String!\n\n  \"\"\"Products that this App can be classified for\"\"\"\n  parentProductContext: [ContentPlatformContextProductEntry!]!\n  icon: ContentPlatformImageAssetEntry\n\n  \"\"\"This app's url slug. Used primarily for SAC\"\"\"\n  url: String!\n}\n\ntype ContentPlatformContextThemeEntry {\n  \"\"\"Contentful ID for this Context: Theme\"\"\"\n  contextId: String!\n\n  \"\"\"Internal title of this Theme. For public-facing title, use hubName\"\"\"\n  title: String!\n  preventProdPublishing: Boolean!\n\n  \"\"\"Public-facing title for this Theme\"\"\"\n  hubName: String!\n  icon: ContentPlatformImageAssetEntry\n\n  \"\"\"A url slug for this Theme. Used primarily for SAC\"\"\"\n  url: String!\n}\n\ntype ContentPlatformStatusOfChangeEntry {\n  label: String!\n  description: String!\n}\n\ntype ContentPlatformTaxonomyUserRoleEntry {\n  \"\"\"Role title\"\"\"\n  title: String!\n  description: String!\n}\n\ntype ContentPlatformTaxonomyChangeCategoryEntry {\n  \"\"\"Change category title\"\"\"\n  title: String!\n  description: String!\n}\n\ntype ContentPlatformReleaseNoteEntry {\n  releaseNoteId: String!\n\n  \"\"\"The related Feature Delivery Jira Ticket URL\"\"\"\n  fdIssueLink: String\n\n  \"\"\"The related Feature Delivery Jira Ticket Key\"\"\"\n  fdIssueKey: String\n\n  \"\"\"Title of this change\"\"\"\n  title: String\n  changeTargetSchedule: String\n  announcementPlan: ContentPlatformTaxonomyAnnouncementPlanEntry\n\n  \"\"\"A reference to the change type\"\"\"\n  changeType: ContentPlatformTypeOfChangeEntry\n\n  \"\"\"The status of this change\"\"\"\n  changeStatus: ContentPlatformStatusOfChangeEntry\n\n  \"\"\"References to the products and apps this change affects\"\"\"\n  relatedContexts: [ContentPlatformAnyContextEntry!]\n\n  \"\"\"References to the affected users\"\"\"\n  affectedUsers: [ContentPlatformTaxonomyUserRoleEntry!]\n\n  \"\"\"References to the users needing informed\"\"\"\n  usersNeedingInformed: [ContentPlatformTaxonomyUserRoleEntry!]\n  description: JSON\n\n  \"\"\"A reference to the featured image\"\"\"\n  featuredImage: ContentPlatformImageComponentEntry\n  keyChanges: JSON\n  reasonForChange: JSON\n\n  \"\"\"A Rich Text document of how users can prepare for this change\"\"\"\n  prepareForChange: JSON\n\n  \"\"\"A list of references to additional imagery\"\"\"\n  supportingVisuals: [ContentPlatformImageComponentEntry!]\n\n  \"\"\"References to related Contentful entries\"\"\"\n  relatedContentLinks: [String!]\n\n  \"\"\"Feature rollout date\"\"\"\n  featureRolloutDate: String\n  changeCategory: ContentPlatformTaxonomyChangeCategoryEntry\n  releaseNoteFlag: String\n  releaseNoteFlagOffValue: String\n  updatedAt: String!\n  url: String!\n  benefitsList: JSON!\n  getStarted: JSON!\n}\n\ntype ContentPlatformIntroToPractice {\n  title: String!\n  body: String!\n}\n\ntype ContentPlatformChunkWhatIs {\n  title: String!\n  body: String!\n}\n\ntype ContentPlatformChunkBenefits {\n  title: String!\n  body: String!\n}\n\ntype ContentPlatformChunkDeepDive {\n  title: String!\n  body: String!\n}\n\ntype ContentPlatformChunkBestPractices {\n  title: String!\n  body: String!\n}\n\ntype ContentPlatformChunkInContext {\n  title: String!\n  body: String!\n}\n\ntype ContentPlatformChunkHowTo {\n  title: String!\n  body: String!\n}\n\ntype ContentPlatformWhatPractice {\n  title: String!\n}\n\ntype ContentPlatformPracticePage {\n  name: String!\n\n  \"\"\"Tagline for Practice Pages\"\"\"\n  tagline: String!\n  introTo: ContentPlatformIntroToPractice!\n  whatIs: ContentPlatformChunkWhatIs!\n  benefits: ContentPlatformChunkBenefits\n  deepDive: ContentPlatformChunkDeepDive\n  bestPractices: ContentPlatformChunkBestPractices\n  inContext: ContentPlatformChunkInContext\n  howTo: ContentPlatformChunkHowTo\n  practice: ContentPlatformWhatPractice!\n}\n\ntype Query {\n  releaseNotes(\n    \"\"\"\n    This is a cursor after which (exclusive) the data should be fetched from\n    \"\"\"\n    after: String\n\n    \"\"\"This is an int that says to fetch the first N items\"\"\"\n    first: Int = 10\n    filter: ContentPlatformReleaseNoteFilterOptions\n    publishedOnly: Boolean = true\n    orderBy: String = \"publishDate\"\n  ): ContentPlatformReleaseNotesConnection!\n  releaseNote(\n    \"\"\"The Contentful ID of the target release note\"\"\"\n    id: String!\n\n    \"\"\"Whether to include published items only\"\"\"\n    publishedOnly: Boolean\n  ): ContentPlatformReleaseNote\n  practicePages: [ContentPlatformPracticePage!]!\n  practicePage(\n    \"\"\"The Contentful ID of the target Practice Page\"\"\"\n    id: String!\n  ): ContentPlatformPracticePage!\n}\n\ninput ContentPlatformReleaseNoteFilterOptions {\n  \"\"\"\n  A list of Feature Delivery Jira ticket urls on which to match release notes\n  \"\"\"\n  fdIssueLinks: [String!]\n\n  \"\"\"The Contentful ID of a product on which to match release notes\"\"\"\n  contextId: String\n\n  \"\"\"\n  A list of Feature Delivery Jira issue keys on which to match release notes\n  \"\"\"\n  fdIssueKeys: [String!]\n\n  \"\"\"A list of Change Types on which to match release notes\"\"\"\n  changeTypes: [String!]\n\n  \"\"\"A list of product/app names on which to match release notes\"\"\"\n  productNames: [String!]\n\n  \"\"\"A list of change statuses on which to match release notes\"\"\"\n  changeStatus: [String!]\n\n  \"\"\"Rollout dates on which to match release notes\"\"\"\n  featureRolloutDates: [String!]\n\n  \"\"\"A list of feature flags on which to match release notes\"\"\"\n  releaseNoteFlags: [String!]\n  productFeatureFlags: JSON\n\n  \"\"\"A list of feature flag off values on which to match release notes\"\"\"\n  releaseNoteFlagOffValues: [String!]\n\n  \"\"\"A list of publish statuses on which to match release notes\"\"\"\n  publishStatus: [String!]\n}\n\ntype Mutation {\n  createReleaseNote(\n    \"\"\"Change status\"\"\"\n    changeStatus: String = \"\"\n\n    \"\"\"Title\"\"\"\n    title: String = \"\"\n\n    \"\"\"Change Type\"\"\"\n    changeType: String = \"\"\n\n    \"\"\"Feature Delivery issue key\"\"\"\n    fdIssueKey: String\n\n    \"\"\"Feature Delivery issue url\"\"\"\n    fdIssueLink: String\n\n    \"\"\"Feature rollout date (YYYY-MM-DD)\"\"\"\n    featureRolloutDate: DateTime\n\n    \"\"\"Feature flag\"\"\"\n    releaseNoteFlag: String = \"\"\n\n    \"\"\"Feature flag off value\"\"\"\n    releaseNoteFlagOffValue: String = \"\"\n\n    \"\"\"Announcement Plan\"\"\"\n    announcementPlan: String = \"\"\n\n    \"\"\"Products this Release note applies to\"\"\"\n    productNames: [String!]\n\n    \"\"\"Product IDs for products this Release note applies to\"\"\"\n    productIds: [String!]\n\n    \"\"\"Short description\"\"\"\n    description: JSON!\n\n    \"\"\"Change Category\"\"\"\n    changeCategory: String = \"\"\n\n    \"\"\"Benefits list\"\"\"\n    benefitsList: JSON\n  ): ContentPlatformReleaseNote!\n  publishReleaseNote(\n    \"\"\"ID of entry to publish\"\"\"\n    id: String!\n  ): ContentPlatformReleaseNote!\n  updateReleaseNote(\n    \"\"\"Release Note ID\"\"\"\n    id: String!\n\n    \"\"\"Updated change status\"\"\"\n    changeStatus: String = \"\"\n\n    \"\"\"New Title\"\"\"\n    title: String = \"\"\n\n    \"\"\"Updated Change Type\"\"\"\n    changeType: String = \"\"\n\n    \"\"\"New Feature Delivery issue key\"\"\"\n    fdIssueKey: String\n\n    \"\"\"New Feature Delivery issue url\"\"\"\n    fdIssueLink: String\n\n    \"\"\"New Feature rollout date (YYYY-MM-DD)\"\"\"\n    featureRolloutDate: DateTime\n\n    \"\"\"New feature flag\"\"\"\n    releaseNoteFlag: String = \"\"\n\n    \"\"\"New feature flag off value\"\"\"\n    releaseNoteFlagOffValue: String = \"\"\n\n    \"\"\"New Announcement Plan\"\"\"\n    announcementPlan: String = \"\"\n\n    \"\"\"New Change Category\"\"\"\n    changeCategory: String = \"\"\n\n    \"\"\"New related contexts for this Release Note\"\"\"\n    relatedContexts: [String!]\n\n    \"\"\"New related context ids for this Release Note\"\"\"\n    relatedContextIds: [String!]\n  ): ContentPlatformReleaseNoteEntry!\n}\n","devops_service":"type Query {\n    \"\"\"\n    The DevOps Service with the specified ARI\n    \"\"\"\n    devOpsService(\n        id: ID! @ARI(type: \"service\", owner: \"graph\")\n    ): DevOpsService @renamed(from:\"service\")\n\n    \"\"\"\n    Retrieve the list of DevOps Service Tiers for the specified site\n    \"\"\"\n    devOpsServiceTiers(cloudId: String! @CloudID): [DevOpsServiceTier!] @renamed(from:\"serviceTiers\")\n\n    \"\"\"\n    Retrieve all services for the site specified by cloudId.\n    \"\"\"\n    devOpsServices(\n        cloudId: String! @CloudID, first: Int = 20, after: String, filter: DevOpsServicesFilterInput\n    ): DevOpsServiceConnection @renamed(from:\"services\")\n\n    \"\"\"\n    Retrieve DevOps Services for the specified ids, the ids can belong to different sites.\n    Services not found are simply not returned.\n    The maximum lookup limit is 100.\n    \"\"\"\n    devOpsServicesById(ids: [ID!]! @ARI(type: \"service\", owner: \"graph\")): [DevOpsService!] @renamed(from:\"servicesById\")\n\n    \"\"\"\n    The DevOps Service Relationship with the specified ARI\n    \"\"\"\n    devOpsServiceRelationship(\n        id: ID! @ARI(type: \"service-relationship\", owner: \"graph\")\n    ): DevOpsServiceRelationship @renamed(from:\"serviceRelationship\")\n\n    \"\"\"\n    For the specified cloudId, retrieve the available Bitbucket repositories to link with a (new) service that has not been created yet.\n    If nameFilter is provided, only repositories with names containing this case-insensitive string will be returned.\n    With an existing service, the caller should use `devOpsService.bitbucketRepositoriesAvailableToLinkWith` field.\n    \"\"\"\n    bitbucketRepositoriesAvailableToLinkWithNewDevOpsService(\n        cloudId: ID!,\n        first: Int = 20,\n        after: String,\n        nameFilter: String): BitbucketRepositoryIdConnection @renamed(from:\"bitbucketRepositoriesAvailableToLinkWith\")\n}\n\ntype Mutation {\n    \"\"\"\n    Create a DevOps Service\n    \"\"\"\n    createDevOpsService(input: CreateDevOpsServiceInput!): CreateDevOpsServicePayload @renamed(from:\"createService\")\n\n    \"\"\"\n    Update a DevOps Service\n    \"\"\"\n    updateDevOpsService(input: UpdateDevOpsServiceInput!): UpdateDevOpsServicePayload @renamed(from:\"updateService\")\n\n    \"\"\"\n    Delete a DevOps Service\n    \"\"\"\n    deleteDevOpsService(input: DeleteDevOpsServiceInput!): DeleteDevOpsServicePayload @renamed(from:\"deleteService\")\n\n    \"\"\"\n    Create a DevOps Service Relationship\n    \"\"\"\n    createDevOpsServiceRelationship(input: CreateDevOpsServiceRelationshipInput!): CreateDevOpsServiceRelationshipPayload @renamed(from:\"createServiceRelationship\")\n\n    \"\"\"\n    Update an DevOps Service Relationship\n    \"\"\"\n    updateDevOpsServiceRelationship(input: UpdateDevOpsServiceRelationshipInput!): UpdateDevOpsServiceRelationshipPayload @renamed(from:\"updateServiceRelationship\")\n\n    \"\"\"\n    Delete a DevOps Service Relationship\n    \"\"\"\n    deleteDevOpsServiceRelationship(input: DeleteDevOpsServiceRelationshipInput!): DeleteDevOpsServiceRelationshipPayload @renamed(from:\"deleteServiceRelationship\")\n\n    \"\"\"\n    Add or change arbitrary (key, value) properties associated with a DevOpsService\n    \"\"\"\n    updateDevOpsServiceEntityProperties(input: UpdateDevOpsServiceEntityPropertiesInput!): UpdateDevOpsServiceEntityPropertiesPayload @renamed(from:\"updateEntityProperties\")\n\n    \"\"\"\n    Remove arbitrary property keys associated with a DevOpsService\n    \"\"\"\n    deleteDevOpsServiceEntityProperties(input: DeleteDevOpsServiceEntityPropertiesInput!): DeleteDevOpsServiceEntityPropertiesPayload @renamed(from:\"deleteEntityProperties\")\n}\n\ntype DevOpsService implements Node @renamed(from:\"Service\") {\n    \"\"\"\n    The DevOps Service ARI\n    \"\"\"\n    id: ID! @ARI(type: \"service\", owner: \"graph\")\n\n    \"\"\"\n    The revision that must be provided when updating a DevOps Service to prevent\n    simultaneous updates from overwriting each other\n    \"\"\"\n    revision: ID!\n\n    \"\"\"\n    The name of the DevOps Service\n    \"\"\"\n    name: String!\n\n    \"\"\"\n    The description of the DevOps Service\n    \"\"\"\n    description: String\n\n    \"\"\"\n    The organisation ID of the DevOps Service\n    \"\"\"\n    organizationId: String!\n\n    \"\"\"\n    The cloud ID of the DevOps Service\n    \"\"\"\n    cloudId: String! @CloudID\n\n    \"\"\"\n    Tier assigned to the DevOps Service\n    \"\"\"\n    serviceTier: DevOpsServiceTier\n\n    \"\"\"\n    The user who created the DevOps Service\n    \"\"\"\n    createdBy: String!\n\n    \"\"\"\n    The datetime when the DevOps Service was created\n    \"\"\"\n    createdAt: DateTime!\n\n    \"\"\"\n    The last user who updated the DevOps Service\n    \"\"\"\n    lastUpdatedBy: String\n\n    \"\"\"\n    The most recent datetime when the DevOps Service was updated\n    \"\"\"\n    lastUpdatedAt: DateTime\n\n    \"\"\"\n    Look up JSON properties of the DevOps Service by keys\n    \"\"\"\n    properties(keys:[String!]!): JSON\n\n    \"\"\"\n    The relationship between this Service and an Opsgenie team\n    \"\"\"\n    opsgenieTeamRelationship: DevOpsServiceAndOpsgenieTeamRelationship\n    @hydrated(service: \"devops_container_relationships\" field: \"opsgenieTeamRelationshipForService\" arguments : [\n        { name : \"id\", value : \"$source.id\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"\n    Relationships with Jira projects associated to this DevOps Service.\n    \"\"\"\n    jiraProjects(\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServiceAndJiraProjectRelationshipFilter\n    ): DevOpsServiceAndJiraProjectRelationshipConnection\n    @hydrated(service: \"devops_container_relationships\" field: \"jiraProjectRelationshipsForService\" arguments : [\n        { name : \"id\", value : \"$source.id\"},\n        { name : \"first\", value : \"$argument.first\"},\n        { name : \"after\", value : \"$argument.after\"},\n        { name : \"filter\", value : \"$argument.filter\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"\n    Relationships with VCS repositories associated to this DevOps Service\n    \"\"\"\n    repositoryRelationships(\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServiceAndRepositoryRelationshipFilter,\n        sort: DevOpsServiceAndRepositoryRelationshipSort\n    ): DevOpsServiceAndRepositoryRelationshipConnection\n    @hydrated(service: \"devops_container_relationships\" field: \"repositoryRelationshipsForService\" arguments : [\n        { name : \"id\", value : \"$source.id\"},\n        { name : \"first\", value : \"$argument.first\"},\n        { name : \"after\", value : \"$argument.after\"},\n        { name : \"filter\", value : \"$argument.filter\"},\n        { name : \"sort\", value : \"$argument.sort\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"\n    Relationship with a DevOps Service that contains this DevOps service\n    \"\"\"\n    containedByDevOpsServiceRelationship: DevOpsServiceRelationship @renamed(from:\"containedByServiceRelationship\")\n\n    \"\"\"\n    Relationships with DevOps Services that this DevOps Service contains\n    \"\"\"\n    containsDevOpsServiceRelationships(first: Int = 20, after: String): DevOpsServiceRelationshipConnection @renamed(from:\"containsServiceRelationships\")\n\n    \"\"\"\n    Relationships with DevOps Services that are depend on this DevOps Service\n    \"\"\"\n    dependedOnByDevOpsServiceRelationships(first: Int = 20, after: String): DevOpsServiceRelationshipConnection @renamed(from:\"dependedOnByServiceRelationships\")\n\n    \"\"\"\n    Relationships with DevOps Services that this DevOps Service depends on\n    \"\"\"\n    dependsOnDevOpsServiceRelationships(first: Int = 20, after: String): DevOpsServiceRelationshipConnection @renamed(from:\"dependsOnServiceRelationships\")\n\n    \"\"\"\n    Services that are available to be linked with via createDevOpsServiceRelationship\n    \"\"\"\n    servicesAvailableToLinkWith(\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServicesFilterInput\n    ) : DevOpsServiceConnection\n    @hydrated(service: \"devops_service\" field: \"services\" arguments : [\n        { name : \"cloudId\", value : \"$source.cloudId\"},\n        { name : \"first\", value : \"$argument.first\"},\n        { name : \"after\", value : \"$argument.after\"},\n        { name : \"filter\", value : \"$argument.filter\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"\n    Opsgenie teams that are available to be linked with via createDevOpsServiceAndOpsgenieTeamRelationship\n    \"\"\"\n    opsgenieTeamsAvailableToLinkWith(\n        first: Int = 20,\n        after: String\n    ) : OpsgenieTeamConnection\n    @hydrated(service: \"opsgenie\" field: \"opsgenie.opsgenieTeamsWithServiceModificationPermissions\" arguments : [\n        { name : \"cloudId\", value : \"$source.cloudId\"},\n        { name : \"first\", value : \"$argument.first\"},\n        { name : \"after\", value : \"$argument.after\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"\n    Bitbucket repositories that are available to be linked with via createDevOpsServiceAndRepositoryRelationship\n    If nameFilter is provided, only repositories with names containing this case-insensitive string will be returned.\n    For case of creating a new service (that has not been created), consumer can use `bitbucketRepositoriesAvailableToLinkWithNewDevOpsService` query\n    \"\"\"\n    bitbucketRepositoriesAvailableToLinkWith(\n        first: Int = 20,\n        after: String,\n        nameFilter: String\n    ) : BitbucketRepositoryIdConnection\n    @hydrated(service: \"devops_service\" field: \"bitbucketRepositoriesAvailableToLinkWith\" arguments : [\n        { name : \"cloudId\", value : \"$source.cloudId\"},\n        { name : \"first\", value : \"$argument.first\"},\n        { name : \"after\", value : \"$argument.after\"},\n        { name : \"nameFilter\", value : \"$argument.nameFilter\"}] identifiedBy : \"id\"\n    )\n}\n\n\"\"\"The connection object for a collection of Services.\"\"\"\ntype DevOpsServiceConnection @renamed(from:\"ServiceConnection\") {\n    edges: [DevOpsServiceEdge]\n    nodes: [DevOpsService]\n    pageInfo: PageInfo!\n    totalCount: Int\n}\n\ntype DevOpsServiceEdge @renamed(from:\"ServiceEdge\") {\n    cursor: String!\n    node: DevOpsService\n}\n\ntype DevOpsServiceRelationship implements Node @renamed(from:\"ServiceRelationship\") {\n    \"\"\"\n    The DevOps Service Relationship ARI\n    \"\"\"\n    id: ID! @ARI(type: \"service-relationship\", owner: \"graph\")\n\n    \"\"\"\n    The revision that must be provided when updating a DevOps Service relationship to prevent\n    simultaneous updates from overwriting each other\n    \"\"\"\n    revision: ID!\n\n    \"\"\"\n    The organization ID of the DevOps Service Relationship\n    \"\"\"\n    organizationId: String!\n\n    \"\"\"\n    The cloud ID of the DevOps Service Relationship\n    \"\"\"\n    cloudId: String!\n\n    \"\"\"\n    The inter-service relationship type of the DevOps Service Relationship\n    \"\"\"\n    type: DevOpsServiceRelationshipType!\n\n    \"\"\"\n    The start service of the DevOps Service Relationship\n    \"\"\"\n    startService: DevOpsService\n\n    \"\"\"\n    The end service of the DevOps Service Relationship\n    \"\"\"\n    endService: DevOpsService\n\n    \"\"\"\n    The description of the DevOps Service Relationship\n    \"\"\"\n    description: String\n\n    \"\"\"\n    The user who created the DevOps Service Relationship\n    \"\"\"\n    createdBy: String!\n\n    \"\"\"\n    The datetime when the DevOps Service Relationship was created\n    \"\"\"\n    createdAt: DateTime!\n\n    \"\"\"\n    The last user who updated the DevOps Service Relationship\n    \"\"\"\n    lastUpdatedBy: String\n\n    \"\"\"\n    The most recent datetime when the DevOps Service Relationship was updated\n    \"\"\"\n    lastUpdatedAt: DateTime\n\n    \"\"\"\n    Look up JSON properties of the DevOps Service by keys\n    \"\"\"\n    properties(keys:[String!]!): JSON\n}\n\n\"\"\"\nThe connection object for a collection of DevOps Service relationships.\n\"\"\"\ntype DevOpsServiceRelationshipConnection @renamed(from:\"ServiceRelationshipConnection\") {\n    edges: [DevOpsServiceRelationshipEdge]\n    nodes: [DevOpsServiceRelationship]\n    pageInfo: PageInfo!\n    totalCount: Int\n}\n\ntype DevOpsServiceRelationshipEdge @renamed(from:\"ServiceRelationshipEdge\") {\n    cursor: String!\n    node: DevOpsServiceRelationship\n}\n\n\"\"\"\nThe request input for creating a new DevOps Service\n\"\"\"\ninput CreateDevOpsServiceInput @renamed(from:\"CreateServiceInput\") {\n    name: String!\n    description: String\n    properties: [DevOpsServiceEntityPropertyInput!]\n    cloudId: String! @CloudID\n\n    \"\"\"\n    Tier assigned to the DevOps Service\n    \"\"\"\n    serviceTier: DevOpsServiceTierInput!\n}\n\n\"\"\"\nThe request input for updating a DevOps Service\n\"\"\"\ninput UpdateDevOpsServiceInput @renamed(from:\"UpdateServiceInput\") {\n    \"\"\"\n    The DevOps Service ARI\n    \"\"\"\n    id: ID! @ARI(type: \"service\", owner: \"graph\")\n\n    \"\"\"\n    The revision that must be provided when updating a DevOps Service to prevent\n    simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n\n    \"\"\"\n    The new name assigned to the DevOps Service\n    \"\"\"\n    name: String!\n\n    \"\"\"\n    The new description assigned to the DevOps Service\n    \"\"\"\n    description: String\n\n    \"\"\"\n    The properties of the DevOps Service to be updated\n    \"\"\"\n    properties: [DevOpsServiceEntityPropertyInput!]\n\n    \"\"\"\n    The id of the Tier assigned to the Service\n    \"\"\"\n    serviceTier: ID!\n}\n\n\"\"\"\nThe request input for deleting a DevOps Service\n\"\"\"\ninput DeleteDevOpsServiceInput @renamed(from:\"DeleteServiceInput\") {\n    id: ID! @ARI(type: \"service\", owner: \"graph\")\n}\n\ninput DevOpsServiceTierInput @renamed(from:\"ServiceTierInput\") {\n    level: Int!\n}\n\n\"\"\"\nThe request input for creating a new DevOps Service Relationship\n\"\"\"\ninput CreateDevOpsServiceRelationshipInput @renamed(from:\"CreateServiceRelationshipInput\") {\n    \"\"\"\n    The Service ARI of the start node of the relationship\n    \"\"\"\n    startId: ID! @ARI(type: \"service\", owner: \"graph\")\n\n    \"\"\"\n    The Service ARI of the end node of the relationship\n    \"\"\"\n    endId: ID! @ARI(type: \"service\", owner: \"graph\")\n\n    \"\"\"\n    The inter-service relationship type\n    \"\"\"\n    type: DevOpsServiceRelationshipType!\n\n    \"\"\"\n    The description of the relationship\n    \"\"\"\n    description: String\n\n    \"\"\"\n    The properties of the relationship\n    \"\"\"\n    properties: [DevOpsServiceEntityPropertyInput!]\n}\n\n\"\"\"\nThe request input for updating a DevOps Service Relationship\n\"\"\"\ninput UpdateDevOpsServiceRelationshipInput @renamed(from:\"UpdateServiceRelationshipInput\") {\n    \"\"\"\n    The DevOps Service Relationship ARI\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The revision that must be provided when updating a DevOps Service Relationship to prevent\n    simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n    \"\"\"\n    The description of the DevOps Service Relationship\n    \"\"\"\n    description: String\n}\n\n\"\"\"\nThe request input for deleting a DevOps Service Relationship\n\"\"\"\ninput DeleteDevOpsServiceRelationshipInput @renamed(from:\"DeleteServiceRelationshipInput\") {\n    \"\"\"\n    The ARI of the DevOps Service Relationship\n    \"\"\"\n    id: ID! @ARI(type: \"service-relationship\", owner: \"graph\")\n}\n\n\"\"\"\nThe response payload of creating a new DevOps Service\n\"\"\"\ntype CreateDevOpsServicePayload implements Payload @renamed(from:\"CreateServicePayload\") {\n    \"\"\"\n    The result of whether a new DevOps Service is created successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during the DevOps Service creation\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"\n    The created DevOps Service\n    \"\"\"\n    service: DevOpsService\n}\n\n\"\"\"\nThe response payload of updating a DevOps Service\n\"\"\"\ntype UpdateDevOpsServicePayload implements Payload @renamed(from:\"UpdateServicePayload\") {\n    \"\"\"\n    The result of whether the DevOps Service is updated successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during DevOps Service update\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"\n    The updated DevOps Service\n    \"\"\"\n    service: DevOpsService\n}\n\n\"\"\"\nThe response payload of deleting a DevOps Service\n\"\"\"\ntype DeleteDevOpsServicePayload implements Payload @renamed(from:\"DeleteServicePayload\") {\n    \"\"\"\n    The result of whether the DevOps Service is deleted successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during DevOps Service deletion\n    \"\"\"\n    errors: [MutationError!]\n}\n\ntype CreateDevOpsServiceRelationshipPayload implements Payload @renamed(from:\"CreateServiceRelationshipPayload\") {\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"\"\"The created inter-service relationship\"\"\"\n    serviceRelationship: DevOpsServiceRelationship\n}\n\n\"\"\"\nThe response payload for updating a inter DevOps Service Relationship\n\"\"\"\ntype UpdateDevOpsServiceRelationshipPayload implements Payload @renamed(from:\"UpdateServiceRelationshipPayload\") {\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"\"\"The updated inter-service relationship\"\"\"\n    serviceRelationship: DevOpsServiceRelationship\n}\n\ntype DeleteDevOpsServiceRelationshipPayload implements Payload @renamed(from:\"DeleteServiceRelationshipPayload\") {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n\ntype DevOpsServiceTier @renamed(from:\"ServiceTier\") {\n    id: ID!\n    \"\"\"\n    The level of the tier. Lower numbers are more important\n    \"\"\"\n    level:Int!\n\n    \"\"\"\n    The translation key for the name. Only present when name is null\n    \"\"\"\n    nameKey: String\n\n    \"\"\"\n    The name of the tier, if set by the user\n    \"\"\"\n    name: String\n\n    \"\"\"\n    Description of the tier level and the standards that a DevOps Service at this tier should meet\n    \"\"\"\n    description: String\n}\n\n\"\"\"\nThe request input for DevOps Service Entity Property\n\"\"\"\ninput DevOpsServiceEntityPropertyInput @renamed(from:\"EntityPropertyInput\") {\n    \"\"\"\n    Keys must:\n    * Contain only the characters a-z, A-Z, 0-9, _ and -\n    * Be no greater than 80 characters long\n    * Not begin with an underscore\n    \"\"\"\n    key: String!\n\n    \"\"\"\n    * Can be no larger than 5KB for all properties for an entity\n    * Can not be `null`\n    \"\"\"\n    value: JSON!\n}\n\n\"\"\"\nThe request input for updating DevOps Service Entity Properties\n\"\"\"\ninput UpdateDevOpsServiceEntityPropertiesInput @renamed(from:\"UpdateEntityPropertiesInput\") {\n    \"\"\"\n    The ARI of the DevOps Service\n    \"\"\"\n    id: ID! @ARI(type: \"service\", owner: \"graph\")\n\n    properties: [DevOpsServiceEntityPropertyInput!]!\n}\n\n\"\"\"\nThe request input for deleting DevOps Service Entity Properties\n\"\"\"\ninput DeleteDevOpsServiceEntityPropertiesInput @renamed(from:\"DeleteEntityPropertiesInput\") {\n    \"\"\"\n    The ARI of the DevOps Service\n    \"\"\"\n    id: ID! @ARI(type: \"service\", owner: \"graph\")\n\n    \"\"\"\n    The properties with the given keys in the list will be removed from the DevOps Service\n    \"\"\"\n    keys: [String!]!\n}\n\n\"\"\"\nThe response payload of updating DevOps Service Entity Properties\n\"\"\"\ntype UpdateDevOpsServiceEntityPropertiesPayload implements Payload @renamed(from:\"UpdateEntityPropertiesPayload\") {\n    \"\"\"\n    The result of whether DevOps Service Entity Properties have been successfully updated or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The errors occurred during DevOps Service Entity Properties update\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"\n    Look up JSON properties of the service by keys\n    \"\"\"\n    properties(keys:[String!]!): JSON\n}\n\n\"\"\"\nThe response payload of deleting DevOps Service Entity Properties\n\"\"\"\ntype DeleteDevOpsServiceEntityPropertiesPayload implements Payload @renamed(from:\"DeleteEntityPropertiesPayload\") {\n    \"\"\"\n    The result of whether DevOps Service Entity Properties have been successfully deleted or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The errors occurred during DevOps Service Entity Properties delete\n    \"\"\"\n    errors: [MutationError!]\n}\n\ntype BitbucketRepositoryIdConnection {\n    edges: [BitbucketRepositoryIdEdge]\n    pageInfo: PageInfo!\n}\n\ntype BitbucketRepositoryIdEdge {\n    cursor: String!\n    node: BitbucketRepository\n    @hydrated(service: \"bitbucket\" field: \"bitbucket.bitbucketRepository\" arguments : [\n        { name : \"id\", value : \"$source.node\"}] identifiedBy : \"id\"\n    )\n}\n\n##################### Filtering and Sorting Inputs #####################\n\n\"\"\"\nThe filtering input for retrieving services. tierLevelIn must not be empty if provided.\n\"\"\"\ninput DevOpsServicesFilterInput @renamed(from:\"ServicesFilterInput\") {\n    \"\"\"\n    Case insensitive string to filter service names with\n    \"\"\"\n    nameContains: String\n    \"\"\"\n    Integer numbers to filter service tier levels with\n    \"\"\"\n    tierLevelIn: [Int!]\n}\n\n##################### Enums #####################\n\nenum DevOpsServiceRelationshipType @renamed(from:\"ServiceRelationshipType\") {\n    DEPENDS_ON\n    CONTAINS\n}\n","identity":"\"\"\"\nThere are 3 types of accounts :\n\n* AtlassianAccountUser\n* this represents a real person that has an account in a wide range of Atlassian products\n\n* CustomerUser\n* This represents a real person who is a customer of an organisation who uses an Atlassian product to provide service to their customers.\nCurrently, this isused within Jira Service Desk for external service desks.\n\n* AppUser\n* this does not represent a real person but rather the identity that backs an installed application\n\n\"\"\"\ninterface User @scopes(required: [IDENTITY_ATLASSIAN_EXTERNAL]) {\n    \"The account ID for the user.\"\n    accountId: ID!\n    \"The lifecycle status of the account\"\n    accountStatus: AccountStatus!\n    \"\"\"\n    The display name of the user. This should be used when rendering a user textually within content.\n    If the user has restricted visibility of their name, their nickname will be\n    displayed as a substitute value.\n    \"\"\"\n    name: String!\n    \"\"\"\n    The absolute URI (RFC3986) to the avatar name of the user. This should be used when rendering a user graphically within content.\n    If the user has restricted visibility of their avatar or has not set\n    an avatar, an alternative URI will be provided as a substitute value.\n    \"\"\"\n    picture: URL!\n}\n\ninterface LocalizationContext @scopes(required: [IDENTITY_ATLASSIAN_EXTERNAL]) {\n    \"The timezone of the user as defined in the tz database https://www.iana.org/time-zones.\"\n    zoneinfo: String\n    \"The locale of user in RFC5646 format.\"\n    locale: String\n}\n\n\"\"\"\nThis represents a real person that has an account in a wide range of Atlassian products\n\nSee the documentation on the `User` and `LocalizationContext` for more details\n\"\"\"\ntype AtlassianAccountUser implements User & LocalizationContext @scopes(required: [IDENTITY_ATLASSIAN_EXTERNAL]) {\n    accountId: ID!\n    accountStatus: AccountStatus!\n    name: String!\n    picture: URL!\n    email: String\n    zoneinfo: String\n    locale: String\n}\n\n\"\"\"\nThis represents a real person that has an free account within the Jira Service Desk product\n\nSee the documentation on the `User` and `LocalizationContext` for more details\n\"\"\"\ntype CustomerUser implements User & LocalizationContext @scopes(required: [IDENTITY_ATLASSIAN_EXTERNAL]) {\n    accountId: ID!\n    accountStatus: AccountStatus!\n    name: String!\n    picture: URL!\n    email: String\n    zoneinfo: String\n    locale: String\n}\n\n\"\"\"\nThis does not represent a real person but rather the identity that backs an installed application\n\nSee the documentation on the `User` for more details\n\"\"\"\ntype AppUser implements User @scopes(required: [IDENTITY_ATLASSIAN_EXTERNAL]) {\n    accountId: ID!\n    accountStatus: AccountStatus!\n    name: String!\n    picture: URL!\n}\n\n\"\"\"\"\n    The lifecycle status of the account\n\"\"\"\nenum AccountStatus {\n    \"\"\"\n    The account is an active account\n    \"\"\"\n    active\n    \"\"\"\n    The account is no longer an active account\n    \"\"\"\n    inactive\n    \"\"\"\n    The account has been closed\n    \"\"\"\n    closed\n}\n\n\"\"\"\nThis type contains information about the currently logged in user\n\"\"\"\ntype AuthenticationContext {\n    \"\"\"\n    Information about the currently logged in user.\n    \"\"\"\n    user: User\n}\n\ntype Query {\n    \"\"\"\n    This returns information about the currently logged in user.  If there is no logged in user\n    then there really wont be much information to show.\n    \"\"\"\n    me: AuthenticationContext!\n    \"\"\"\n    Given an account id this will return user profile information with applied privacy controls of the caller.\n\n    Its important to remember that privacy controls are applied in terms of the caller.  A user with\n    a certain accountId may exist but the current caller may not have the right to view their details.\n    \"\"\"\n    user(accountId: ID!): User\n    \"\"\"\n    Given a list of account ids this will return user profile information with applied privacy controls of the caller.\n\n    Its important to remember that privacy controls are applied in terms of the caller.  A user with\n    a certain accountId may exist but the current caller may not have the right to view their details.\n\n    A maximum of 90 `accountIds` can be asked for at the one time.\n    \"\"\"\n    users(accountIds: [ID!]!): [User!]\n}\n","devops_container_relationships":"type Mutation {\n    \"\"\"\n    Create a relationship between a DevOps Service and an Opsgenie team.\n\n    A DevOps Service can be related to no more than one team. If you attempt to relate more than one team\n    with a DevOps Service, this mutation will fail with a SERVICE_AND_OPSGENIE_TEAM_RELATIONSHIP_TOO_MANY_TEAMS error.\n\n    A team can be related to no more than 1,000 DevOps Services. If you attempt to relate too many services\n    with a team, this mutation will fail with a SERVICE_AND_OPSGENIE_TEAM_RELATIONSHIP_TOO_MANY_SERVICES error.\n    \"\"\"\n    createDevOpsServiceAndOpsgenieTeamRelationship(\n        input: CreateDevOpsServiceAndOpsgenieTeamRelationshipInput!\n    ): CreateDevOpsServiceAndOpsgenieTeamRelationshipPayload @renamed(from:\"createServiceAndOpsgenieTeamRelationship\")\n\n    \"\"\"\n    Update description for a relationship between a DevOps Service and an Opsgenie team.\n    \"\"\"\n    updateDevOpsServiceAndOpsgenieTeamRelationship(\n        input: UpdateDevOpsServiceAndOpsgenieTeamRelationshipInput!\n    ): UpdateDevOpsServiceAndOpsgenieTeamRelationshipPayload @renamed(from:\"updateServiceAndOpsgenieTeamRelationship\")\n\n    \"\"\"\n    Delete a relationship between a DevOps Service and an Opsgenie team\n    \"\"\"\n    deleteDevOpsServiceAndOpsgenieTeamRelationship(\n        input: DeleteDevOpsServiceAndOpsgenieTeamRelationshipInput!\n    ): DeleteDevOpsServiceAndOpsgenieTeamRelationshipPayload @renamed(from:\"deleteServiceAndOpsgenieTeamRelationship\")\n\n    \"\"\"Add or change arbitrary (key, value) properties associated with an entity (service or relationship)\"\"\"\n    updateDevOpsContainerRelationshipEntityProperties(\n        input: UpdateDevOpsContainerRelationshipEntityPropertiesInput!\n    ): UpdateDevOpsContainerRelationshipEntityPropertiesPayload @renamed(from:\"updateEntityProperties\")\n\n    \"\"\"Remove arbitrary property keys associated with an entity (service or relationship)\"\"\"\n    deleteDevOpsContainerRelationshipEntityProperties(\n        input: DeleteDevOpsContainerRelationshipEntityPropertiesInput!\n    ): DeleteDevOpsContainerRelationshipEntityPropertiesPayload @renamed(from:\"deleteEntityProperties\")\n\n    \"\"\"\n    Creates a relationships between a DevOps Service and a Jira project\n    \"\"\"\n    createDevOpsServiceAndJiraProjectRelationship(input: CreateDevOpsServiceAndJiraProjectRelationshipInput!)\n    : CreateDevOpsServiceAndJiraProjectRelationshipPayload @renamed(from:\"createServiceAndJiraProjectRelationship\")\n\n    \"\"\"\n    Updates a relationship between a DevOps Service and a Jira project.\n    \"\"\"\n    updateDevOpsServiceAndJiraProjectRelationship(input: UpdateDevOpsServiceAndJiraProjectRelationshipInput!)\n    : UpdateDevOpsServiceAndJiraProjectRelationshipPayload @renamed(from:\"updateServiceAndJiraProjectRelationship\")\n\n    \"\"\"\n    Deletes the relationship between a DevOps Service and a Jira project\n    \"\"\"\n    deleteDevOpsServiceAndJiraProjectRelationship(input: DeleteDevOpsServiceAndJiraProjectRelationshipInput!)\n    : DeleteDevOpsServiceAndJiraProjectRelationshipPayload @renamed(from:\"deleteServiceAndJiraProjectRelationship\")\n\n    \"\"\"\n    Create a relationship between a DevOps Service and a Repository.\n\n    A single service may be associated with at most 300 repositories. If too many repositories are associated with a\n    DevOps Service, this mutation will fail with a SERVICE_AND_REPOSITORY_RELATIONSHIP_TOO_MANY_REPOSITORIES error.\n\n    A single Repository may be associated with at most 300 DevOps Services. If too many DevOps Services are associated with a\n    Repository, this mutation will fail with a SERVICE_AND_REPOSITORY_RELATIONSHIP_TOO_MANY_SERVICES error.\n    \"\"\"\n    createDevOpsServiceAndRepositoryRelationship(input: CreateDevOpsServiceAndRepositoryRelationshipInput!)\n    : CreateDevOpsServiceAndRepositoryRelationshipPayload @renamed(from:\"createServiceAndRepositoryRelationship\")\n\n    \"\"\"\n    Update a relationship between a DevOps Service and a repository\n    \"\"\"\n    updateDevOpsServiceAndRepositoryRelationship(input: UpdateDevOpsServiceAndRepositoryRelationshipInput!)\n    : UpdateDevOpsServiceAndRepositoryRelationshipPayload @renamed(from:\"updateServiceAndRepositoryRelationship\")\n\n    \"\"\"\n    Delete a relationship between a DevOps Service and a Repository\n    \"\"\"\n    deleteDevOpsServiceAndRepositoryRelationship(input: DeleteDevOpsServiceAndRepositoryRelationshipInput!)\n    : DeleteDevOpsServiceAndRepositoryRelationshipPayload @renamed(from:\"deleteServiceAndRepositoryRelationship\")\n\n    \"\"\"\n    Create a relationship between a Jira project and an Opsgenie team.\n    \"\"\"\n    createJiraProjectAndOpsgenieTeamRelationship(\n        input: CreateJiraProjectAndOpsgenieTeamRelationshipInput!\n    ): CreateJiraProjectAndOpsgenieTeamRelationshipPayload\n\n    \"\"\"\n    Update a relationship between a Jira project and an Opsgenie team.\n    \"\"\"\n    updateJiraProjectAndOpsgenieTeamRelationship(\n        input: UpdateJiraProjectAndOpsgenieTeamRelationshipInput!\n    ): UpdateJiraProjectAndOpsgenieTeamRelationshipPayload\n\n    \"\"\"\n    Delete a relationship between a Jira project and an Opsgenie team.\n    \"\"\"\n    deleteJiraProjectAndOpsgenieTeamRelationship(\n        input: DeleteJiraProjectAndOpsgenieTeamRelationshipInput!\n    ): DeleteJiraProjectAndOpsgenieTeamRelationshipPayload\n\n    \"\"\"\n    Create a relationship between a Jira project and a repository.\n\n    A single Jira project may be associated with at most 100 repositories. If too many repositories are associated with a\n    Jira project, this mutation will fail with a TOO_MANY_EXPLICIT_REPOSITORY_RELATIONSHIPS_FOR_PROJECT error.\n\n    A single Repository may be associated with at most 100 Jira projects. If too many Jira projects are associated with a\n    repository, this mutation will fail with a TOO_MANY_EXPLICIT_PROJECT_RELATIONSHIPS_FOR_REPOSITORY error.\n    \"\"\"\n    createJiraProjectAndRepositoryRelationship(input: CreateJiraProjectAndRepositoryRelationshipInput!\n    ): CreateJiraProjectAndRepositoryRelationshipPayload\n\n    \"\"\"\n    Update a relationship between a Jira project and a repository.\n    \"\"\"\n    updateJiraProjectAndRepositoryRelationship(input: UpdateJiraProjectAndRepositoryRelationshipInput!\n    ): UpdateJiraProjectAndRepositoryRelationshipPayload\n\n    \"\"\"\n    Delete a relationship between a Jira project and a repository.\n    \"\"\"\n    deleteJiraProjectAndRepositoryRelationship(input: DeleteJiraProjectAndRepositoryRelationshipInput!\n    ): DeleteJiraProjectAndRepositoryRelationshipPayload\n}\n\ntype Query {\n    \"\"\"\n    Returns the Opsgenie Team relationship linked to the DevOps Service with the specified id (service ARI).\n    \"\"\"\n    opsgenieTeamRelationshipForDevOpsService(\n        id: ID! @ARI(type: \"service\", owner: \"graph\")\n    ): DevOpsServiceAndOpsgenieTeamRelationship @renamed(from:\"opsgenieTeamRelationshipForService\")\n\n    \"\"\"\n    Returns the service relationships linked to the Opsgenie team with the specified id (Opsgenie team ARI).\n    \"\"\"\n    devOpsServiceRelationshipsForOpsgenieTeam(\n        id: ID! @ARI(owner: \"opsgenie\", type: \"team\"),\n        first: Int = 20,\n        after: String\n    ): DevOpsServiceAndOpsgenieTeamRelationshipConnection @renamed(from:\"serviceRelationshipsForOpsgenieTeam\")\n\n    \"\"\"\n    Returns the relationship between DevOps Service and Opsgenie team with the specified id (graph service_and_opsgenie_team ARI)\n    \"\"\"\n    devOpsServiceAndOpsgenieTeamRelationship(\n        id: ID! @ARI(type: \"service-and-operations-team-relationship\", owner: \"graph\")\n    ): DevOpsServiceAndOpsgenieTeamRelationship @renamed(from:\"serviceAndOpsgenieTeamRelationship\")\n\n    \"\"\"\n    Return the connection entity for DevOps Service relationships for the specified Jira project, according to the specified\n    pagination, filtering and sorting.\n    \"\"\"\n    devOpsServiceRelationshipsForJiraProject(\n        id: ID! @ARI(type: \"project\", owner: \"jira\"),\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServiceAndJiraProjectRelationshipFilter\n    ): DevOpsServiceAndJiraProjectRelationshipConnection @renamed(from:\"serviceRelationshipsForJiraProject\")\n\n    \"\"\"\n    Return the connection entity for Jira Project relationships for the specified DevOps Service, according to the specified\n    pagination, filtering and sorting.\n    \"\"\"\n    jiraProjectRelationshipsForService(\n        id: ID! @ARI(type: \"service\", owner: \"graph\"),\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServiceAndJiraProjectRelationshipFilter\n    ): DevOpsServiceAndJiraProjectRelationshipConnection @renamed(from:\"jiraProjectRelationshipsForService\")\n\n    \"\"\"\n    Return the relationship between DevOps Service and Jira Project\n    \"\"\"\n    devOpsServiceAndJiraProjectRelationship(id: ID!): DevOpsServiceAndJiraProjectRelationship @renamed(from:\"serviceAndJiraProjectRelationship\")\n\n    \"\"\"\n    Returns the relationship between DevOps Service and Repository\n    \"\"\"\n    devOpsServiceAndRepositoryRelationship(\n        id: ID! @ARI(type: \"service-and-vcs-repository-relationship\", owner: \"graph\")\n    ): DevOpsServiceAndRepositoryRelationship @renamed(from:\"serviceAndRepositoryRelationship\")\n\n    \"\"\"\n    Returns the service relationships linked to the repository with the specified id.\n    The ID is either a Bitbucket repository ARI, or the ID of a third-party repository.\n    \"\"\"\n    devOpsServiceRelationshipsForRepository(\n        id: ID!,\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServiceAndRepositoryRelationshipFilter,\n        sort: DevOpsServiceAndRepositoryRelationshipSort\n    ): DevOpsServiceAndRepositoryRelationshipConnection @renamed(from:\"serviceRelationshipsForRepository\")\n\n    \"\"\"Returns the repository relationships linked to the service with the specified id (service ARI).\"\"\"\n    repositoryRelationshipsForDevOpsService(\n        id: ID! @ARI(type: \"service\", owner: \"graph\"),\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServiceAndRepositoryRelationshipFilter,\n        sort: DevOpsServiceAndRepositoryRelationshipSort\n    ): DevOpsServiceAndRepositoryRelationshipConnection @renamed(from:\"repositoryRelationshipsForService\")\n\n    \"\"\"Returns the Jira project relationships linked to the Opsgenie team with the specified id (Opsgenie team ARI).\"\"\"\n    jiraProjectRelationshipsForOpsgenieTeam(\n        id: ID! @ARI(owner: \"opsgenie\", type: \"team\"),\n        first: Int = 20,\n        after: String\n    ): JiraProjectAndOpsgenieTeamRelationshipConnection\n\n    \"\"\"Returns the Opsgenie team relationships linked to the Jira project with the specified id (Jira project ARI).\"\"\"\n    opsgenieTeamRelationshipsForJiraProject(\n        id: ID! @ARI(type: \"project\", owner: \"jira\"),\n        first: Int = 20,\n        after: String\n    ): JiraProjectAndOpsgenieTeamRelationshipConnection\n\n    \"\"\"Retrieve the specified Jira project and Opsgenie team relationship.\"\"\"\n    jiraProjectAndOpsgenieTeamRelationship(\n        id: ID! @ARI(type: \"jira-project-and-operations-team-relationship\", owner: \"graph\")\n    ): JiraProjectAndOpsgenieTeamRelationship\n}\n\n##################### Mutation Inputs #####################\n\n\"\"\"\nThe request input for creating a relationship between a DevOps Service and an Opsgenie Team\n\"\"\"\ninput CreateDevOpsServiceAndOpsgenieTeamRelationshipInput @renamed(from:\"CreateServiceAndOpsgenieTeamRelationshipInput\") {\n    \"\"\"\n    We can't infer this from the service ARI since the container association registry doesn't own the service ARI -\n    therefore we have to treat it as opaque.\n    \"\"\"\n    cloudId: ID! @CloudID\n\n    \"\"\"\n    The ARI of the DevOps Service.\n    \"\"\"\n    serviceId: ID! @ARI(type: \"service\", owner: \"graph\")\n\n    \"\"\"\n    The ARI of the Opsgenie Team\n\n    The Opsgenie team must exist on the same site as the service. If it doesn't, the create will fail\n    with a OPSGENIE_TEAM_ID_INVALID error.\n    \"\"\"\n    opsgenieTeamId: ID! @ARI(owner: \"opsgenie\", type: \"team\")\n\n    \"\"\"\n    An optional description of the relationship.\n    \"\"\"\n    description: String\n\n    \"\"\"\n    Optional properties of the relationship.\n    \"\"\"\n    properties: [DevOpsContainerRelationshipEntityPropertyInput!]\n}\n\n\"\"\"\nThe request input for updating a relationship between a DevOps Service and an Opsgenie Team\n\"\"\"\ninput UpdateDevOpsServiceAndOpsgenieTeamRelationshipInput @renamed(from:\"UpdateServiceAndOpsgenieTeamRelationshipInput\") {\n    \"\"\"\n    The DevOps Graph Service_And_Opsgenie_Team relationship ARI\n    \"\"\"\n    id: ID! @ARI(type: \"service-and-operations-team-relationship\", owner: \"graph\")\n\n    \"\"\"\n    The revision that must be provided when updating a relationship between DevOps Service and Opsgenie Team to prevent\n    simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n\n    \"\"\"\n    The new description assigned to the relationship.\n    \"\"\"\n    description: String\n}\n\n\"\"\"\nThe request input for deleting a relationship between a DevOps Service and an Opsgenie Team\n\"\"\"\ninput DeleteDevOpsServiceAndOpsgenieTeamRelationshipInput @renamed(from:\"DeleteServiceAndOpsgenieTeamRelationshipInput\") {\n    id: ID! @ARI(type: \"service-and-operations-team-relationship\", owner: \"graph\")\n}\n\ninput DevOpsContainerRelationshipEntityPropertyInput @renamed(from:\"EntityPropertyInput\") {\n    \"\"\"\n    Keys must:\n    * Contain only the characters a-z, A-Z, 0-9, _ and -.\n    * Be no greater than 80 characters long.\n    * Not begin with an underscore.\n    \"\"\"\n    key: String!\n\n    \"\"\"\n    * Can be no larger than 5KB for all properties for an entity.\n    * Can not be `null`.\n    \"\"\"\n    value: JSON!\n}\n\n\"\"\"\nThe request input for updating relationship properties\n\"\"\"\ninput UpdateDevOpsContainerRelationshipEntityPropertiesInput @renamed(from:\"UpdateEntityPropertiesInput\") {\n    \"\"\"\n    The ARI of the relationship entity\n    \"\"\"\n    id: ID!\n\n    properties: [DevOpsContainerRelationshipEntityPropertyInput!]!\n}\n\n\"\"\"\nThe request input for deleting relationship properties\n\"\"\"\ninput DeleteDevOpsContainerRelationshipEntityPropertiesInput @renamed(from:\"DeleteEntityPropertiesInput\") {\n    \"\"\"\n    The ARI of the any of the relationship entity\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    The properties with the given keys in the list will be removed from the relationship\n    \"\"\"\n    keys: [String!]!\n}\n\n##################### Mutation Input - Service And Jira Project Relationship #####################\n\n\"\"\"\nThe request input for creating a relationship between a DevOps Service and an Jira Project.\n\"\"\"\ninput CreateDevOpsServiceAndJiraProjectRelationshipInput @renamed(from:\"CreateServiceAndJiraProjectRelationshipInput\") {\n    \"\"\"\n    The ID of the site of the service and the Jira project.\n    \"\"\"\n    cloudId: ID! @CloudID\n    \"\"\"\n    The Jira project ARI\n    \"\"\"\n    jiraProjectId: ID! @ARI(type: \"project\", owner: \"jira\")\n    \"\"\"\n    The ARI of the DevOps Service.\n    \"\"\"\n    serviceId: ID! @ARI(type: \"service\", owner: \"graph\")\n    \"\"\"\n    The type of the relationship.\n    \"\"\"\n    relationshipType: DevOpsServiceAndJiraProjectRelationshipType!\n\n    \"\"\"An optional description of the relationship.\"\"\"\n    description: String\n\n    \"\"\"Optional properties of the relationship.\"\"\"\n    properties: [DevOpsContainerRelationshipEntityPropertyInput!]\n}\n\n\"\"\"\nThe request input for updating a relationship between a DevOps Service and Jira Project\n\"\"\"\ninput UpdateDevOpsServiceAndJiraProjectRelationshipInput @renamed(from:\"UpdateServiceAndJiraProjectRelationshipInput\") {\n    \"\"\"\n    The DevOps Graph Service_And_Jira_Project relationship ARI\n    \"\"\"\n    id: ID! @ARI(type: \"service-and-jira-project-relationship\", owner: \"graph\")\n\n    \"\"\"\n    The revision that must be provided when updating a relationship between DevOps Service and Jira Project to prevent\n    simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n\n    description: String\n}\n\n\"\"\"\nThe request input for deleting a relationship between a DevOps Service and a Jira Project\n\"\"\"\ninput DeleteDevOpsServiceAndJiraProjectRelationshipInput @renamed(from:\"DeleteServiceAndJiraProjectRelationshipInput\") {\n    \"\"\"\n    The DevOps Graph Service_And_Jira_Project relationship ARI\n    \"\"\"\n    id: ID! @ARI(type: \"service-and-jira-project-relationship\", owner: \"graph\")\n}\n\n##################### Mutation Input - Service And Repository Relationship #####################\n\n\"\"\"\nThe request input for creating a relationship between a DevOps Service and a Repository\n\"\"\"\ninput CreateDevOpsServiceAndRepositoryRelationshipInput @renamed(from:\"CreateServiceAndRepositoryRelationshipInput\") {\n    \"\"\"\n    The ARI of the DevOps Service.\n    \"\"\"\n    serviceId: ID! @ARI(type: \"service\", owner: \"graph\")\n\n    \"\"\"\n    The Bitbucket Repository ARI\n    \"\"\"\n    bitbucketRepositoryId: ID @ARI(type: \"repository\", owner: \"bitbucket\")\n\n    \"\"\"\n    The Third Party Repository. It should be null when repositoryId is a Bitbucket Repository ARI\n    \"\"\"\n    thirdPartyRepository: ThirdPartyRepositoryInput\n\n    \"\"\"\n    An optional description of the relationship.\n    \"\"\"\n    description: String\n\n    \"\"\"\n    Optional properties of the relationship.\n    \"\"\"\n    properties: [DevOpsContainerRelationshipEntityPropertyInput!]\n}\n\n\"\"\"\nThe request input for updating a relationship between a DevOps Service and a Repository\n\"\"\"\ninput UpdateDevOpsServiceAndRepositoryRelationshipInput @renamed(from:\"UpdateServiceAndRepositoryRelationshipInput\") {\n    \"\"\"\n    The ARI of the relationship\n    \"\"\"\n    id: ID! @ARI(type: \"service-and-vcs-repository-relationship\", owner: \"graph\")\n\n    \"\"\"\n    The revision that must be provided when updating a relationship between DevOps Service and a Repository to prevent\n    simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n\n    \"\"\"\n    The description of the relationship\n    \"\"\"\n    description: String\n}\n\n\"\"\"\nThe request input for deleting a relationship between a DevOps Service and a Repository\n\"\"\"\ninput DeleteDevOpsServiceAndRepositoryRelationshipInput @renamed(from:\"DeleteServiceAndRepositoryRelationshipInput\") {\n    \"\"\"\n    The ARI of the relationship\n    \"\"\"\n    id: ID! @ARI(type: \"service-and-vcs-repository-relationship\", owner: \"graph\")\n}\n\n\"\"\"\nThe input for a Avatar for a Third Party Repository\n\"\"\"\ninput AvatarInput {\n    \"\"\"The URL of the avatar.\"\"\"\n    webUrl: String\n\n    \"\"\"The description of the avatar.\"\"\"\n    description: String\n}\n\n\"\"\"\nThe input for a Third Party Repository\n\"\"\"\ninput ThirdPartyRepositoryInput {\n    \"\"\"\n    The ID of the third party repository.\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    The URL of the third party repository.\n    \"\"\"\n    webUrl: String\n\n    \"\"\"\n    The name of the third party repository.\n    \"\"\"\n    name: String\n\n    \"\"\"\n    Avatar details for the third party repository.\n    \"\"\"\n    avatar: AvatarInput\n}\n\n##################### Mutation Input - Jira Project and Opsgenie Team Relationship #####################\n\ninput CreateJiraProjectAndOpsgenieTeamRelationshipInput {\n    \"\"\"\n    The ARI of the Jira project.\n    \"\"\"\n    jiraProjectId: ID! @ARI(type: \"project\", owner: \"jira\")\n\n    \"\"\"The type of Jira.\"\"\"\n    jiraProjectType: DevOpsJiraProjectType\n\n    \"\"\"\n    The Opsgenie team must exist on the same site as the service. If it doesn't, the create will fail\n    with a OPSGENIE_TEAM_ID_INVALID error.\n    \"\"\"\n    opsgenieTeamId: ID! @ARI(owner: \"opsgenie\", type: \"team\")\n\n    \"\"\"An optional description of the relationship.\"\"\"\n    description: String\n\n    \"\"\"Optional properties of the relationship.\"\"\"\n    properties: [DevOpsContainerRelationshipEntityPropertyInput!]\n}\n\ninput UpdateJiraProjectAndOpsgenieTeamRelationshipInput {\n    id: ID! @ARI(type: \"jira-project-and-operations-team-relationship\", owner: \"graph\")\n    revision: ID!\n    description: String\n}\n\ninput DeleteJiraProjectAndOpsgenieTeamRelationshipInput {\n    id: ID! @ARI(type: \"jira-project-and-operations-team-relationship\", owner: \"graph\")\n}\n\n\"\"\"\nThe request input for creating a relationship between a Jira project and a repository\n\"\"\"\ninput CreateJiraProjectAndRepositoryRelationshipInput {\n    \"\"\"The project ARI\"\"\"\n    jiraProjectId: ID! @ARI(type: \"project\", owner: \"jira\")\n\n    \"\"\"\n    The Bitbucket repository ARI.\n    This parameter should be null when the third party repository is not null, and vice versa.\n    \"\"\"\n    bitbucketRepositoryId: ID @ARI(type: \"repository\", owner: \"bitbucket\")\n\n    \"\"\"\n    The third party repository details.\n    This parameter should be null when the Bitbucket repository ARI is not null, and vice versa.\n    \"\"\"\n    thirdPartyRepository: ThirdPartyRepositoryInput\n\n    \"\"\"An optional description of the relationship\"\"\"\n    description: String\n\n    \"\"\"Optional properties of the relationship\"\"\"\n    properties: [DevOpsContainerRelationshipEntityPropertyInput!]\n}\n\n\"\"\"\nThe request input for updating a relationship between a Jira project and a repository\n\"\"\"\ninput UpdateJiraProjectAndRepositoryRelationshipInput {\n    \"\"\"The relationship ARI\"\"\"\n    id: ID! @ARI(type: \"jira-project-and-vcs-repository-relationship\", owner: \"graph\")\n\n    \"\"\"\n    The third party repository details.\n    This parameter should be null when the relationship involves a Bitbucket repository.\n    When updating third party repository details, the repository ID must stay consistent with the original relationship.\n    \"\"\"\n    thirdPartyRepository: ThirdPartyRepositoryInput\n\n    \"\"\"Database object revision ID created for the relationship\"\"\"\n    revision: ID!\n\n    \"\"\"An optional description of the relationship\"\"\"\n    description: String\n}\n\n\"\"\"\nThe request input for deleting a relationship between a Jira project and a repository\n\"\"\"\ninput DeleteJiraProjectAndRepositoryRelationshipInput {\n    \"\"\"The relationship ARI\"\"\"\n    id: ID! @ARI(type: \"jira-project-and-vcs-repository-relationship\", owner: \"graph\")\n}\n\n##################### Mutation Payloads #####################\n\n\"\"\"\nThe response payload of creating a relationship between a DevOps Service and an Opsgenie Team\n\"\"\"\ntype CreateDevOpsServiceAndOpsgenieTeamRelationshipPayload implements Payload @renamed(from:\"CreateServiceAndOpsgenieTeamRelationshipPayload\") {\n    \"\"\"\n    The result of whether the relationship is created successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during update relationship\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"The created relationship\"\"\"\n    serviceAndOpsgenieTeamRelationship: DevOpsServiceAndOpsgenieTeamRelationship\n}\n\n\"\"\"\nThe response payload of updating a relationship between a DevOps Service and an Opsgenie Team\n\"\"\"\ntype UpdateDevOpsServiceAndOpsgenieTeamRelationshipPayload implements Payload @renamed(from:\"UpdateServiceAndOpsgenieTeamRelationshipPayload\") {\n    \"\"\"\n    The result of whether the relationship is updated successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during update relationship\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"\n    The updated relationship between DevOps Service and Opsgenie Team\n    \"\"\"\n    serviceAndOpsgenieTeamRelationship: DevOpsServiceAndOpsgenieTeamRelationship\n}\n\n\"\"\"\nThe response payload of deleting a relationship between a DevOps Service and an Opsgenie Team\n\"\"\"\ntype DeleteDevOpsServiceAndOpsgenieTeamRelationshipPayload implements Payload @renamed(from:\"DeleteServiceAndOpsgenieTeamRelationshipPayload\") {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n\"\"\"\nThe response payload of updating relationship properties\n\"\"\"\ntype UpdateDevOpsContainerRelationshipEntityPropertiesPayload implements Payload @renamed(from:\"UpdateEntityPropertiesPayload\") {\n    \"\"\"\n    The result of whether relationship properties have been successfully updated or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The errors occurred during relationship properties update\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"\n    Look up JSON properties of the service by keys\n    \"\"\"\n    properties(keys:[String!]!): JSON\n}\n\n\"\"\"\nThe response payload of deleting DevOps Service Entity Properties\n\"\"\"\ntype DeleteDevOpsContainerRelationshipEntityPropertiesPayload implements Payload @renamed(from:\"DeleteEntityPropertiesPayload\") {\n    \"\"\"\n    The result of whether relationship properties have been successfully deleted or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The errors occurred during relationship properties delete\n    \"\"\"\n    errors: [MutationError!]\n}\n\n##################### Mutation Payloads - Service and Jira Project Relationship #####################\n\ntype CreateDevOpsServiceAndJiraProjectRelationshipPayload implements Payload @renamed(from:\"CreateServiceAndJiraProjectRelationshipPayload\") {\n    \"\"\"\n    The result of whether the relationship is created successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during create relationship\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"The created relationship\"\"\"\n    serviceAndJiraProjectRelationship: DevOpsServiceAndJiraProjectRelationship\n}\n\ntype UpdateDevOpsServiceAndJiraProjectRelationshipPayload implements Payload @renamed(from:\"UpdateServiceAndJiraProjectRelationshipPayload\") {\n    \"\"\"\n    The result of whether the relationship is created successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during create relationship\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"The updated relationship\"\"\"\n    serviceAndJiraProjectRelationship: DevOpsServiceAndJiraProjectRelationship\n}\n\ntype DeleteDevOpsServiceAndJiraProjectRelationshipPayload implements Payload @renamed(from:\"DeleteServiceAndJiraProjectRelationshipPayload\") {\n    \"\"\"\n    The result of whether the relationship is deleted successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during delete relationship\n    \"\"\"\n    errors: [MutationError!]\n}\n\n##################### Mutation Payloads - DevOps Service and Repository Relationship #####################\n\ntype CreateDevOpsServiceAndRepositoryRelationshipPayload implements Payload @renamed(from:\"CreateServiceAndRepositoryRelationshipPayload\") {\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"\"\"The created relationship\"\"\"\n    serviceAndRepositoryRelationship: DevOpsServiceAndRepositoryRelationship\n}\n\ntype UpdateDevOpsServiceAndRepositoryRelationshipPayload implements Payload @renamed(from:\"UpdateServiceAndRepositoryRelationshipPayload\") {\n    \"\"\"\n    The result of whether the relationship is updated successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during update of the relationship\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"\n    The updated relationship\n    \"\"\"\n    serviceAndRepositoryRelationship: DevOpsServiceAndRepositoryRelationship\n}\n\ntype DeleteDevOpsServiceAndRepositoryRelationshipPayload implements Payload @renamed(from:\"DeleteServiceAndRepositoryRelationshipPayload\") {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n##################### Mutation Payloads - Jira Project and Opsgenie Team Relationship #####################\n\ntype CreateJiraProjectAndOpsgenieTeamRelationshipPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"\"\"The created relationship\"\"\"\n    jiraProjectAndOpsgenieTeamRelationship: JiraProjectAndOpsgenieTeamRelationship\n}\n\ntype UpdateJiraProjectAndOpsgenieTeamRelationshipPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"\"\"The updated relationship\"\"\"\n    jiraProjectAndOpsgenieTeamRelationship: JiraProjectAndOpsgenieTeamRelationship\n}\n\ntype DeleteJiraProjectAndOpsgenieTeamRelationshipPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n##################### Mutation Payloads - Jira Project and Repository Relationship #####################\n\ntype CreateJiraProjectAndRepositoryRelationshipPayload implements Payload {\n    \"\"\"\n    The result of whether the relationship is created successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during relationship creation\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"The created relationship\"\"\"\n    jiraProjectAndRepositoryRelationship: JiraProjectAndRepositoryRelationship\n}\n\ntype UpdateJiraProjectAndRepositoryRelationshipPayload implements Payload {\n    \"\"\"\n    The result of whether the relationship is updated successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during relationship update\n    \"\"\"\n    errors: [MutationError!]\n\n    \"\"\"The updated relationship\"\"\"\n    jiraProjectAndRepositoryRelationship: JiraProjectAndRepositoryRelationship\n}\n\ntype DeleteJiraProjectAndRepositoryRelationshipPayload implements Payload {\n    \"\"\"\n    The result of whether the relationship is deleted successfully or not\n    \"\"\"\n    success: Boolean!\n\n    \"\"\"\n    The list of errors occurred during relationship deletion\n    \"\"\"\n    errors: [MutationError!]\n}\n\n##################### Type Extensions #####################\n\nextend type JiraProject {\n    \"\"\"\n    The connection entity for repository relationships for this Jira project, according to the specified\n    pagination, filtering and sorting.\n    \"\"\"\n    repositoryRelationships(\n        first: Int = 20,\n        after: String,\n        filter: JiraProjectAndRepositoryRelationshipFilter,\n        sort: JiraProjectAndRepositoryRelationshipSort): JiraProjectAndRepositoryRelationshipConnection\n    @hydrated(service: \"devops_container_relationships_jira_project_and_repo\" field: \"repositoryRelationshipsForJiraProject\" arguments : [\n        { name:\"id\" value:\"$source.id\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n        { name:\"filter\" value:\"$argument.filter\"},\n        { name:\"sort\" value:\"$argument.sort\"},\n    ])\n\n    \"\"\"\n    The connection entity for DevOps Service relationships for this Jira project, according to the specified\n    pagination, filtering.\n    \"\"\"\n    devOpsServiceRelationships(\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServiceAndJiraProjectRelationshipFilter): DevOpsServiceAndJiraProjectRelationshipConnection\n    @hydrated(service: \"devops_container_relationships\" field: \"serviceRelationshipsForJiraProject\" arguments : [\n        { name:\"id\" value:\"$source.id\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n        { name:\"filter\" value:\"$argument.filter\"},\n    ])\n\n    \"\"\"\n    The connection entity for Opsgenie Team relationships for this Jira project, according to the specified\n    pagination, filtering.\n    \"\"\"\n    opsgenieTeamRelationships(\n        first: Int = 20,\n        after: String): JiraProjectAndOpsgenieTeamRelationshipConnection\n    @hydrated(service: \"devops_container_relationships\" field: \"opsgenieTeamRelationshipsForJiraProject\" arguments : [\n        { name:\"id\" value:\"$source.id\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n    ])\n\n\n    \"\"\"\n    Services that are available to be linked with via createDevOpsServiceAndJiraProjectRelationship\n    \"\"\"\n    servicesAvailableToLinkWith(\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServicesFilterInput\n    ) : DevOpsServiceConnection\n    @hydrated(service: \"devops_service\" field: \"services\" arguments : [\n        { name:\"cloudId\" value:\"$source.cloudId\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n        { name:\"filter\" value:\"$argument.filter\"},\n    ])\n\n\n    \"\"\"\n    Opsgenie teams that are available to be linked with via createJiraProjectAndOpsgenieTeamRelationship\n    \"\"\"\n    opsgenieTeamsAvailableToLinkWith(\n        first: Int = 20,\n        after: String\n    ) : OpsgenieTeamConnection\n    @hydrated(service: \"opsgenie\" field: \"opsgenie.allOpsgenieTeams\" arguments : [\n        { name:\"cloudId\" value:\"$source.cloudId\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n    ])\n\n}\n\nextend type OpsgenieTeam {\n    \"\"\"\n    The connection entity for DevOps Service relationships for this Opsgenie team.\n    \"\"\"\n    devOpsServiceRelationships(\n        first: Int = 20,\n        after: String): DevOpsServiceAndOpsgenieTeamRelationshipConnection\n    @hydrated(service: \"devops_container_relationships\" field: \"serviceRelationshipsForOpsgenieTeam\" arguments : [\n        { name:\"id\" value:\"$source.id\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n    ])\n\n    \"\"\"\n    The connection entity for Jira project relationships for this Opsgenie team.\n    \"\"\"\n    jiraProjectRelationships(\n        first: Int = 20,\n        after: String\n    ) : JiraProjectAndOpsgenieTeamRelationshipConnection\n    @hydrated(service: \"devops_container_relationships\" field: \"jiraProjectRelationshipsForOpsgenieTeam\" arguments : [\n        { name:\"id\" value:\"$source.id\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n    ])\n}\n\nextend type BitbucketRepository {\n    \"\"\"\n    The connection entity for Jira project relationships for this Bitbucket repository, according to the specified\n    pagination, filtering and sorting.\n    \"\"\"\n    jiraProjectRelationships(\n        cloudId: ID! @CloudID,\n        first: Int = 20,\n        after: String,\n        filter: JiraProjectAndRepositoryRelationshipFilter,\n        sort: JiraProjectAndRepositoryRelationshipSort\n    ) : JiraProjectAndRepositoryRelationshipConnection\n    @hydrated(service: \"devops_container_relationships_jira_project_and_repo\" field: \"jiraProjectRelationshipsForRepository\" arguments : [\n        { name:\"id\" value:\"$source.id\"},\n        { name:\"cloudId\" value:\"$argument.cloudId\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n        { name:\"filter\" value:\"$argument.filter\"},\n        { name:\"sort\" value:\"$argument.sort\"},\n    ])\n\n    \"\"\"\n    The connection entity for DevOps Service relationships for this Bitbucket repository, according to the specified\n    pagination, filtering and sorting.\n    \"\"\"\n    devOpsServiceRelationships(\n        first: Int = 20,\n        after: String,\n        filter: DevOpsServiceAndRepositoryRelationshipFilter,\n        sort: DevOpsServiceAndRepositoryRelationshipSort\n    ): DevOpsServiceAndRepositoryRelationshipConnection\n    @hydrated(service: \"devops_container_relationships\" field: \"serviceRelationshipsForRepository\" arguments : [\n        { name:\"id\" value:\"$source.id\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n        { name:\"filter\" value:\"$argument.filter\"},\n        { name:\"sort\" value:\"$argument.sort\"},\n    ])\n}\n\n##################### Top Level Types #####################\n\n\"\"\"\nA relationship between DevOps Service and Opsgenie Team\n\"\"\"\ntype DevOpsServiceAndOpsgenieTeamRelationship implements Node @renamed(from:\"ServiceAndOpsgenieTeamRelationship\") {\n    \"\"\"\n    The ARI of this relationship.\n    \"\"\"\n    id: ID! @ARI(type: \"service-and-operations-team-relationship\", owner: \"graph\")\n\n    \"\"\"\n    The revision must be provided when updating a relationship to prevent\n    simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n\n    \"\"\"\n    The details of DevOps Service in the relationship.\n    \"\"\"\n    devOpsService: DevOpsService\n    @hydrated(service: \"devops_service\" field: \"service\" arguments : [\n        { name:\"id\" value:\"$source.serviceId\"},\n    ])\n    \"\"\"\n    The id (Opsgenie team ARI) of the Opsgenie team related to the service.\n    \"\"\"\n    opsgenieTeamId: ID! @deprecated(reason: \"use field opsgenieTeam to retrieve team details\")\n\n    \"\"\"\n    The Opsgenie team details related to the service.\n    \"\"\"\n    opsgenieTeam: OpsgenieTeam\n    @hydrated(service: \"opsgenie\" field: \"opsgenie.opsgenieTeam\" arguments : [\n        { name:\"id\" value:\"$source.opsgenieTeamId\"},\n    ])\n\n    \"\"\"\n    An optional description of the relationship.\n    \"\"\"\n    description: String\n\n    \"\"\"\n    The user who created the relationship\n    \"\"\"\n    createdBy: String!\n\n    \"\"\"\n    The datetime when the relationship was created\n    \"\"\"\n    createdAt: DateTime!\n\n    \"\"\"\n    The last user who updated the relationship\n    \"\"\"\n    lastUpdatedBy: String\n\n    \"\"\"\n    The most recent datetime when the relationship was updated\n    \"\"\"\n    lastUpdatedAt: DateTime\n\n    \"\"\"Look up JSON properties of the relationship by keys.\"\"\"\n    properties(keys:[String!]!): JSON\n}\n\n\"\"\"\nA relationship between DevOps Service and Jira Project Team\n\"\"\"\ntype DevOpsServiceAndJiraProjectRelationship implements Node @renamed(from:\"ServiceAndJiraProjectRelationship\") {\n    \"\"\"\n    The ARI of this relationship.\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    The revision must be provided when updating a relationship to prevent\n    simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n\n    \"\"\"\n    The details of DevOps Service in the relationship.\n    \"\"\"\n    devOpsService: DevOpsService\n    @hydrated(service: \"devops_service\" field: \"service\" arguments : [\n        { name:\"id\" value:\"$source.serviceId\"},\n    ])\n\n    \"\"\"The Jira project related to the repository.\"\"\"\n    jiraProject: JiraProject\n    @hydrated(service: \"jira_projects\" field: \"jira.jiraProject\" arguments : [\n        { name:\"id\" value:\"$source.jiraProjectId\"},\n    ])\n\n    \"\"\"\n    The type of the relationship.\n    \"\"\"\n    relationshipType: DevOpsServiceAndJiraProjectRelationshipType!\n\n    \"\"\"An optional description of the relationship.\"\"\"\n    description: String\n\n    \"\"\"Who created the relationship.\"\"\"\n    createdBy: String!\n\n    \"\"\"When the relationship was created.\"\"\"\n    createdAt: DateTime!\n\n    \"\"\"Who updated the relationship last. Only present for relationships that have been updated.\"\"\"\n    lastUpdatedBy: String\n\n    \"\"\"When the relationship was updated last.  Only present for relationships that have been updated.\"\"\"\n    lastUpdatedAt: DateTime\n\n    \"\"\"Look up JSON properties of the relationship by keys.\"\"\"\n    properties(keys:[String!]!): JSON\n}\n\n\"\"\"A relationship between a Jira project and a repository (Bitbucket or third party).\"\"\"\ntype JiraProjectAndRepositoryRelationship implements Node {\n    \"\"\"The ARI of this relationship.\"\"\"\n    id: ID! @ARI(type: \"jira-project-and-vcs-repository-relationship\", owner: \"graph\")\n\n    \"\"\"\n    The revision must be provided when updating a relationship to prevent\n    simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n\n    \"\"\"The Jira project related to the repository.\"\"\"\n    jiraProject: JiraProject\n    @hydrated(service: \"jira_projects\" field: \"jira.jiraProject\" arguments : [\n        { name:\"id\" value:\"$source.jiraProjectId\"},\n    ])\n\n    \"\"\"\n    If the repository provider is Bitbucket, this will contain the Bitbucket repository details,\n    otherwise null.\n    \"\"\"\n    bitbucketRepository: BitbucketRepository\n    @hydrated(service: \"bitbucket\" field: \"bitbucket.bitbucketRepository\" arguments : [\n        { name:\"id\" value:\"$source.bitbucketRepositoryId\"},\n    ])\n\n    \"\"\"\n    If the repository provider is a third party, this will contain the third party repository details,\n    otherwise null.\n    \"\"\"\n    thirdPartyRepository: DevOpsThirdPartyRepository\n\n    \"\"\"An optional description of the relationship.\"\"\"\n    description: String\n\n    \"\"\"Whether the relationship is explicit or inferred.\"\"\"\n    certainty: DevOpsRelationshipCertainty!\n\n    \"\"\"The AAID or system or system entity that created the relationship.\"\"\"\n    createdBy: String!\n\n    \"\"\"When the relationship was created.\"\"\"\n    createdAt: DateTime!\n\n    \"\"\"\n    The AAID or system or system entity that updated the relationship last.\n    Only present for relationships that have been updated.\n    \"\"\"\n    lastUpdatedBy: String\n\n    \"\"\"When the relationship was updated last.  Only present for relationships that have been updated.\"\"\"\n    lastUpdatedAt: DateTime\n\n    \"\"\"\n    The system that inferred the relationship last.\n    Only present for implicit relationships.\n    \"\"\"\n    lastInferredBy: String\n\n    \"\"\"When the relationship was inferred last. Only present for implicit relationships.\"\"\"\n    lastInferredAt: DateTime\n\n    \"\"\"Look up JSON properties of the relationship by keys.\"\"\"\n    properties(keys:[String!]!): JSON\n}\n\n\"\"\"\nA relationship between a DevOps Service and a Repository\n\"\"\"\ntype DevOpsServiceAndRepositoryRelationship implements Node @renamed(from:\"ServiceAndRepositoryRelationship\") {\n    \"\"\"\n    The ARI of this Relationship.\n    \"\"\"\n    id: ID! @ARI(type: \"service-and-vcs-repository-relationship\", owner: \"graph\")\n\n    \"\"\"\n    The revision must be provided when updating a relationship to prevent\n    multiple simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n\n    \"\"\"\n    The details of DevOps Service in the relationship.\n    \"\"\"\n    devOpsService: DevOpsService\n    @hydrated(service: \"devops_service\" field: \"service\" arguments : [\n        { name : \"id\", value : \"$source.serviceId\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"\n    If the repository provider is Bitbucket, this will contain the Bitbucket repository details,\n    otherwise null.\n    \"\"\"\n    bitbucketRepository: BitbucketRepository\n    @hydrated(service: \"bitbucket\" field: \"bitbucket.bitbucketRepository\" arguments : [\n        { name : \"id\", value : \"$source.bitbucketRepositoryId\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"\n    If the repository provider is a third party, this will contain the repository details, otherwise null.\n    \"\"\"\n    thirdPartyRepository: DevOpsThirdPartyRepository\n\n    \"\"\"\n    An optional description of the relationship.\n    \"\"\"\n    description: String\n\n    \"\"\"\n    The user who created the relationship\n    \"\"\"\n    createdBy: String!\n    \"\"\"\n    The time when the relationship was created\n    \"\"\"\n    createdAt: DateTime!\n    \"\"\"\n    The latest user who updated the relationship\n    \"\"\"\n    lastUpdatedBy: String\n    \"\"\"\n    The latest time when the relationship was updated\n    \"\"\"\n    lastUpdatedAt: DateTime\n\n    \"\"\"\n    Look up JSON properties of the relationship by keys.\n    \"\"\"\n    properties(keys:[String!]!): JSON\n}\n\n\"\"\"\nA relationship between a Jira Project and Opsgenie Team\n\"\"\"\ntype JiraProjectAndOpsgenieTeamRelationship implements Node {\n    \"\"\"The ARI of this relationship.\"\"\"\n    id: ID! @ARI(type: \"jira-project-and-operations-team-relationship\", owner: \"graph\")\n\n    \"\"\"\n    The revision must be provided when updating a relationship to prevent\n    simultaneous updates from overwriting each other.\n    \"\"\"\n    revision: ID!\n\n    \"\"\"The Jira project related to the Opsgenie team.\"\"\"\n    jiraProject: JiraProject\n    @hydrated(service: \"jira_projects\" field: \"jira.jiraProject\" arguments : [\n        { name : \"id\", value : \"$source.jiraProjectId\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"The type of Jira.\"\"\"\n    jiraProjectType: DevOpsJiraProjectType\n\n    \"\"\"\n    The Opsgenie team details related to the Jira Project.\n    \"\"\"\n    opsgenieTeam: OpsgenieTeam\n    @hydrated(service: \"opsgenie\" field: \"opsgenie.opsgenieTeam\" arguments : [\n        { name : \"id\", value : \"$source.opsgenieTeamId\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"An optional description of the relationship.\"\"\"\n    description: String\n\n    \"\"\"Who created the relationship.\"\"\"\n    createdBy: String!\n\n    \"\"\"When the relationship was created.\"\"\"\n    createdAt: DateTime!\n\n    \"\"\"Who updated the relationship last. Only present for relationships that have been updated.\"\"\"\n    lastUpdatedBy: String\n\n    \"\"\"When the relationship was updated last.  Only present for relationships that have been updated.\"\"\"\n    lastUpdatedAt: DateTime\n\n    \"\"\"Look up JSON properties of the relationship by keys.\"\"\"\n    properties(keys:[String!]!): JSON\n}\n\n##################### Supporting Types #####################\n\ntype DevOpsThirdPartyRepository @renamed(from:\"ThirdPartyRepository\") {\n    \"\"\"The ID of the third party repository.\"\"\"\n    id: ID!\n\n    \"\"\"The URL of the third party repository.\"\"\"\n    webUrl: URL @renamed(from:\"href\")\n\n    \"\"\"The name of the third party repository.\"\"\"\n    name: String\n\n    \"\"\"Avatar details for the third party repository.\"\"\"\n    avatar: DevOpsAvatar\n}\n\ntype DevOpsAvatar @renamed(from:\"Avatar\") {\n    \"\"\"The URL of the avatar.\"\"\"\n    url: URL @renamed(from:\"href\")\n\n    \"\"\"The description of the avatar.\"\"\"\n    description: String\n}\n\n##################### Pagination #####################\n\n\"\"\"The connection object for a collection of Jira project and repository relationships.\"\"\"\ntype JiraProjectAndRepositoryRelationshipConnection {\n    edges: [JiraProjectAndRepositoryRelationshipEdge]\n    nodes: [JiraProjectAndRepositoryRelationship]\n    pageInfo: PageInfo!\n}\n\ntype JiraProjectAndRepositoryRelationshipEdge {\n    cursor: String!\n    node: JiraProjectAndRepositoryRelationship\n}\n\ntype DevOpsServiceAndOpsgenieTeamRelationshipConnection @renamed(from:\"ServiceAndOpsgenieTeamRelationshipConnection\") {\n    edges: [DevOpsServiceAndOpsgenieTeamRelationshipEdge]\n    nodes: [DevOpsServiceAndOpsgenieTeamRelationship]\n    pageInfo: PageInfo!\n}\n\ntype DevOpsServiceAndOpsgenieTeamRelationshipEdge @renamed(from:\"ServiceAndOpsgenieTeamRelationshipEdge\") {\n    cursor: String!\n    node: DevOpsServiceAndOpsgenieTeamRelationship\n}\n\ntype DevOpsServiceAndJiraProjectRelationshipEdge @renamed(from:\"ServiceAndJiraProjectRelationshipEdge\") {\n    cursor: String!\n    node: DevOpsServiceAndJiraProjectRelationship\n}\n\ntype DevOpsServiceAndJiraProjectRelationshipConnection @renamed(from:\"ServiceAndJiraProjectRelationshipConnection\") {\n    edges: [DevOpsServiceAndJiraProjectRelationshipEdge]\n    nodes: [DevOpsServiceAndJiraProjectRelationship]\n    pageInfo: PageInfo!\n}\n\ntype DevOpsServiceAndRepositoryRelationshipConnection @renamed(from:\"ServiceAndRepositoryRelationshipConnection\") {\n    edges: [DevOpsServiceAndRepositoryRelationshipEdge]\n    nodes: [DevOpsServiceAndRepositoryRelationship]\n    pageInfo: PageInfo!\n}\n\ntype DevOpsServiceAndRepositoryRelationshipEdge @renamed(from:\"ServiceAndRepositoryRelationshipEdge\") {\n    cursor: String!\n    node: DevOpsServiceAndRepositoryRelationship\n}\n\ntype JiraProjectAndOpsgenieTeamRelationshipConnection {\n    edges: [JiraProjectAndOpsgenieTeamRelationshipEdge]\n    nodes: [JiraProjectAndOpsgenieTeamRelationship]\n    pageInfo: PageInfo!\n}\n\ntype JiraProjectAndOpsgenieTeamRelationshipEdge {\n    cursor: String!\n    node: JiraProjectAndOpsgenieTeamRelationship\n}\n\n##################### Filtering and Sorting Inputs #####################\n\ninput JiraProjectAndRepositoryRelationshipFilter @renamed(from:\"JiraProjectAndRepositoryRelationshipFilterInput\") {\n    \"\"\"Include only relationships with the specified certainty\"\"\"\n    certainty: DevOpsRelationshipCertaintyFilter = EXPLICIT\n\n    \"\"\"Include only relationships with the specified repository hosting provider type\"\"\"\n    hostingProvider: DevOpsRepositoryHostingProviderFilter = ALL\n\n    \"\"\"\n    Include only relationships with all of the specified property keys.\n    If this is omitted, no filtering by 'all property keys' is applied.\n    \"\"\"\n    withAllPropertyKeys: [String!]\n}\n\ninput JiraProjectAndRepositoryRelationshipSort @renamed(from:\"JiraProjectAndRepositoryRelationshipSortInput\") {\n    \"\"\"The field to apply sorting on\"\"\"\n    by: JiraProjectAndRepositoryRelationshipSortBy!\n\n    \"\"\"The direction of sorting\"\"\"\n    order: SortDirection! = ASC\n}\n\ninput DevOpsServiceAndJiraProjectRelationshipFilter @renamed(from:\"ServiceAndJiraProjectRelationshipFilterInput\") {\n    \"\"\"Include only relationships with the specified certainty\"\"\"\n    certainty: DevOpsRelationshipCertaintyFilter = EXPLICIT\n\n    \"\"\"Include only relationships with the specified relationship type\"\"\"\n    relationshipTypeIn: [DevOpsServiceAndJiraProjectRelationshipType!]\n}\n\ninput DevOpsServiceAndRepositoryRelationshipFilter @renamed(from:\"ServiceAndRepositoryRelationshipFilterInput\") {\n    \"\"\"Include only relationships with the specified certainty\"\"\"\n    certainty: DevOpsRelationshipCertaintyFilter = EXPLICIT\n\n    \"\"\"Include only relationships with the specified repository hosting provider type\"\"\"\n    hostingProvider: DevOpsRepositoryHostingProviderFilter = ALL\n\n    \"\"\"\n    Include only relationships with all of the specified property keys.\n    If this is omitted, no filtering by 'all property keys' is applied.\n    \"\"\"\n    withAllPropertyKeys: [String!]\n}\n\ninput DevOpsServiceAndRepositoryRelationshipSort @renamed(from:\"ServiceAndRepositoryRelationshipSortInput\") {\n    \"\"\"The field to apply sorting on\"\"\"\n    by: DevOpsServiceAndRepositoryRelationshipSortBy!\n\n    \"\"\"The direction of sorting\"\"\"\n    order: SortDirection! = ASC\n}\n\n##################### Enums #####################\n\nenum JiraProjectAndRepositoryRelationshipSortBy {\n    LAST_INFERRED_AT\n}\n\nenum DevOpsRepositoryHostingProviderFilter @renamed(from:\"RepositoryHostingProviderFilter\") {\n    BITBUCKET_CLOUD\n    THIRD_PARTY\n    ALL\n}\n\nenum DevOpsRelationshipCertainty @renamed(from:\"RelationshipCertainty\") {\n    \"\"\"The relationship was created by a user.\"\"\"\n    EXPLICIT\n\n    \"\"\"The relationship was inferred by a system.\"\"\"\n    IMPLICIT\n}\n\nenum DevOpsRelationshipCertaintyFilter @renamed(from:\"RelationshipCertaintyFilter\") {\n    \"\"\"Return only relationships created by a user.\"\"\"\n    EXPLICIT\n\n    \"\"\"Return only relationships inferred by a system.\"\"\"\n    IMPLICIT\n\n    \"\"\"Return all relationships.\"\"\"\n    ALL\n}\n\nenum DevOpsServiceAndJiraProjectRelationshipType @renamed(from:\"ServiceAndJiraProjectRelationshipType\") {\n    \"\"\"A standard relationship\"\"\"\n    DEFAULT\n\n    \"\"\"A relationship created for the change management feature\"\"\"\n    CHANGE_MANAGEMENT\n}\n\nenum DevOpsServiceAndRepositoryRelationshipSortBy @renamed(from:\"ServiceAndRepositoryRelationshipSortBy\") {\n    LAST_INFERRED_AT\n}\n\nenum DevOpsJiraProjectType @renamed(from:\"JiraProjectType\") {\n    JIRA_SOFTWARE\n    JIRA_SERVICEDESK\n    JIRA_CORE\n}\n\n","shepherd":"# ---------------------------------------------------------------------------------------------\n#\n# This overall schema .nadel file was generated by the agg template tooling on 2022-01-19T10:26:52.573348-06:00[America/Chicago]\n#\n# You SHOULD NOT edit these files directly.\n#\n# Rather you should edit the original template files and re-run the agg tooling.\n#\n# ---------------------------------------------------------------------------------------------\n\n\ntype Query {\n  shepherd: ShepherdQuery\n}\n\ntype Mutation {\n  shepherd: ShepherdMutation\n}\n\ntype ShepherdQuery {\n  \"THIS QUERY IS IN BETA\"\n  shepherdAlert(id: ID!): ShepherdAlertResult\n  \"THIS QUERY IS IN BETA\"\n  shepherdAlerts(orgId: ID!): ShepherdAlertsResult\n  \"THIS QUERY IS IN BETA\"\n  shepherdAppInfo: ShepherdAppInfo!\n  \"THIS QUERY IS IN BETA\"\n  shepherdOrganization(id: ID!): ShepherdOrganization\n  \"THIS QUERY IS IN BETA\"\n  shepherdUser: ShepherdUser\n}\n\ntype ShepherdMutation {\n  \"THIS QUERY IS IN BETA\"\n  createAlert(input: ShepherdCreateAlertInput!): ShepherdCreateAlertPayload\n  \"THIS QUERY IS IN BETA\"\n  createOrganization(input: ShepherdCreateOrganizationInput!): ShepherdCreateOrganizationPayload\n  \"THIS QUERY IS IN BETA\"\n  updateAlert(id: ID!, input: ShepherdUpdateAlertInput!): ShepherdUpdateAlertPayload\n  \"THIS QUERY IS IN BETA\"\n  updateOrganization(id: ID!, input: ShepherdUpdateOrganizationInput!): ShepherdUpdateOrganizationPayload\n}\n\n\"##### Input #######\"\ninput ShepherdCreateAlertInput {\n  cloudId: ID\n  orgId: ID!\n  status: ShepherdAlertStatus\n  title: String!\n}\n\ninput ShepherdUpdateAlertInput {\n  status: ShepherdAlertStatus\n}\n\ninput ShepherdCreateOrganizationInput {\n  enabled: Boolean\n  id: ID!\n}\n\ninput ShepherdUpdateOrganizationInput {\n  enabled: Boolean\n}\n\n\"#### Payload #####\"\ntype ShepherdCreateAlertPayload implements Payload {\n  errors: [MutationError!]\n  node: ShepherdAlert\n  success: Boolean!\n}\n\ntype ShepherdUpdateAlertPayload implements Payload {\n  errors: [MutationError!]\n  node: ShepherdAlert\n  success: Boolean!\n}\n\ntype ShepherdCreateOrganizationPayload implements Payload {\n  errors: [MutationError!]\n  node: ShepherdOrganization\n  success: Boolean!\n}\n\ntype ShepherdUpdateOrganizationPayload implements Payload {\n  errors: [MutationError!]\n  node: ShepherdOrganization\n  success: Boolean!\n}\n\n\"Represents a user in the Shepherd system.\"\ntype ShepherdUser {\n  user: User @hydrated(arguments : [{name : \"accountIds\", value : \"$source.aid\"}], batchSize : 90, field : \"users\", identifiedBy : \"accountId\", indexed : false, service : \"identity\")\n}\n\n\"Represents a organization in the Shepherd system.\"\ntype ShepherdOrganization {\n  createdOn: DateTime!\n  enabled: Boolean!\n  id: ID!\n  updatedOn: DateTime\n}\n\ntype ShepherdAppInfo {\n  apiVersion: Int!\n  env: String!\n  loginUrl: String!\n}\n\n\"#### Types: Alert #####\"\ntype ShepherdAlert {\n  actor: ShepherdUser\n  cloudId: ID\n  createdOn: DateTime!\n  id: ID!\n  orgId: ID!\n  status: ShepherdAlertStatus!\n  title: String!\n  updatedOn: DateTime\n}\n\nenum ShepherdAlertStatus {\n  IN_PROGRESS\n  TRIAGED\n  UNTRIAGED\n}\n\nenum ShepherdAlertSeverity {\n  CRITICAL\n  HIGH\n  LOW\n  MEDIUM\n}\n\n\"#### Types: Query #####\"\nenum ShepherdQueryErrorType {\n  NO_PRODUCT_ACCESS\n  UNAUTHORIZED\n}\n\ntype ShepherdGenericQueryErrorExtension implements QueryErrorExtension {\n  \"A code representing the type of error. String form of ShepherdQueryErrorType.\"\n  errorType: String\n  statusCode: Int\n  \"A code representing the type of error. See the ShepherdQueryErrorType enum for possible values.\"\n  type: ShepherdQueryErrorType\n}\n\n\"#### Types: Query Results #####\"\nunion ShepherdAlertsResult = QueryError | ShepherdAlertsConnection\n\nunion ShepherdAlertResult = QueryError | ShepherdAlert\n\n\"Placeholder type to enable eventually adding pagination via the relay connection pattern (https://relay.dev/graphql/connections.htm).\"\ntype ShepherdAlertsConnection {\n  edges: [ShepherdAlertEdge]\n}\n\ntype ShepherdAlertEdge {\n  \"The item at the end of the edge\"\n  node: ShepherdAlert\n}\n\n","csp":"\"All of the Queries that are available.\"\n\ninterface SupportRequestCommonRequest {\n    \"The unique identifier for this request. It will make it unique across multiple systems, for example 'GSAC-CA-1000' for GSAC requests.\"\n    id: ID!\n\n    \"The short general description of the request.\"\n    summary: String\n\n    \"The full description for this request in wiki markup format (Jira format).\"\n    description: String!\n\n    \"The public facing name for this request type, for example Support Request.\"\n    requestTypeName: String!\n\n    \"The date that the request was created in the format 'yyyy-MM-dd'T'HH:mm:ss.SSSX', for example 2019-10-10T10:10:10.1000Z.\"\n    createdDate: SupportRequestDisplayableDateTime!\n\n    \"The current status of the request, for example open.\"\n    status: SupportRequestStatus!\n\n    \"The user that reported this request. This value can be null if the reporter has been removed from the request.\"\n    reporter: SupportRequestUser!\n\n    \"The users that are participants for this request\"\n    participants: [SupportRequestUser!]!\n}\n\ntype Query {\n    \"\"\"This API is a wrapper for all CSP support Request queries\"\"\"\n    customerSupport: SupportRequestCatalogQueryApi\n}\n\ntype Mutation {\n    \"\"\"This API is a wrapper for all CSP support Request mutations\"\"\"\n    customerSupport: SupportRequestCatalogMutationApi\n}\n\n\"\"\"\n    The top level wrapper for the CSP Support Request Mutations API.\n\"\"\"\ntype SupportRequestCatalogMutationApi {\n\n    \"Add customer comment on a support request\"\n    addComment(\n        input: SupportRequestAddCommentInput\n    ) : SupportRequestComment\n\n    \"Perform status transition of support request\"\n    statusTransition(\n        input: SupportRequestTransitionInput\n    ): Boolean\n\n    \"Remove Request participants from support request\"\n    removeRequestParticipants(\n        input: SupportRequestParticipantsInput\n    ): SupportRequestParticipants\n\n    \"Create named contact operation request to add or remove named contact\"\n    createNamedContactOperationRequest(\n        emails: [String!]!\n        organizationId: String\n        sen: String\n        operation: SupportRequestNamedContactOperation!\n    ): SupportRequest\n}\n\n\"\"\"\n    Top level wrapper for CSP Support Request queries API\n\"\"\"\ntype SupportRequestCatalogQueryApi {\n    \"Get information about the current logged in user. This can be used to get the requests for the current user.\"\n    me: SupportRequestPage\n\n    \"Obtain an individual request.\"\n    supportRequest(key: ID!): SupportRequest\n}\n\n\"Query parameter for how this user has access to the request, e.g. they were the reporter or added as a participant.\"\nenum SupportRequestQueryOwnership {\n    REPORTER\n    PARTICIPANT\n}\n\ntype SupportRequests {\n    total: Int!\n    page: [SupportRequest!]!\n}\n\ntype SupportRequest implements SupportRequestCommonRequest  {\n    \"The unique identifier for this request. It will make it unique across multiple systems, for example 'GSAC-CA-1000' for GSAC requests.\"\n    id: ID!\n\n    \"The short general description of the request.\"\n    summary: String\n\n    \"The full description for this request in wiki markup format (Jira format).\"\n    description: String!\n\n    \"The public facing name for the project that this request is in, for example Customer Advocates.\"\n    projectName: String!\n\n    \"The public facing name for this request type, for example Support Request.\"\n    requestTypeName: String!\n\n    \"The date that the request was created in the format 'yyyy-MM-dd'T'HH:mm:ss.SSSX', for example 2019-10-10T10:10:10.1000Z.\"\n    createdDate: SupportRequestDisplayableDateTime!\n\n    \"The current status of the request, for example open.\"\n    status: SupportRequestStatus!\n\n    \"The user that reported this request. This value can be null if the reporter has been removed from the request.\"\n    reporter: SupportRequestUser!\n\n    \"The users that are participants for this request\"\n    participants: [SupportRequestUser!]!\n\n    \"The public facing fields that are relevant to this request. There may be other fields internally that are not being exposed here.\"\n    fields: [SupportRequestField!]!\n\n    \"The comments that should be obtained for this request.\"\n    comments(offset: Int = 0, size: Int = 50): SupportRequestComments\n\n    \"Gets the status transitioned on the request ID.\"\n    statuses(offset: Int = 0, size: Int = 50): SupportRequestStatuses!\n\n    \"Gets the possible transitions on the request ID.\"\n    transitions(offset: Int = 0, size: Int = 100): SupportRequestTransitions\n\n    \"The flag whether request view should be routed to the customer support portal read/write view or gsac customer view.\"\n    targetScreen: String!\n\n    \"The last comment that should be obtained for this request.\"\n     lastComment(offset: Int = 0, size: Int = 50): SupportRequestComments!\n}\n\ntype SupportRequestHierarchyRequests {\n    total: Int!\n    page: [SupportRequestHierarchyRequest!]!\n}\n\ntype SupportRequestHierarchyRequest implements SupportRequestCommonRequest {\n    \"The unique identifier for this request. It will make it unique across multiple systems, for example 'GSAC-CA-1000' for GSAC requests.\"\n    id: ID!\n\n    \"The short general description of the request.\"\n    summary: String\n\n    \"The full description for this request in wiki markup format (Jira format).\"\n    description: String!\n\n    \"The public facing name for this request type, for example Support Request.\"\n    requestTypeName: String!\n\n    \"The date that the request was created in the format 'yyyy-MM-dd'T'HH:mm:ss.SSSX', for example 2019-10-10T10:10:10.1000Z.\"\n    createdDate: SupportRequestDisplayableDateTime!\n\n    \"The current status of the request, for example open.\"\n    status: SupportRequestStatus!\n\n    \"The user that reported this request. This value can be null if the reporter has been removed from the request.\"\n    reporter: SupportRequestUser!\n\n    \"The users that are participants for this request\"\n    participants: [SupportRequestUser!]!\n\n    \"Parent ticket to this Request\"\n    parent: SupportRequestHierarchyRequest\n\n    \"child ticket(s) to this request \"\n    children: [SupportRequestHierarchyRequest!]\n\n    \"The flag whether request view should be routed to the customer support portal read/write view or gsac customer view.\"\n    targetScreen: String!\n}\n\ntype SupportRequestStatus {\n    \"General category of request's status.\"\n    category: SupportRequestStatusCategory!\n\n    \"The descriptive, publicly-facing text shown to customers for this request\"\n    text: String!\n\n    \"The date at which the status change was done.\"\n    createdDate: SupportRequestDisplayableDateTime\n}\n\ntype SupportRequestTransition {\n    \"Unique transition Id of the field.\"\n    id: String!\n\n    \"The transition name, publically-facing text shown to customers for this request\"\n    name: String!\n}\n\n\"The general category for the status of the ticket.\"\nenum SupportRequestStatusCategory {\n    OPEN\n    IN_PROGRESS\n    DONE\n}\n\n\"The general category for the status of the ticket.\"\nenum SupportRequestQueryStatusCategory {\n    OPEN\n    DONE\n}\n\n\"A user (customer or agent) of the support system.\"\ntype SupportRequestPage {\n\n    profile: SupportRequestUser\n\n    \"Search for the requests that the user reported and/or participated in\"\n    requests(\n        \"Text criteria to search in the content of the request. It will search in places like the summary or description of a Jira issue.\"\n        searchTerm: String\n\n        \"The user's ownership on this request. If this left blank it will be all requests.\"\n        ownership: SupportRequestQueryOwnership\n\n        \"Whether the request is opened or closed. If this is left blank all requests will be included.\"\n        status: SupportRequestQueryStatusCategory\n\n        \"The offset of requests to obtain, starting at 0. E.g. if this is 20 it will offset from the 21st request\"\n        offset: Int! = 0\n\n        \"The number of requests to return from the offset number defined.\"\n        size: Int! = 20\n\n        \"The project all requests must belong to. If this left blank it will be all requests.\"\n        project: String\n\n        \"The request type all requests must belong to. Should be used in conjunction with project.  If this left blank it will be all requests.\"\n        requestType: String\n\n        \"Developer feature; Specify the backends to search against. Leave blank to assume standard behavior\"\n        backend: [String!]\n    ): SupportRequests\n\n    \"Search for the migration requests that the user reported and/or participated in\"\n    migrationRequests(\n        \"The user's ownership on this request. If this left blank it will be all requests.\"\n        ownership: SupportRequestQueryOwnership\n\n        \"Whether the request is opened or closed. If this is left blank all requests will be included.\"\n        status: SupportRequestQueryStatusCategory\n\n        \"The offset of requests to obtain, starting at 0. E.g. if this is 20 it will offset from the 21st request\"\n        offset: Int! = 0\n\n        \"The number of requests to return from the offset number defined.\"\n        size: Int! = 20\n    ): SupportRequestHierarchyRequests\n\n    \"Search for the named contacts of the orgs/sens that user belongs to\"\n    namedContactRelations : SupportRequestNamedContactRelations\n}\n\ntype SupportRequestField {\n    \"Unique Id of the field, for example description, custom_field_1234\"\n    id: String!\n\n    \"The public facing name of the field, for example Priority, Customer Timezone\"\n    label: String!\n\n    \"The public facing value of the field.\"\n    value: SupportRequestFieldValue!\n}\n\n\"The value of the field. This has been kept as a separate type for extensibility, such as including icons. \"\ntype SupportRequestFieldValue {\n    \"The value of the field, e.g. Priority 4.\"\n    value: String!\n}\n\n\"A comment for the request. These are non-hierarchical comments and are only linked to a single request.\"\ntype SupportRequestComment {\n    \"The user that created this comment.\"\n    author: SupportRequestUser!\n\n    \"The comment message in wiki markup format (Jira format).\"\n    message: String!\n\n    \"The date that this comment was originally created\"\n    createdDate: SupportRequestDisplayableDateTime!\n\n\n    \"The users that mentioned in this comment.\"\n    mentionedUsers:[SupportRequestUser!]!\n}\n\n\"A DateTime type for the request, this contains multiple formats of datetime\"\ntype SupportRequestDisplayableDateTime {\n    \"Offset friendly date time\"\n    dateTime: String!\n\n    \"Display friendly date time.\"\n    friendly: String!\n\n    \"Epoch milliseconds\"\n    epochMillis: Long!\n}\n\ntype SupportRequestComments {\n    \"The item used as the first item in the page of results\"\n    offset: Int!\n\n    \"Total number of items to return, subject to server enforced limits.\"\n    limit: Int!\n\n    \"Number of items to return per page\"\n    size: Int!\n\n    \"Indicates whether the current page returned is the last page of results.\"\n    lastPage: Boolean!\n\n    \"List of comment.\"\n    values: [SupportRequestComment!]!\n}\n\ntype SupportRequestStatuses {\n    \"The item used as the first item in the page of results\"\n    offset: Int!\n\n    \"Total number of items to return, subject to server enforced limits.\"\n    limit: Int!\n\n    \"Number of items to return per page\"\n    size: Int!\n\n    \"Indicates whether the current page returned is the last page of results.\"\n    lastPage: Boolean!\n\n    \"List of status transitions.\"\n    values: [SupportRequestStatus!]!\n}\n\ntype SupportRequestTransitions {\n\n    \"The item used as the first item in the page of results\"\n    offset: Int!\n\n    \"Total number of items to return, subject to server enforced limits.\"\n    limit: Int!\n\n    \"Number of items to return per page\"\n    size: Int!\n\n    \"Indicates whether the current page returned is the last page of results.\"\n    lastPage: Boolean!\n\n    \"List of status transitions.\"\n    values: [SupportRequestTransition!]!\n}\n\ntype SupportRequestNamedContactRelations {\n    cloudEnterpriseRelations : [SupportRequestNamedContactRelation]\n\n    premierSupportRelations : [SupportRequestNamedContactRelation]\n}\n\ntype SupportRequestNamedContactRelation {\n    \"The unique id of the org in case of cloud enterprise\"\n    orgId: String\n\n    \"Name of the org in case of cloud enterprise\"\n    orgName: String\n\n    \"Support Entitlement Number. This is relevant only for premier support server business\"\n    sen: String\n\n    \"List of named contacts relations for a user\"\n    contactRelations: [SupportRequestContactRelation]\n}\n\ntype SupportRequestContactRelation {\n    \"Open request tickets for a user\"\n    openRequest : SupportRequestTicket\n\n    \"contact details of a user\"\n    contact: SupportRequestUser\n}\n\ntype SupportRequestTicket {\n    \"unique key/id of the request ticket\"\n    issueKey : String\n    \"status name for a Support ticket\"\n    statusName: String\n    \"status category Key\"\n    categoryKey: String\n}\n\ntype SupportRequestUser {\n\n    \"Identity User\"\n    user: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.user.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n\n    \"The GSAC username for this user.\"\n    username: String\n\n    \"The GSAC email for this user\"\n    email: String\n\n    \"The GSAC display name of user\"\n    displayName: String\n\n}\n\ntype SupportRequestParticipants {\n\n     \"The item used as the first item in the page of results\"\n     offset: Int!\n\n     \"Total number of items to return, subject to server enforced limits.\"\n     limit: Int!\n\n     \"Number of items to return per page\"\n     size: Int!\n\n     \"Indicates whether the current page returned is the last page of results.\"\n     lastPage: Boolean!\n\n     \"List of request participants.\"\n     values: [SupportRequestUser!]!\n }\n\ninput SupportRequestAddCommentInput {\n    \"The comment message in wiki markup format (Jira format).\"\n    message: String!\n\n    \"unique key/id of the request ticket\"\n    issueKey : String!\n}\n\ninput SupportRequestTransitionInput {\n    \"unique key/id of the request ticket\"\n    requestKey : String!\n\n    \"transition Id of from workflow\"\n    transitionId: ID!\n\n    \"The comment message in wiki markup format (Jira format).\"\n    comment: String\n}\n\ninput SupportRequestParticipantsInput {\n\n    \"unique key/id of the request ticket\"\n    requestKey : String!\n\n    aaids: [String!]\n\n    \"list of request participants username\"\n    gsacUsernames: [String!]\n\n}\n\n\"Query parameter for how this user has access to the request, e.g. they were the reporter or added as a participant.\"\nenum SupportRequestNamedContactOperation {\n    ADD\n    REMOVE\n}\n\ntype SupportRequestLastComment {\n    \"The item used as the first item in the page of results\"\n    offset: Int!\n\n    \"List of comment.\"\n    values: [SupportRequestComment!]!\n\n}\n\n","forge_metrics_service":"extend enum RateLimitingCurrency {\n    FORGE_METRICS_CURRENCY\n}\n\ninput ForgeMetricsIntervalInput {\n    \"\"\"\n    \"start\" and \"end\" are ISO-8601 formatted timestamps\n    \"\"\"\n    start: DateTime!\n    end: DateTime!\n}\n\ninput ForgeMetricsQueryFilters {\n    environment: ID\n    interval: ForgeMetricsIntervalInput!\n}\n\nenum ForgeMetricsGroupByDimensions {\n    USER_TIER\n    ENVIRONMENT_ID\n    ERROR_TYPE\n}\n\ninput ForgeMetricsQueryInput {\n    filters: ForgeMetricsQueryFilters!\n    groupBy: [ForgeMetricsGroupByDimensions!]\n}\n\nenum ForgeMetricsDataType {\n    DATE_TIME\n    CATEGORY\n    NUMERIC\n}\n\ntype ForgeMetricsLabelGroup {\n    key: String!\n    value: String!\n}\n\ninterface ForgeMetricsSeries {\n    groups: [ForgeMetricsLabelGroup!]!\n}\n\nenum ForgeMetricsResolutionUnit {\n  HOURS\n  MINUTES\n}\n\ntype ForgeMetricsResolution {\n  size: Int!\n  units: ForgeMetricsResolutionUnit!\n}\n\ninterface ForgeMetricsData {\n    name: String!\n    type: ForgeMetricsDataType!\n    series: [ForgeMetricsSeries!]\n    resolution: ForgeMetricsResolution!\n}\n\ntype ForgeMetricsSuccessRateDataPoint {\n    timestamp: DateTime!\n    value: Float!\n}\n\ntype ForgeMetricsInvocationDataPoint {\n    timestamp: DateTime!\n    count: Int!\n}\n\ntype ForgeMetricsErrorsDataPoint {\n    timestamp: DateTime!\n    count: Int!\n}\n\ntype ForgeMetricsSuccessRateSeries implements ForgeMetricsSeries {\n    groups: [ForgeMetricsLabelGroup!]!\n    data: [ForgeMetricsSuccessRateDataPoint!]!\n}\n\ntype ForgeMetricsInvocationSeries implements ForgeMetricsSeries {\n    groups: [ForgeMetricsLabelGroup!]!\n    data: [ForgeMetricsInvocationDataPoint!]!\n}\n\ntype ForgeMetricsErrorsSeries implements ForgeMetricsSeries {\n    groups: [ForgeMetricsLabelGroup!]!\n    data: [ForgeMetricsErrorsDataPoint!]!\n}\n\ntype ForgeMetricsSuccessRateData implements ForgeMetricsData {\n    name: String!\n    type: ForgeMetricsDataType!\n    series: [ForgeMetricsSuccessRateSeries!]!\n    resolution: ForgeMetricsResolution!\n}\n\ntype ForgeMetricsSuccessRateValueData implements ForgeMetricsData {\n    name: String!\n    type: ForgeMetricsDataType!\n    series: [ForgeMetricsSuccessRateSeries!]!\n    resolution: ForgeMetricsResolution!\n}\n\ntype ForgeMetricsInvocationData implements ForgeMetricsData {\n    name: String!\n    type: ForgeMetricsDataType!\n    series: [ForgeMetricsInvocationSeries!]!\n    resolution: ForgeMetricsResolution!\n}\n\ntype ForgeMetricsErrorsData implements ForgeMetricsData {\n    name: String!\n    type: ForgeMetricsDataType!\n    series: [ForgeMetricsErrorsSeries!]!\n    resolution: ForgeMetricsResolution!\n}\n\nunion ForgeMetricsSuccessRateResult = ForgeMetricsSuccessRateData | QueryError\nunion ForgeMetricsSuccessRateValueResult = ForgeMetricsSuccessRateValueData | QueryError\nunion ForgeMetricsInvocationsResult = ForgeMetricsInvocationData | QueryError\nunion ForgeMetricsErrorsResult = ForgeMetricsErrorsData | QueryError\n\ntype ForgeMetricsQuery {\n    appId: ID!\n    successRate(query: ForgeMetricsQueryInput!): ForgeMetricsSuccessRateResult!\n    successRateValue(query: ForgeMetricsQueryInput!): ForgeMetricsSuccessRateValueResult!\n    invocations(query: ForgeMetricsQueryInput!): ForgeMetricsInvocationsResult!\n    errors(query: ForgeMetricsQueryInput!): ForgeMetricsErrorsResult!\n}\n\nextend type EcosystemQuery {\n    forgeMetrics(appId: ID! @ARI(type: \"app\", owner: \"ecosystem\")): ForgeMetricsQuery @beta(name: \"ForgeMetricsQuery\") @rateLimit(cost: 50, currency: FORGE_METRICS_CURRENCY)\n}\n","activity":"# --------------------------------------- activity_api.graphqls\n\ntype Query {\n\n    \"\"\"\n    API v2\n    Get user activities.\n    \"\"\"\n    activities: Activities @scopes(required: [CONFLUENCE_ATLASSIAN_EXTERNAL]) @scopes(required: [JIRA_ATLASSIAN_EXTERNAL])\n\n    \"\"\"\n    API v3\n    \"\"\"\n    activity: Activity @beta(name: \"ActivityV3Api\") @scopes(required: [CONFLUENCE_ATLASSIAN_EXTERNAL]) @scopes(required: [JIRA_ATLASSIAN_EXTERNAL])\n\n}\n\n\"\"\"\nRepresents arbitrary transition,\ne.g. in case of TRANSITIONED event type it could be `from: \"inprogress\" to: \"done\"`.\n\"\"\"\ninput ActivityTransition {\n    from: String\n    to: String\n}\n\ntype ActivityUser {\n    accountId: ID!\n}\n\ntype ActivitiesContributor {\n\n    profile: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.profile.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n\n    \"\"\"\n    ISO 8601\n    \"\"\"\n    lastAccessedDate: DateTime\n\n    \"\"\"\n    count of contributions for sorting by frequency,\n    all event types that is being ingested, except VIEWED and VIEWED_CONTENT\n    is considered to be a contribution\n    \"\"\"\n    count: Int\n}\n\nenum ActivitiesFilterType {\n    AND\n    OR\n}\n\ntype ActivityPageInfo {\n    hasNextPage: Boolean!\n    hasPreviousPage: Boolean!\n}\n\n\nunion ActivitiesEventExtension = ActivitiesTransitionedEvent | ActivitiesCommentedEvent\n\n\"\"\"\nExtension of ActivitiesEvent, is a part of ActivitiesEventExtension union\n\"\"\"\ntype ActivitiesTransitionedEvent {\n    from: String\n    to: String\n}\n\n\"\"\"\nExtension of ActivitiesEvent, is a part of ActivitiesEventExtension union\n\"\"\"\ntype ActivitiesCommentedEvent {\n    commentId: ID!\n}\n\n# --------------------------------------- activity_api_v2.graphqls\n\n\ntype Activities {\n\n    \"\"\"\n    get all activity\n    - filters - query filters for the activity stream\n    - first - show 1st <N> items of the response\n    \"\"\"\n    all(filters: [ActivitiesFilter!], first: Int, after: String): ActivitiesConnection!\n\n    \"\"\"\n    get \"Worked on\" activity\n    - filters - query filters for the activity stream\n    - first - show 1st <N> items of the response\n    \"\"\"\n    workedOn(filters: [ActivitiesFilter!], first: Int, after: String): ActivitiesConnection!\n\n    \"\"\"\n    get activity for the currently logged in user\n    \"\"\"\n    myActivities: MyActivities\n\n}\n\ntype MyActivities {\n\n    \"\"\"\n    get all activity for the currently logged in user\n    - filters - query filters for the activity stream\n    - first - show 1st <N> items of the response\n    \"\"\"\n    all(filters: [ActivitiesFilter!], first: Int, after: String): ActivitiesConnection\n\n    \"\"\"\n    get \"worked on\" activity for the currently logged in user\n    - filters - query filters for the activity stream\n    - first - show 1st <N> items of the response\n    \"\"\"\n    workedOn(filters: [ActivitiesFilter!], first: Int, after: String): ActivitiesConnection\n\n    \"\"\"\n    get \"viewed\" activity for the currently logged in user\n    - filters - query filters for the activity stream\n    - first - show 1st <N> items of the response\n    \"\"\"\n    viewed(filters: [ActivitiesFilter!], first: Int, after: String): ActivitiesConnection\n\n}\n\ninput ActivitiesFilter {\n\n    \"\"\"\n    Defines relationship in-between filter arguments (AND/OR)\n    \"\"\"\n    type: ActivitiesFilterType\n\n    arguments: ActivitiesArguments\n\n}\n\ninput ActivitiesArguments {\n\n    \"\"\"\n    set of Atlassian account IDs\n    \"\"\"\n    accountIds: [ID!]\n\n    \"\"\"\n    set of Cloud IDs\n    \"\"\"\n    cloudIds: [ID!]\n\n    \"\"\"\n    set of products\n    \"\"\"\n    products: [ActivityProduct!]\n\n    \"\"\"\n    set of Event Types\n    \"\"\"\n    eventTypes: [ActivityEventType!]\n\n    \"\"\"\n    set of Object Types\n    \"\"\"\n    objectTypes: [ActivitiesObjectType!]\n\n    \"\"\"\n    arbitrary transition filters\n    \"\"\"\n    transitions: [ActivityTransition!]\n\n    \"\"\"\n    set of Container IDs\n    \"\"\"\n    containerIds: [ID!]\n\n    \"\"\"\n    The creation time of the earliest events to be included in the result\n    \"\"\"\n    earliestStart: DateTime\n\n    \"\"\"\n    The creation time of the latest events to be included in the result\n    \"\"\"\n    latestStart: DateTime\n}\n\ntype ActivityEdge {\n\n    cursor : String!\n\n    node : ActivitiesItem\n}\n\ntype ActivitiesConnection {\n\n    edges: [ActivityEdge]\n\n    nodes: [ActivitiesItem!]!\n\n    pageInfo : ActivityPageInfo!\n}\n\ntype ActivitiesItem implements Node {\n\n    \"\"\"\n    Base64 encoded ARI of the activity.\n    \"\"\"\n    id: ID!\n\n    timestamp: DateTime\n\n    object: ActivitiesObject\n\n}\n\ntype ActivitiesObject implements Node {\n\n    \"\"\"\n    Base64 encoded ARI of the object.\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    Local (in product) object ID of the corresponding object.\n    \"\"\"\n    localResourceId: ID\n\n    name: String\n\n    type: ActivityObjectType\n\n    product: ActivityProduct\n\n    cloudId: String\n\n    url: URL\n\n    iconUrl: URL\n\n    \"\"\"\n    Hierarchy of the containers, top container comes first\n    \"\"\"\n    containers: [ActivitiesContainer!]\n\n    contributors: [ActivitiesContributor!]\n\n    parent: ActivitiesObjectParent\n\n    events(first: Int): [ActivitiesEvent!]\n\n    extension: ActivitiesObjectExtension\n\n}\n\nunion ActivitiesObjectExtension = ActivitiesJiraIssue\n\n\"\"\"\nExtension of ActivitiesObject, is a part of ActivitiesObjectExtension union\n\"\"\"\ntype ActivitiesJiraIssue {\n\n    issueKey: String\n\n}\n\ntype ActivitiesEvent implements Node {\n\n    \"\"\"\n    Unique event ID\n    \"\"\"\n    id: ID!\n\n    timestamp: DateTime\n\n    eventType: ActivityEventType\n\n    user: ActivitiesUser\n\n    extension: ActivitiesEventExtension\n\n}\n\ntype ActivitiesUser {\n\n    profile: User => hydrated from identity.users(accountIds: $source.profile.accountId) object identified by accountId, batch size 90\n\n}\ntype ActivitiesObjectParent {\n\n    \"\"\"\n    Base64 encoded ARI of the object.\n    \"\"\"\n    id: ID!\n\n    type: ActivityObjectType\n\n}\n\ntype ActivitiesContainer {\n\n    \"Base64 encoded ARI of container.\"\n    id: ID!\n\n    \"Local (in product) object ID of the corresponding object.\"\n    localResourceId: ID\n\n    name: String\n\n    type: ActivitiesContainerType\n\n    product: ActivityProduct\n\n    cloudId: String\n\n    url: URL\n\n    iconUrl: URL\n\n}\n\nenum ActivityObjectType {\n    SITE\n    PROJECT\n    ISSUE\n    COMMENT\n    SPACE\n    PAGE\n    BLOGPOST\n    TASK\n    GOAL\n}\n\nenum ActivitiesObjectType {\n    ISSUE\n    PAGE\n    BLOGPOST\n\n    \"\"\"\n    Refers to a townsquare project (not to be confused with a jira project)\n    \"\"\"\n    PROJECT\n    GOAL\n}\n\nenum ActivityProduct {\n    JIRA\n    JIRA_BUSINESS\n    JIRA_SOFTWARE\n    JIRA_OPS\n    JIRA_SERVICE_DESK\n    CONFLUENCE\n    TOWNSQUARE\n}\n\nenum ActivitiesContainerType {\n    SITE\n    PROJECT\n    SPACE\n    WORKSPACE\n}\n\nenum ActivityEventType {\n    ASSIGNED\n    UNASSIGNED\n    VIEWED\n    COMMENTED\n    UPDATED\n    CREATED\n    LIKED\n    TRANSITIONED\n    PUBLISHED\n    EDITED\n}\n\n# --------------------------------------- activity_api_v3\n\ntype Activity {\n\n    all(filter: ActivityFilter, first: Int, after: String): ActivityConnection!\n\n    \"\"\"\n    Worked On: includes actions like CREATED, UPDATED, COMMENTED, etc.\n    \"\"\"\n    workedOn(filter: ActivityFilter, first: Int, after: String): ActivityConnection!\n\n    myActivity: MyActivity\n\n}\n\ntype MyActivity {\n\n    all(filter: MyActivityFilter, first: Int, after: String): ActivityConnection!\n\n    workedOn(filter: MyActivityFilter, first: Int, after: String): ActivityConnection!\n\n    viewed(filter: MyActivityFilter, first: Int, after: String): ActivityConnection!\n}\n\ninput ActivityFilter {\n\n    \"\"\"\n    set of actor ARIs whose activity should be searched (ex: AAIDs)\n    \"\"\"\n    actors: [ID!]\n\n    \"\"\"\n    Defines relationship between the filter arguments. Default: AND\n    \"\"\"\n    type: ActivitiesFilterType\n\n    \"\"\"\n    These are always AND-ed with accountIds\n    \"\"\"\n    arguments: ActivityFilterArgs\n\n}\n\ninput MyActivityFilter {\n\n    \"\"\"\n    Defines relationship between the filter arguments. Default: AND\n    \"\"\"\n    type: ActivitiesFilterType\n\n    arguments: ActivityFilterArgs\n\n}\n\ninput ActivityFilterArgs {\n\n    \"\"\"\n    set of top-level container ARIs (ex: Cloud ID, workspace ID)\n    \"\"\"\n    rootContainerIds: [ID!]\n\n    \"\"\"\n    set of products (derived from the resource ARI)\n    ex:\n        jira\n        confluence\n        townsquare\n    \"\"\"\n    products: [String!]\n\n    \"\"\"\n    set of Event Types\n    ex:\n        assigned\n        unassigned\n        viewed\n        updated\n        created\n        liked\n        transitioned\n        published\n        edited\n    \"\"\"\n    eventTypes: [String!]\n\n    \"\"\"\n    set of Object Types (derived from the resource ARI)\n    ex:\n        issue\n        page\n        blogpost\n        comment\n        project (townsquare)\n        goal\n    \"\"\"\n    objectTypes: [String!]\n\n    \"\"\"\n    arbitrary transition filters\n    \"\"\"\n    transitions: [ActivityTransition!]\n\n    \"\"\"\n    set of Container IDs (ex: Jira project ID, Space ID, etc)\n    \"\"\"\n    containerIds: [ID!]\n\n    \"\"\"\n    The creation time of the earliest events to be included in the result\n    \"\"\"\n    earliestStart: DateTime\n\n    \"\"\"\n    The creation time of the latest events to be included in the result\n    \"\"\"\n    latestStart: DateTime\n}\n\n\ntype ActivityItemEdge {\n    cursor : String!\n    node : ActivityNode\n}\n\ntype ActivityConnection {\n    edges: [ActivityItemEdge]\n    pageInfo : ActivityPageInfo!\n}\n\ntype ActivityNode implements Node {\n\n    \"\"\"\n    ARI of the activity\n    \"\"\"\n    id: ID!\n\n    object: ActivityObject\n\n    event: ActivityEvent\n\n}\n\ntype ActivityObject {\n\n    \"\"\"\n    ARI of the object.\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    ARI of the top most container (ex: Site/Workspace)\n    \"\"\"\n    rootContainerId: ID\n\n    \"\"\"\n    Type of the object: ex: Issue, Blog, etc\n    \"\"\"\n    type: String\n\n    product: String\n\n    subProduct: String\n\n    contributors: [ActivitiesContributor!]\n\n    # data: ActivityObjectData\n\n}\n\ntype ActivityEvent {\n\n    \"\"\"\n    Unique event ID\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    ISO 8601\n    \"\"\"\n    timestamp: String\n\n    eventType: String\n\n    actor: User @hydrated(\n        service: \"identity\"\n        field: \"users\"\n        arguments : [{ name:\"accountIds\" value:\"$source.actor.accountId\"}]\n        identifiedBy : \"accountId\"\n        batchSize : 90\n    )\n\n    extension: ActivitiesEventExtension\n\n}","xen_lifecycle_service":"type AppDeployment {\n    id: ID!\n    appId: ID!\n    environmentKey: String!\n    status: AppDeploymentStatus!\n    errorDetails: ErrorDetails\n    createdBy: User @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.createdByAccountId\"}] identifiedBy : \"accountId\"   batchSize : 90)\n    createdAt: String!\n    stages: [AppDeploymentStage!]\n}\n\ninterface AppDeploymentEvent {\n    createdAt: String!\n    stepName: String!\n}\n\nenum AppDeploymentEventLogLevel {\n    INFO\n    WARNING\n    ERROR\n}\n\ntype AppDeploymentLogEvent implements AppDeploymentEvent {\n    stepName: String!\n    message: String\n    level: AppDeploymentEventLogLevel\n    createdAt: String!\n}\n\ntype AppDeploymentSnapshotLogEvent implements AppDeploymentEvent {\n    stepName: String!\n    message: String\n    level: AppDeploymentEventLogLevel\n    createdAt: String!\n}\n\ntype AppDeploymentStageProgress {\n    totalSteps: Int!\n    doneSteps: Int!\n}\n\ntype AppDeploymentStage {\n    key: String!\n    description: String!\n    progress: AppDeploymentStageProgress!\n    events: [AppDeploymentEvent!]\n}\n\nenum AppDeploymentStatus {\n    IN_PROGRESS\n    DONE\n    FAILED\n}\n\nenum AppDeploymentStepStatus {\n    STARTED\n    DONE\n    FAILED\n}\n\ntype AppDeploymentTransitionEvent implements AppDeploymentEvent {\n    stepName: String!\n    newStatus: AppDeploymentStepStatus\n    createdAt: String!\n}\n\nextend type AppEnvironment {\n    variables: [AppEnvironmentVariable!]\n    @hydrated(service: \"xen_lifecycle_service\" field: \"environmentVariablesByAppEnvironment\" arguments : [\n        { name : \"appEnvironmentIds\", value : \"$source.appEnvironmentVariablesId\"}]  indexed : true batchSize : 100\n    )\n    \"A list of installations of the app\"\n    installations: [AppInstallation!]\n    @hydrated(service: \"xen_lifecycle_service\" field: \"installationsByAppEnvironment\" arguments : [\n        { name : \"appEnvironmentIds\", value : \"$source.appEnvironmentInstallationsId\"}]  indexed : true batchSize : 100\n    )\n    \"\"\"\n    This field is currently in BETA - set X-ExperimentalApi-xls-last-deployments-v0 to call it.\n    A list of deployments for app environment\n    \"\"\"\n    deployments: [AppDeployment!] @beta(name: \"xls-last-deployments-v0\")\n    @hydrated(service: \"xen_lifecycle_service\" field: \"appDeploymentsByAppEnvironment\" arguments : [\n        { name : \"appEnvironmentIds\", value : \"$source.appEnvironmentDeploymentsId\"}]  indexed : true batchSize : 100\n    )\n}\n\n\"Used to uniquely identify an environment, when being used as an input.\"\ninput AppEnvironmentInput {\n    appId: ID!\n    key: String!\n}\n\ntype AppEnvironmentVariable {\n    \"The key of the environment variable\"\n    key: String!\n\n    \"The value of the environment variable\"\n    value: String\n\n    \"Whether or not to encrypt\"\n    encrypt: Boolean!\n}\n\n\"The input needed to create or update an environment variable.\"\ninput AppEnvironmentVariableInput {\n    \"The key of the environment variable\"\n    key: String!\n\n    \"The value of the environment variable\"\n    value: String!\n\n    \"Whether or not to encrypt (default=false)\"\n    encrypt: Boolean\n}\n\ninput CreateAppDeploymentInput {\n    appId: ID!\n    environmentKey: String!\n    artifactUrl: URL!\n    hostedResourceUploadId: ID\n}\n\n\"Response from creating a deployment\"\ntype CreateAppDeploymentResponse implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"Details about the created deployment\"\n    deployment: AppDeployment\n}\n\ninput CreateAppDeploymentUrlInput {\n    appId: ID!\n}\n\n\"Response from creating an app deployment url\"\ntype CreateAppDeploymentUrlResponse implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n\n    deploymentUrl: String\n}\n\ninput CreateHostedResourceUploadUrlInput {\n    appId: ID!\n    environmentKey: String!\n    resourceKeys: [String!]!\n}\n\n\"\"\"Response from creating a hosted resource upload url\"\"\"\ntype CreateHostedResourceUploadUrlPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n\n    preSignedUrls: [HostedResourcePreSignedUrl!]\n    uploadId: ID!\n}\n\ntype HostedResourcePreSignedUrl {\n    uploadUrl: String!\n    uploadFormData: JSON!\n}\n\ninput DeleteAppEnvironmentVariableInput {\n    environment: AppEnvironmentInput!\n\n    \"The key of the environment variable to delete\"\n    key: String!\n}\n\ntype DeleteAppEnvironmentVariablePayload implements Payload {\n  success: Boolean!\n  errors: [MutationError!]\n}\n\ninput ExternalAuthCredentialsInput {\n    \"The oAuth Client Id\"\n    clientId: ID\n\n    \"The shared secret\"\n    clientSecret: String\n}\n\ntype Mutation {\n    createAppDeploymentUrl(input: CreateAppDeploymentUrlInput!): CreateAppDeploymentUrlResponse\n    createHostedResourceUploadUrl(input: CreateHostedResourceUploadUrlInput!): CreateHostedResourceUploadUrlPayload\n\n    \"\"\"\n    Sets the outbound-auth service credentials in a specific environment for a given app.\n\n    This makes the assumption that the environment (and hence container) was already created,\n    and the deploy containing the relevant outbound-auth service definition was already deployed.\n    \"\"\"\n    setExternalAuthCredentials(input: SetExternalAuthCredentialsInput!): SetExternalAuthCredentialsPayload\n\n    \"\"\"\n    Sets a key-value pair for a given environment.\n\n    It will optionally support encryption of the provided pair for sensitive variables.\n    This operation is an upsert.\n    \"\"\"\n    setAppEnvironmentVariable(input: SetAppEnvironmentVariableInput!): SetAppEnvironmentVariablePayload\n\n    \"\"\"\n    Deletes a key-value pair for a given environment.\n\n    This operation is idempotent.\n    \"\"\"\n    deleteAppEnvironmentVariable(input: DeleteAppEnvironmentVariableInput!): DeleteAppEnvironmentVariablePayload\n    createAppDeployment(input: CreateAppDeploymentInput!): CreateAppDeploymentResponse\n}\n\ntype Query {\n    appDeployment(appId: ID!, environmentKey: String!, id: ID!): AppDeployment\n}\n\ninput SetAppEnvironmentVariableInput {\n    environment: AppEnvironmentInput!\n\n    \"The input identifying the environment variable to insert\"\n    environmentVariable: AppEnvironmentVariableInput!\n}\n\ntype SetAppEnvironmentVariablePayload implements Payload {\n  success: Boolean!\n  errors: [MutationError!]\n}\n\ninput SetExternalAuthCredentialsInput {\n    \"The input identifying what environment to set credentials for\"\n    environment: AppEnvironmentInput!\n\n    \"The key for the service we're setting the credentials for (must already exist via previous deployment)\"\n    serviceKey: String!\n\n    \"An object representing the credentials to set\"\n    credentials: ExternalAuthCredentialsInput!\n}\n\ntype SetExternalAuthCredentialsPayload implements Payload {\n  success: Boolean!\n  errors: [MutationError!]\n}\n","townsquare":"type Query {\n  townsquare: TownsquareQueryApi @namespaced\n}\n\ntype TownsquareQueryApi @renamed(from: \"Townsquare\") {\n  \"\"\"\n  Get projects by ARI.\n  \"\"\"\n  projectsByAri(aris: [String] @ARI(type: \"project\", owner: \"townsquare\")): [TownsquareProject] @beta(name: \"Townsquare\")\n\n  \"\"\"\n  Get goals by ARI.\n  \"\"\"\n  goalsByAri(aris: [String] @ARI(type: \"goal\", owner: \"townsquare\")): [TownsquareGoal] @beta(name: \"Townsquare\")\n\n  \"\"\"\n  Get comments by ARI.\n  \"\"\"\n  commentsByAri(aris: [String] @ARI(type: \"comment\", owner: \"townsquare\")): [TownsquareComment] @beta(name: \"Townsquare\")\n\n  \"\"\"\n  Search for projects.\n  \"\"\"\n  projectSearch(after: String, cloudId: String!, first: Int, phase: [String], q: String, sort: [TownsquareProjectSortEnum]): TownsquareProjectConnection @beta(name: \"Townsquare\")\n\n  \"\"\"\n  Search for goals.\n  \"\"\"\n  goalSearch(after: String, cloudId: String!, first: Int, q: String, sort: [TownsquareGoalSortEnum]): TownsquareGoalConnection @beta(name: \"Townsquare\")\n}\n\ntype TownsquareProjectConnection @renamed(from: \"ProjectConnection\") {\n  edges: [TownsquareProjectEdge]\n  pageInfo: PageInfo!\n}\n\ntype TownsquareGoalConnection @renamed(from: \"GoalConnection\") {\n  edges: [TownsquareGoalEdge]\n  pageInfo: PageInfo!\n}\n\ntype TownsquareCommentConnection @renamed(from: \"CommentConnection\") {\n  edges: [TownsquareCommentEdge]\n  pageInfo: PageInfo!\n}\n\ntype TownsquareProjectEdge @renamed(from: \"ProjectEdge\") {\n  cursor: String!\n  node: TownsquareProject\n}\n\ntype TownsquareGoalEdge @renamed(from: \"GoalEdge\") {\n  cursor: String!\n  node: TownsquareGoal\n}\n\ntype TownsquareCommentEdge @renamed(from: \"CommentEdge\") {\n  cursor: String!\n  node: TownsquareComment\n}\n\ntype TownsquareProject implements Node @renamed(from: \"Project\") {\n  archived: Boolean!\n  iconData: String\n  id: ID! @ARI(type: \"project\", owner: \"townsquare\") @renamed(from: \"ari\")\n  key: String!\n  name: String!\n  uuid: String!\n  owner: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.owner.aaid\"}] identifiedBy : \"accountId\" batchSize : 90 )\n  url: String\n  state: TownsquareProjectState @beta(name: \"TownsquareProjectState\")\n}\n\ntype TownsquareGoal implements Node @renamed(from: \"Goal\") {\n  archived: Boolean!\n  iconData: String\n  id: ID! @ARI(type: \"goal\", owner: \"townsquare\") @renamed(from: \"ari\")\n  key: String!\n  name: String!\n  uuid: String!\n  owner: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.owner.aaid\"}] identifiedBy : \"accountId\" batchSize : 90 )\n  url: String\n}\n\ntype TownsquareComment implements Node @renamed(from: \"Comment\") {\n  creator: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.creator.aaid\"}] identifiedBy : \"accountId\" batchSize : 90 )\n  id: ID! @ARI(type: \"comment\", owner: \"townsquare\") @renamed(from: \"ari\")\n  url: String\n  uuid: String\n  object: TownsquareCommentObject\n}\n\ntype TownsquareCommentObject @renamed(from: \"CommentObject\") {\n  ari: String\n  iconData: String\n  name: String\n  url: String\n}\n\ntype TownsquareProjectState @renamed(from: \"ProjectState\") {\n  label: String\n  value: TownsquareProjectStateValue\n}\n\nenum TownsquareProjectStateValue @renamed(from: \"ProjectStateValue\") {\n  archived\n  at_risk\n  done\n  off_track\n  on_track\n  paused\n  pending\n}\n\nenum TownsquareGoalSortEnum @renamed(from: \"GoalSortEnum\") {\n  CREATION_DATE_ASC\n  CREATION_DATE_DESC\n  HIERARCHY_ASC\n  HIERARCHY_DESC\n  HIERARCHY_LEVEL_ASC\n  HIERARCHY_LEVEL_DESC\n  ID_ASC\n  ID_DESC\n  LATEST_UPDATE_DATE_ASC\n  LATEST_UPDATE_DATE_DESC\n  MEMBER_COUNT_ASC\n  MEMBER_COUNT_DESC\n  NAME_ASC\n  NAME_DESC\n  PROJECT_COUNT_ASC\n  PROJECT_COUNT_DESC\n  SCORE_ASC\n  SCORE_DESC\n  TARGET_DATE_ASC\n  TARGET_DATE_DESC\n  WATCHING_ASC\n  WATCHING_DESC\n}\n\nenum TownsquareProjectSortEnum @renamed(from: \"ProjectSortEnum\") {\n  CREATION_DATE_ASC\n  CREATION_DATE_DESC\n  ID_ASC\n  ID_DESC\n  LATEST_UPDATE_DATE_ASC\n  LATEST_UPDATE_DATE_DESC\n  NAME_ASC\n  NAME_DESC\n  START_DATE_ASC\n  START_DATE_DESC\n  STATUS_ASC\n  STATUS_DESC\n  TARGET_DATE_ASC\n  TARGET_DATE_DESC\n  WATCHING_ASC\n  WATCHING_DESC\n}","devops_container_relationships_jira_project_and_repo":"type Query {\n    \"\"\"\n    The connection entity for Jira project relationships for the specified repository, according to the specified\n    pagination, filtering and sorting.\n    The ID is either a Bitbucket repository ARI, or the ID of a third-party repository.\n    \"\"\"\n    jiraProjectRelationshipsForRepository(\n        id: ID!,\n        \"\"\"Breaking change for adding cloud id as mandatory argument\"\"\"\n        cloudId: ID! @CloudID,\n        first: Int = 20,\n        after: String,\n        filter: JiraProjectAndRepositoryRelationshipFilter,\n        sort: JiraProjectAndRepositoryRelationshipSort): JiraProjectAndRepositoryRelationshipConnection\n    \"\"\"\n    The connection entity for repository relationships for the specified Jira project, according to the specified\n    pagination, filtering and sorting.\n    \"\"\"\n    repositoryRelationshipsForJiraProject(\n        id: ID! @ARI(type: \"project\", owner: \"jira\")\n        first: Int = 20,\n        after: String,\n        filter: JiraProjectAndRepositoryRelationshipFilter,\n        sort: JiraProjectAndRepositoryRelationshipSort): JiraProjectAndRepositoryRelationshipConnection\n\n    \"\"\"\n    The entity for the specified Jira project and repository relationship.\n    \"\"\"\n    jiraProjectAndRepositoryRelationship(\n        id: ID! @ARI(type: \"jira-project-and-vcs-repository-relationship\", owner: \"graph\")\n    ): JiraProjectAndRepositoryRelationship\n}","shared":"# ===========================\n#\n# This file contains the shared subscription directives of the AGG and their support types.\n#\n# ===========================\n\n\n\"\"\"\nSpecifies the EventMatchingStrategy that is used for a subscription field.\neg. onJiraIssueCreatedOrUpdated => JIRA_BY_PROJECT or JIRA_BY_ISSUE\n\"\"\"\ndirective @eventMatchingStrategy( name : EventMatchingStrategies! ) on FIELD_DEFINITION\n\n\"\"\"\nStreamhub AVIs to listen to in subscription request\n\"\"\"\ndirective @eventAvis( names : [EventKnownAVIs!]! ) on FIELD_DEFINITION\n\n\"\"\"\nThe graphql callback query to call to enrich data when receiving Streamhub event\n\"\"\"\ndirective @eventEnrichmentQuery(name: String) on FIELD_DEFINITION\n\nenum EventMatchingStrategies {\n    \"\"\"\n    This strategy will look ar Jira events and match on cloud id and project id\n    \"\"\"\n    JIRA_BY_CLOUD\n    JIRA_BY_PROJECT\n    JIRA_BY_ISSUE\n    BITBUCKET_BY_REPO\n    BY_ACCOUNT\n    JIRA_BY_CLOUD_BY_PROJECT_TYPE_BY_ACCOUNT\n}\n\nenum EventKnownAVIs {\n    AVI_JIRA_ISSUE_CREATED @value(val : \"avi:jira:created:issue\")\n    AVI_JIRA_ISSUE_UPDATED @value(val : \"avi:jira:updated:issue\")\n    AVI_BITBUCKET_PR_CREATED @value(val : \"avi:bitbucket:pullrequest:create\")\n}\n\n# ===========================\n#\n# This file contains the shared types of the AGG \n#\n# ===========================\n\n\"\"\"\nFrom the [relay Node specification](https://relay.dev/graphql/objectidentification.htm#sec-Node-Interface)\n\nThe server must provide an interface called `Node`. That interface must include exactly one field, called `id` that returns a non-null `ID`.\n\nThis `id` should be a globally unique identifier for this object, and given just this `id`, the server should be able to refetch the object.\n\"\"\"\ninterface Node {\n    id: ID!\n}\n\n\"\"\"\nRelay-style PageInfo type.\n\nSee [PageInfo specification](https://relay.dev/assets/files/connections-932f4f2cdffd79724ac76373deb30dc8.htm#sec-undefined.PageInfo)\n\n\"\"\"\ntype PageInfo {\n    \"\"\"\n    `hasNextPage` is used to indicate whether more edges exist following the set defined by the clients arguments. If the client is paginating\n    with `first` / `after`, then the server must return true if further edges exist, otherwise false. If the client is paginating with `last` / `before`,\n    then the client may return true if edges further from before exist, if it can do so efficiently, otherwise may return false.\n    \"\"\"\n    hasNextPage: Boolean!\n    \"\"\"\n    `hasPreviousPage` is used to indicate whether more edges exist prior to the set defined by the clients arguments. If the client is paginating\n    with `last` / `before`, then the server must return true if prior edges exist, otherwise false. If the client is paginating with `first` / `after`,\n    then the client may return true if edges prior to after exist, if it can do so efficiently, otherwise may return false.\n    \"\"\"\n    hasPreviousPage: Boolean!\n    \"\"\"\n    startCursor must be the cursor corresponding to the first node in `edges`.\n    \"\"\"\n    startCursor: String\n    \"\"\"\n    endCursor must be the cursor corresponding to the last node in `edges`.\n    \"\"\"\n    endCursor: String\n}\n\n\n\"\"\"\nA mutation response interface.\n\nAccording to the Atlassian standards, all mutations should return a type which implements this interface.\n\n[Apollo GraphQL Documentation](https://www.apollographql.com/docs/apollo-server/essentials/schema#mutation-responses)\n\"\"\"\ninterface MutationResponse {\n    \"A numerical code (such as a HTTP status code) representing the status of the mutation\"\n    statusCode: Int!\n\n    \"Was this mutation successful\"\n    success: Boolean!\n\n    \"A message for this mutation\"\n    message: String!\n}\n\n\n\"\"\"\nGeneric implementation of MutationResponse for responses that don't need any extra data\n\"\"\"\ntype GenericMutationResponse implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n\"\"\"\nThe general shape of a mutation response.\n\"\"\"\ninterface Payload {\n    \"Was this mutation successful\"\n    success: Boolean!\n\n    \"A list of errors if the mutation was not successful\"\n    errors: [MutationError!]\n}\n\n\"\"\"\nAn error that has occurred in response to a mutation\n\"\"\"\ntype MutationError {\n    \"A human readable error message\"\n    message: String\n\n    \"A list of extension properties to the error\"\n    extensions: MutationErrorExtension\n}\n\n\"\"\"\nA error type that can be returned in response to a failed mutation\n\nThis extension carries additional categorisation information about the error\n\"\"\"\ninterface MutationErrorExtension {\n    \"\"\"A numerical code (such as a HTTP status code) representing the error category\"\"\"\n    statusCode: Int\n\n    \"\"\"Application specific error type\"\"\"\n    errorType: String\n}\n\n\"\"\"\nConcrete version of MutationErrorExtension that does not include any extra fields\n\"\"\"\ntype GenericMutationErrorExtension implements MutationErrorExtension {\n    statusCode: Int\n    errorType: String\n}\n\ninterface QueryErrorExtension {\n    \"\"\"\n    A numerical code (such as an HTTP status code) representing the error category.\n    \"\"\"\n    statusCode: Int\n\n    \"\"\"\n    A code representing the type of error. See the CompassErrorType enum for possible values.\n    \"\"\"\n    errorType: String\n}\n\ntype QueryError {\n    \"\"\"\n    The ID of the requested object, or null when the ID is not available.\n    \"\"\"\n    identifier: ID\n\n    \"\"\"\n    A message describing the error.\n    \"\"\"\n    message: String\n\n    \"\"\"\n    Contains extra data describing the error.\n    \"\"\"\n    extensions: [QueryErrorExtension!]\n}\n\n\"\"\"\nConcrete version of QueryErrorExtension that does not include any extra fields\n\"\"\"\ntype GenericQueryErrorExtension implements QueryErrorExtension {\n    statusCode: Int\n    errorType: String\n}\n\n\n# ===========================\n#\n# This file contains the shared OUATH directives of the AGG and their support types.\n#\n# ===========================\n\n\n\"\"\"\nThis directive will ensure that the data for the annotated element is returned to the 3rd party only when the required\nscopes are present in the user context token (scope check). When the product argument is supplied, in addition to the\nscopes being present, it is also required that the scopes have been consented to for that product on the site where the\ndata is queried from (grant check). When data is not queried from a site, grant check is ignored.\nIf either the scope check or the grant check fails, the returned field will be null and a corresponding error is going to\nbe added to the list of errors.\nThis directive is ignored for the 1st party requests.\n\"\"\"\ndirective @scopes(required: [Scope!]!, product: GrantCheckProduct) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE\n\nenum GrantCheckProduct {\n    JIRA\n    JIRA_SERVICEDESK\n    CONFLUENCE\n    COMPASS\n}\n\nenum Scope {\n\n    \"\"\"identity\"\"\"\n    MANAGE_ORG                          @value(val: \"manage:org\")\n    AUTH_CONFLUENCE_USER                @value(val: \"auth:confluence-user\")\n    MANAGE_DIRECTORY                    @value(val: \"manage:directory\")\n    READ_ME                             @value(val: \"read:me\")\n    VIEW_USERPROFILE                    @value(val: \"view:userprofile\")\n    IDENTITY_ATLASSIAN_EXTERNAL         @value(val: \"identity:atlassian-external\")\n\n    \"\"\"compass\"\"\"\n    READ_COMPASS_COMPONENT              @value(val: \"read:component:compass\")\n    WRITE_COMPASS_COMPONENT             @value(val: \"write:component:compass\")\n    READ_COMPASS_SCORECARD              @value(val: \"read:scorecard:compass\")\n    WRITE_COMPASS_SCORECARD             @value(val: \"write:scorecard:compass\")\n    READ_COMPASS_EVENT                  @value(val: \"read:event:compass\")\n    WRITE_COMPASS_EVENT                 @value(val: \"write:event:compass\")\n\n    \"\"\"confluence\"\"\"\n    CONFLUENCE_ATLASSIAN_EXTERNAL       @value(val: \"confluence:atlassian-external\")\n    READ_CONFLUENCE_CONTENT_ALL         @value(val: \"read:confluence-content.all\")\n    READ_CONFLUENCE_CONTENT_SUMMARY     @value(val: \"read:confluence-content.summary\")\n    WRITE_CONFLUENCE_CONTENT            @value(val: \"write:confluence-content\")\n    READ_CONFLUENCE_SPACE_SUMMARY       @value(val: \"read:confluence-space.summary\")\n    WRITE_CONFLUENCE_SPACE              @value(val: \"write:confluence-space\")\n    WRITE_CONFLUENCE_FILE               @value(val: \"write:confluence-file\")\n    READ_CONFLUENCE_PROPS               @value(val: \"read:confluence-props\")\n    WRITE_CONFLUENCE_PROPS              @value(val: \"write:confluence-props\")\n    SEARCH_CONFLUENCE_                  @value(val: \"search:confluence\")\n    MANAGE_CONFLUENCE_CONFIGURATION     @value(val: \"manage:confluence-configuration\")\n    READ_CONFLUENCE_GROUPS              @value(val: \"read:confluence-groups\")\n    WRITE_CONFLUENCE_GROUPS             @value(val: \"write:confluence-groups\")\n    READ_CONFLUENCE_USER                @value(val: \"read:confluence-user\")\n    READ_CONFLUENCE_CONTENT_PERMISSION  @value(val: \"read:confluence-content.permission\")\n\n    \"\"\"ecosystem\"\"\"\n    MANAGE_APP                          @value(val: \"manage:app\")\n    STORAGE_APP                         @value(val: \"storage:app\")\n\n    \"\"\"jira\"\"\"\n    READ_JIRA_USER                      @value(val: \"read:jira-user\")\n    READ_JIRA_WORK                      @value(val: \"read:jira-work\")\n    WRITE_JIRA_WORK                     @value(val: \"write:jira-work\")\n    MANAGE_JIRA_PROJECT                 @value(val: \"manage:jira-project\")\n    MANAGE_JIRA_CONFIGURATION           @value(val: \"manage:jira-configuration\")\n    JIRA_ATLASSIAN_EXTERNAL             @value(val: \"jira:atlassian-external\")\n    MANAGE_JIRA_DATA_PROVIDER           @value(val: \"manage:jira-data-provider\")\n\n    \"\"\"jira-servicedesk\"\"\"\n    READ_SERVICEDESK_REQUEST            @value(val: \"read:servicedesk-request\")\n    WRITE_SERVICEDESK_REQUEST           @value(val: \"write:servicedesk-request\")\n    MANAGE_SERVICEDESK_CUSTOMER         @value(val: \"manage:servicedesk-customer\")\n\n    \"\"\"notification-log\"\"\"\n    READ_NOTIFICATIONS                  @value(val: \"read:notifications\")\n    WRITE_NOTIFICATIONS                 @value(val: \"write:notifications\")\n\n    \"\"\"outbound-auth\"\"\"\n    ADMIN_CONTAINER                     @value(val: \"admin:container\")\n    READ_CONTAINER                      @value(val: \"read:container\")\n    WRITE_CONTAINER                     @value(val: \"write:container\")\n\n    \"\"\"platform\"\"\"\n    MIGRATE_CONFLUENCE                  @value(val: \"migrate:confluence\")\n}\n# ===========================\n#\n# This file contains the shared rate limiting directives of the AGG and their support types.\n#\n# ===========================\n\n\"\"\"\nDirective used for cost based rate limiting.\n\"\"\"\ndirective @rateLimit (cost: Int!, currency: RateLimitingCurrency!) on FIELD_DEFINITION\n\nenum RateLimitingCurrency {\n    TESTING_SERVICE @disabled\n}\n\n# ===========================\n#\n# This file contains the shared directives of the AGG (and their support types).  If it's directive related\n# then it should be place in here.\n#\n# ===========================\n\n\"This allows you to hydrate new values into fields\"\ndirective @hydrated(\n    \"The arguments to the hydrated field\"\n    arguments: [NadelHydrationArgument!],\n    \"The batch size\"\n    batchSize: Int = 200,\n    \"The target top level field\"\n    field: String!,\n    \"How to identify matching results\"\n    identifiedBy: String! = \"id\",\n    \"Are results indexed\"\n    indexed: Boolean = false,\n    \"The target service\"\n    service: String!\n) repeatable on FIELD_DEFINITION\n\n\"This allows you to hydrate new values into fields\"\ninput NadelHydrationArgument {\n    name: String!\n    value: String!\n}\n\n\n\"This allows you to hydrate new values into fields with the @hydratedFrom directive\"\ninput NadelHydrationFromArgument {\n    name: String!\n    valueFromField: String\n    valueFromArg: String\n}\n\n\" This can be extended with new enums which are templates\"\nenum NadelHydrationTemplate {\n    NADEL_PLACEHOLDER @hydratedTemplate(\n        service : \"placeholder\"\n        field : \"placeholder.field\"\n        batchSize : 90\n    )\n}\n\n\"This allows you to hydrate new values into fields\"\ndirective @hydratedFrom(\n    \"The arguments to the hydrated field\"\n    arguments: [NadelHydrationFromArgument!],\n    \"The hydration template to use\"\n    template: NadelHydrationTemplate!\n) repeatable on FIELD_DEFINITION\n\n\"This template directive provides common values to hydrated fields\"\ndirective @hydratedTemplate(\n    \"The target service\"\n    service: String!,\n    \"The target top level field\"\n    field: String!,\n    \"How to identify matching results\"\n    identifiedBy: String! = \"id\",\n    \"Are results indexed\"\n    indexed: Boolean = false,\n    \"Is querying batched\"\n    batched: Boolean = false,\n    \"The batch size\"\n    batchSize: Int = 200,\n    \"The timeout in milliseconds\"\n    timeout: Int = -1\n) on ENUM_VALUE\n\n\n\"This allows you to rename a type or field in the overall schema\"\ndirective @renamed(\n    \"The type to be renamed\"\n    from: String!\n) on SCALAR | OBJECT | FIELD_DEFINITION | INTERFACE | UNION | ENUM | INPUT_OBJECT\n\n\n\"\"\"\nIndicates that the field uses dynamic service resolution. This directive should only be used in commons fields, i.e. fields that are not part of a particular service.\n\"\"\"\ndirective @dynamicServiceResolution on FIELD_DEFINITION\n\n\"\"\"\nOnly used for inside the schema to mark the context for generic types\n\"\"\"\nenum ApiContext {\n    DEVOPS\n}\n\ndirective @GenericType(context:ApiContext!) on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT\n\n\"\"\"\nThis directive can be placed on fields so that consumers need to opt in to using them\nvia a HTTP header.\n\nSee https://developer.atlassian.com/platform/graphql-gateway/ for more details\n\"\"\"\ndirective @beta(name: String!) on FIELD_DEFINITION\n\n\"\"\"\nThis directive can be placed on fields to restrict access to first party clients only.\n\nSee https://developer.atlassian.com/platform/graphql-gateway/ for more details\n\"\"\"\ndirective @atlassian on FIELD_DEFINITION\n\n\"\"\"\nAtlassian Resource Identifier (ARI) directive\n\nIf `interpreted` is set to true then values on input will be parsed as ARIs and broken down\ninto resource ids and the cloud id will be captured and passed on.  On output the resource ID values\nwill be turned back into ARIs.  Setting `interpreted` is aimed at legacy services that assume\nthey deal only with resource ids and not ARI direct.\n\nif `interpreted` is set to false (the default) then the directive is more informational and allows\nthe Atlassian Graphql Gateway to know about the ARI identifier and allows for smarter routing\nand smarter value validation.\n\nSee https://hello.atlassian.net/wiki/spaces/ARCH/pages/161909310/Atlassian+Resource+Identifier+Spec+draft-2.0\n\"\"\"\n# this is NOT the same as the central repo - we need to sort out why eventually\ndirective @ARI (type: String!, owner: String!, interpreted : Boolean! = false, usesActivationId: Boolean! = false)\non ARGUMENT_DEFINITION | FIELD_DEFINITION | INPUT_FIELD_DEFINITION\n\n\"\"\"\nThis directive is used to indicate that an input value is in fact a cloud id and hence the Atlassian Graphql Gateway\ncan perform smarter validation of its values and allow for smarter routing of requests\n\"\"\"\ndirective @CloudID\non ARGUMENT_DEFINITION | FIELD_DEFINITION | INPUT_FIELD_DEFINITION\n\n\n\n\"\"\"\nThis directive allows an alternate string value to be associated with an enum.  For example\n`manage:org` is the name of a scope but an illegal graphql enum name.  This allows you to use\nenums (which are type safe) yet associate them with string values that are needed\n\"\"\"\ndirective @value(val: String!) on ENUM_VALUE\n\n\n\n\n\"\"\"\nThis directive can be applied to a schema element to indicate that it belongds to a particular api group\n\nThis is used by our documentation tooling to group together types and fields into logical groups\n\"\"\"\ndirective @apiGroup(name: ApiGroup) on FIELD_DEFINITION | OBJECT | INPUT_OBJECT | UNION | INTERFACE | ENUM | SCALAR\n\n\"\"\"\nThis enum is the names of API groupings within the total Atlassian API.\n\nThis is used by our documentation tooling to group together types and fields into logical groups\n\"\"\"\nenum ApiGroup {\n    COMPASS\n    JIRA\n    FORGE\n    POLARIS\n    CAAS\n    XEN_LOGS_API\n    DEVOPS_SERVICE\n    DEVOPS_CONTAINER_RELATIONSHIP\n    TEAMS\n    CONTENT_PLATFORM_API\n}\n\n\n\"\"\"\nThis directive can be applied to a top level field to indicate that it is indeed a namespace field, that is\nits not a field that returns data but there to contain other fields that return data.\n\nThis is used by our documentation tooling to help present the most important fields.\n\"\"\"\ndirective @namespaced on FIELD_DEFINITION\n\n\"\"\"\nThis rarely used directive can be used on an schema element to tell the tooling to NOT document the element\n\"\"\"\ndirective @notDocumented on FIELD_DEFINITION | OBJECT | INPUT_OBJECT | UNION | INTERFACE | ENUM | SCALAR\n\n\n\"\"\"\nThis directive indicates that the enum value is in fact disabled\n\"\"\"\ndirective @disabled on ENUM_VALUE\n\n# ===========================\n#\n# This file contains the shared DevOps types that really should be elsewhere but for\n# legacy reasons are here\n#\n# ===========================\n\n\n\"\"\"\nThe state that a code deployment can be in (think of a deployment in Bitbucket Pipelines, CircleCI, etc).\n\"\"\"\nenum DeploymentState @GenericType(context:DEVOPS){\n    PENDING\n    IN_PROGRESS\n    SUCCESSFUL\n    CANCELLED\n    FAILED\n    ROLLED_BACK\n    UNKNOWN\n}\n\n\"\"\"\nThe types of environments that a code change can be released to.\n\nThe release may be via a code deployment or via a feature flag change.\n\"\"\"\nenum DevOpsEnvironmentCategory @GenericType(context:DEVOPS){\n    PRODUCTION\n    STAGING\n    TESTING\n    DEVELOPMENT\n    UNMAPPED\n}\n\n\"\"\"\nAn environment that a code change can be released to.\n\nThe release may be via a code deployment or via a feature flag change.\n\"\"\"\ntype DevOpsEnvironment @GenericType(context:DEVOPS){\n    \"\"\"\n    The type of the environment.\n    \"\"\"\n    category: DevOpsEnvironmentCategory\n\n    \"\"\"\n    The name of the environment to present to the user.\n    \"\"\"\n    displayName: String\n}\n\n\"\"\"\nThis object models the Continuous Delivery (CD) Pipeline concept, an automated process (usually comprised of multiple stages)\nfor getting software from version control right through to the production environment.\n\"\"\"\ntype DeploymentPipeline @GenericType(context:DEVOPS){\n    \"\"\"\n    A URL users can use to link to this deployment pipeline.\n    \"\"\"\n    url: String\n\n    \"\"\"\n    The name of the pipeline to present to the user.\n    \"\"\"\n    displayName: String\n}\n\n\"\"\"\nA type to group various URLs of Provider\n\"\"\"\ntype DevOpsProviderLinks {\n\n    \"\"\"\n    Documentation URL of the provider\n    \"\"\"\n    documentation: URL\n\n    \"\"\"\n    Home URL of the provider\n    \"\"\"\n    home: URL\n\n    \"\"\"\n    List deployments URL for the provider\n    \"\"\"\n    listDeploymentsTemplate: URL\n}\n\n\"\"\"\nA provider that a deployment has been done with.\n\"\"\"\ntype DevOpsProvider {\n    \"\"\"\n    The display name to use for the Provider. May be rendered in the UI. Example: 'Github'.\n    In the future this may be extended to support an I18nString for localized names.\n    \"\"\"\n    name: String\n\n    \"\"\"\n    Links associated with the DevOpsProvider. Currently contains documentation, home and listDeploymentsTemplate URLs.\n    \"\"\"\n    links: DevOpsProviderLinks\n\n    \"\"\"\n    The logo to display for the Provider within the UI. This should be a 32x32 (or similar) favicon style image.\n    In the future this may be extended to support multi-resolution logos.\n    \"\"\"\n    logo: URL\n}# ===========================\n#\n# This file contains the shared scalars provided by the AGG\n#\n# ===========================\n\n\"\"\"\nAn RFC-3339 compliant date time scalar that accepts string values like 1996-12-19T16:39:57-08:00\n\"\"\"\nscalar DateTime\n\n\"\"\"\nA date scalar that accepts string values that are in yyyy-mm-dd format\n\"\"\"\nscalar Date\n\n\"\"\"\nAn URL scalar that accepts string values like [https://www.w3.org/Addressing/URL/url-spec.txt]( https://www.w3.org/Addressing/URL/url-spec.txt)\n\"\"\"\nscalar URL\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified\nby [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\nNote to schema designers - use this scalar with caution as the resultant data becomes untyped\nfrom a consumers point of view.  There are legitimate use cases for this scalar type\nbut it SHOULD not be a common scalar.\n\n\"\"\"\nscalar JSON\n\n\"\"\"\nA scalar that is a 64-bit signed Java primitive data type. Its range is -263 to 263 – 1\n\"\"\"\nscalar Long\n# ===========================\n#\n# This file contains only the types and fields provided directly by the AGG itself.  The other files\n# in this directory should contain more specific information\n#\n# ===========================\n\ntype Query {\n    \"\"\"\n    This field will echo back the word `echo`.  Its only useful for testing\n    \"\"\"\n    echo : String\n\n    \"\"\"\n    This field will dump diagnostics information about currently executing graphql request.\n\n    It is inspired in part by [https://httpbin.org/anything](https://httpbin.org/anything/)\n    \"\"\"\n    diagnostics : JSON\n    \"\"\"\n    Lookup an Atlassian entity by a global id - the value of `id` has to be an Atlassan Resource Identifier (ARI).\n    \"\"\"\n    node(id: ID! @ARI(type: \"node\", owner: \"shared\")): Node @dynamicServiceResolution\n}\n\n\n\n\n\n","code_in_jira":"type Query {\n    codeInJira(\n        \"\"\"\n        The identifier that indicates that cloud instance this data is to be fetched for\n        \"\"\"\n        cloudId: ID! @CloudID\n    ): CodeInJira @namespaced\n}\n\ntype CodeInJira {\n    \"\"\"Site specific configuration required to build the 'Code in Jira' page\"\"\"\n    siteConfiguration: CodeInJiraSiteConfiguration\n    \"\"\"User specific configuration required to build the 'Code in Jira' page\"\"\"\n    userConfiguration: CodeInJiraUserConfiguration,\n}\n\ntype CodeInJiraSiteConfiguration {\n    \"\"\"\n    A list of providers that are already connected to the site\n    Eg. Bitbucket, Github, Gitlab etc.\n    \"\"\"\n    connectedVcsProviders: [CodeInJiraVcsProvider]\n}\n\ntype CodeInJiraUserConfiguration {\n    \"\"\"\n    A list of Bitbucket workspaces that the current user has admin access too\n    The user can connect Jira to one these Workspaces\n    \"\"\"\n    ownedBitbucketWorkspaces: [CodeInJiraBitbucketWorkspace]\n}\n\ntype CodeInJiraBitbucketWorkspace {\n    \"\"\"Unique ID of the Bitbucket workspace in UUID format\"\"\"\n    uuid: ID!,\n    \"\"\"Workspace name (eg. Fusion)\"\"\"\n    name: String,\n    \"\"\"\n    URL slug (eg. fusion). Used to differentiate multiple workspaces\n    to the user when the names are same\n    \"\"\"\n    slug: String\n}\n\n\"\"\"\nA Version Control System object\nEg. Bitbucket, GitHub, GitLab\n\"\"\"\ntype CodeInJiraVcsProvider {\n    id: ID!\n    name: String\n    providerNamespace: String\n    providerId: String\n    baseUrl: String\n}\n","search":"type Query {\n    \"\"\"\n    The search method serves as an entry point to the various results across multiple Atlassian products.\n    This method proxy to Search Platform's API xpsearch-aggregator.\n    It supports multi tenant search with product specific filtering.\n    \"\"\"\n    search: SearchQueryAPI\n}\n\n\"\"\"\nEntry point for all searches\n\"\"\"\ntype SearchQueryAPI {\n\n    \"\"\"\n    Searches for some entities\n    \"\"\"\n    search(\n\n        \"\"\"\n        Query to search\n        \"\"\"\n        query: String\n\n        \"\"\"\n        This object determines the tenants/locations where the search should be performed.\n        It also determines the kind of results which must be returned.\n\n        As this supports multiple products and each products have different set of filters.\n        The implementation is split by the product.\n        \"\"\"\n        filters: SearchFilterInput\n\n        \"\"\"\n        Contains metadata on any analytics related fields, these do not affect the search\n        \"\"\"\n        analytics: SearchAnalyticsInput\n\n        \"\"\"\n        String describing which experience the search is being called from, e.g. confluence.advanced_search\n        \"\"\"\n        experience: String!\n\n        \"\"\"\n        Used to determine the result size\n        \"\"\"\n        first: Int\n\n    ): SearchItemConnection!\n}\n\n\n\n\"\"\"\nMetadata on any analytics related fields, these do not affect the search\n\"\"\"\ninput SearchAnalyticsInput {\n    queryVersion: Int\n    searchSessionId: String\n    searchReferrerId: String\n}\n\ntype SearchResultItemEdge {\n    \"\"\"\n    The search result object, this is a union type of all possible search result types.\n    A different definition will be provided for all entities supported by Atlassian\n    \"\"\"\n    node: SearchResult\n\n    \"\"\"\n    Opaque string containing the cursor for this edge\n    \"\"\"\n    cursor: String\n\n}\n\ntype SearchItemConnection {\n    \"\"\"\n    The search result items as per pagination specs\n    \"\"\"\n    edges: [SearchResultItemEdge!]!\n\n    \"\"\"\n    The page info as per pagination specs\n    \"\"\"\n    pageInfo: PageInfo!\n\n    \"\"\"\n\n    \"\"\"\n    totalCount: Int\n}\n\n\n\"\"\"\nFilters to apply to a search\n\"\"\"\ninput SearchFilterInput {\n    \"\"\"\n    ATI strings of which entities to search for\n    \"\"\"\n    entities: [String!]!\n\n    \"\"\"\n    ARIs of which workspaces, cloudIds or orgs to search in\n    \"\"\"\n    locations: [String!]!\n\n    \"\"\"\n    Confluence specific filters\n    \"\"\"\n    confluenceFilters: SearchConfluenceFilter\n}\n\ninput SearchConfluenceFilter {\n    \"\"\"\n    Space keys from which the results are desired.\n    \"\"\"\n    spacesFilter: [String!]\n    \"\"\"\n    AccountIds of the users.\n    \"\"\"\n    contributorsFilter: [String!]\n    \"\"\"\n    AccountIds of the users.\n    \"\"\"\n    creatorsFilter: [String!]\n    \"\"\"\n    Labels which must be present on the page or blogpost.\n    \"\"\"\n    labelsFilter: [String!]\n    \"\"\"\n    Id of the pages which must be parent of the result.\n    \"\"\"\n    ancestorIdsFilter: [String!]\n    range: [SearchConfluenceRangeFilter]\n    containerStatus: [SearchContainerStatus]\n}\n\ninput SearchConfluenceRangeFilter {\n    \"\"\"\n    The field to use to calculate the range\n    \"\"\"\n    field: SearchConfluenceRangeField!\n    \"\"\"\n    Specify the timestamp that the field should be greater than\n    \"\"\"\n    gt: String\n    \"\"\"\n    Specify the timestamp that the field should be less than\n    \"\"\"\n    lt: String\n}\n\nenum SearchConfluenceRangeField {\n    LASTMODIFIED\n    CREATED\n}\n\nenum SearchContainerStatus {\n    ARCHIVED\n    CURRENT\n}\n\n\"\"\"\nSearch Result type\n\"\"\"\ninterface SearchResult {\n    id: ID!\n    title: String!\n    url: URL!\n    iconUrl: URL!\n    type: String!\n    description: String!\n    lastModifiedDate: DateTime\n}\n\ntype SearchDefaultResult implements SearchResult {\n    id: ID!\n    title: String!\n    url: URL!\n    iconUrl: URL!\n    type: String!\n    description: String!\n    lastModifiedDate: DateTime\n}\n\n\"\"\"\nAdd only product specific properties below. Generic properties must be in the SearchResult\n\nCONFLUENCE\n\"\"\"\ntype SearchConfluencePageBlogAttachment implements SearchResult {\n    id: ID!\n    title: String!\n    url: URL!\n    iconUrl: URL!\n    type: String!\n    description: String!\n    lastModifiedDate: DateTime\n\n    space: SearchSpace\n}\n\ntype SearchSpace {\n    key: String!\n    iconUrl: URL!\n}\n\ntype SearchConfluenceSpace implements SearchResult {\n    id: ID!\n    title: String!\n    url: URL!\n    iconUrl: URL!\n    type: String!\n    description: String!\n    lastModifiedDate: DateTime\n}\n","testing":"\n    type Query {\n        \"\"\"\n        This field is useful for testing the graphql API.  In fact here at Atlassian we run synthetic checks\n        using this field ot help us ensure the graphql API is working as expected.\n        \"\"\"\n        testing: Testing\n\n\n        movie(id: ID!): TestingMovie\n    }\n\n    type Testing @scopes(required: READ_JIRA_WORK) {\n        \"\"\"\n        Echos the message argument back to the caller\n        \"\"\"\n        echo(message: String): String\n        \"\"\"\n        Generates a new UUID\n        \"\"\"\n        uuid: String\n        \"\"\"\n        Creates a graphql error with the specified argument text and always returns null as a value\n        \"\"\"\n        error(message: String): String @atlassian\n        \"\"\"\n        This simulates throwing an exception during data fetching with the provided argument text as the exception message\n        \"\"\"\n        throwException(message: String): String @atlassian\n\n        \"\"\"\n        This returns a hypothetical Movie by id for testing purposes\n        \"\"\"\n        movie(id: ID!): TestingMovie @scopes(required: READ_JIRA_WORK)\n        \"\"\"\n        This returns a list of hypothetical Movies for testing purposes\n        \"\"\"\n        movies: [TestingMovie]\n        \"\"\"\n        This is a field used for performance testing.  It was based on one our early Activity APIs so\n        it has a more meaningful shape\n        \"\"\"\n        performance : TestingPerformance @atlassian\n    }\n\n    type TestingCharacter @renamed(from : \"Character\")  {\n        id: ID!\n        name: String\n    }\n\n    type TestingMovie @renamed(from : \"Movie\") {\n        id: ID!\n        renamedName: String @renamed(from : \"name\")\n        characters: [TestingCharacter] @hydrated(service: \"testing\" field: \"characters\" arguments : [{ name:\"ids\" value:\"$source.characterIds\"}] identifiedBy : \"id\" batchSize : 2 )\n    }\n\n\n    \"\"\"\n    These represent the entry point to performance related fields\n    \"\"\"\n    type TestingPerformance @renamed(from : \"Performance\") {\n        myActivities: TestingMyActivity!\n    }\n\n    enum TestingActivityEventType @renamed(from : \"ActivityEventType\") {\n        ASSIGNED\n        UNASSIGNED\n        VIEWED\n        COMMENTED\n        UPDATED\n        CREATED\n        LIKED\n        TRANSITIONED\n        PUBLISHED\n        EDITED\n    }\n\n    type TestingMyActivity {\n        workedOn(howMany : Int = 100, howManyContainers : Int = 5, howManyContributors : Int = 2, inducedDelay : Int = 0): TestingActivityConnection!\n        viewed(howMany : Int = 100, howManyContainers : Int = 5, howManyContributors : Int = 2, inducedDelay : Int = 0): TestingActivityConnection!\n    }\n\n    type TestingActivityConnection @renamed(from : \"ActivityConnection\") {\n        nodes: [TestingActivityItem]!\n    }\n\n    type TestingActivityItem implements Node @renamed(from : \"ActivityItem\") {\n        id: ID!\n        timestamp: String\n        eventType: TestingActivityEventType\n        object: TestingActivityObject\n        containers: [TestingActivityObject]\n        contributors: [TestingActivityContributor]\n    }\n\n    type TestingActivityObject implements Node  @renamed(from : \"ActivityObject\") {\n        id: ID!\n        name: String\n        cloudID: String\n        url: String\n        iconURL: String\n    }\n\n    type TestingActivityContributor  @renamed(from : \"ActivityContributor\") {\n        profile: TestingActivityUser\n    }\n\n    type TestingActivityUser @renamed(from : \"ActivityUser\") @scopes(required: READ_JIRA_WORK) {\n        accountId: ID!\n        name: String\n        picture: String\n    }\n","jira_oauth_apps":"type Query {\n    jiraOAuthApps: JiraOAuthAppsApps @namespaced\n}\n\ntype Mutation {\n    jiraOAuthApps: JiraOAuthAppsMutation @namespaced\n}\n\ntype JiraOAuthAppsMutation {\n    \"\"\"Create a new OAuth app\"\"\"\n    createJiraOAuthApp(cloudId: String! @CloudID, input: JiraOAuthAppsCreateAppInput!): JiraOAuthAppsPayload\n\n    \"\"\"Update an existing OAuth app\"\"\"\n    updateJiraOAuthApp(cloudId: String! @CloudID, input: JiraOAuthAppsUpdateAppInput!) : JiraOAuthAppsPayload\n\n    \"\"\"Delete an existing OAuth app\"\"\"\n    deleteJiraOAuthApp(cloudId: String! @CloudID, input: JiraOAuthAppsDeleteAppInput!) : JiraOAuthAppsPayload\n}\n\ntype JiraOAuthAppsApps {\n    apps(cloudId: String! @CloudID): [JiraOAuthAppsApp]\n}\n\n\"\"\"An OAuth app which may have permissions to push/read extension data from issues\"\"\"\ntype JiraOAuthAppsApp {\n    \"\"\"Id of this app\"\"\"\n    id: ID!\n    \"\"\"Name of this app\"\"\"\n    name: String!\n    \"\"\"Home URL from which this app should be accessible\"\"\"\n    homeUrl: String!\n    \"\"\"Logo of this app which will be shown on the screen\"\"\"\n    logoUrl: String!\n    \"\"\"OAuth client id credential for this app\"\"\"\n    clientId: String!\n    \"\"\"OAuth secret id credential for this app\"\"\"\n    secret: String!\n    \"\"\"Module for reading/writing builds data using these credentials\"\"\"\n    buildsModule: JiraOAuthAppsBuildsModule\n    \"\"\"Module for reading/writing feature flags data using these credentials\"\"\"\n    featureFlagsModule: JiraOAuthAppsFeatureFlagsModule\n    \"\"\"Module for reading/writing deployments data using these credentials\"\"\"\n    deploymentsModule: JiraOAuthAppsDeploymentsModule\n    \"\"\"Module for reading/writing development information data using these credentials\"\"\"\n    devInfoModule: JiraOAuthAppsDevInfoModule\n}\n\ntype JiraOAuthAppsBuildsModule {\n    \"\"\"True if this app can read/write builds data\"\"\"\n    isEnabled: Boolean!\n}\n\ntype JiraOAuthAppsFeatureFlagsModule {\n    \"\"\"True if this app can read/write feature flags data\"\"\"\n    isEnabled: Boolean!\n    \"\"\"Actions that this app can invoke on feature flags data\"\"\"\n    actions: JiraOAuthAppsFeatureFlagsModuleActions\n}\n\ntype JiraOAuthAppsDeploymentsModule {\n    \"\"\"True if this app can read/write deployments data\"\"\"\n    isEnabled: Boolean!\n    \"\"\"Actions that this app can invoke on deployments data\"\"\"\n    actions: JiraOAuthAppsDeploymentsModuleActions\n}\n\ntype JiraOAuthAppsDevInfoModule {\n    \"\"\"True if this app can read/write development information data\"\"\"\n    isEnabled: Boolean!\n    \"\"\"Actions that this app can invoke on development information data\"\"\"\n    actions: JiraOAuthAppsDevInfoModuleActions\n}\n\ntype JiraOAuthAppsDevInfoModuleActions {\n    \"\"\"A UrlTemplate which the app can inject a create branch button on the issue view\"\"\"\n    createBranch: JiraOAuthAppsUrlTemplate\n}\n\ntype JiraOAuthAppsFeatureFlagsModuleActions {\n    \"\"\"A UrlTemplate which the app can inject a create feature flag button on the issue view\"\"\"\n    createFlag: JiraOAuthAppsUrlTemplate\n    \"\"\"A UrlTemplate which the app can inject a link feature flag button on the issue view\"\"\"\n    linkFlag: JiraOAuthAppsUrlTemplate\n    \"\"\"A UrlTemplate which the app can inject a list feature flags button on the issue view\"\"\"\n    listFlag: JiraOAuthAppsUrlTemplate\n}\n\ntype JiraOAuthAppsDeploymentsModuleActions {\n    \"\"\"A UrlTemplate which the app can inject a list deployments button on the issue view\"\"\"\n    listDeployments: JiraOAuthAppsUrlTemplate\n}\n\ntype JiraOAuthAppsUrlTemplate {\n    urlTemplate: String!\n}\n\n# Mutations\n\ntype JiraOAuthAppsPayload implements Payload {\n    \"\"\"The ClientMutationId sent on the mutation input will be reflected here\"\"\"\n    clientMutationId: ID\n    \"\"\"The state of the app after the mutation was applied\"\"\"\n    app: JiraOAuthAppsApp\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ninput JiraOAuthAppsCreateAppInput {\n    \"\"\"The app that should be created\"\"\"\n    app: JiraOAuthAppsAppInput!\n    \"\"\"An id for this mutation\"\"\"\n    clientMutationId: ID\n}\n\ninput JiraOAuthAppsUpdateAppInput {\n    \"\"\"The id of the app which will be changed\"\"\"\n    clientId: ID!\n    \"\"\"The state the app should be after updating it\"\"\"\n    app: JiraOAuthAppsAppUpdateInput!\n    \"\"\"An id for this mutation\"\"\"\n    clientMutationId: ID\n}\n\ninput JiraOAuthAppsDeleteAppInput {\n    \"\"\"The id of the app which will be deleted\"\"\"\n    clientId: ID!\n    \"\"\"An id for this mutation\"\"\"\n    clientMutationId: ID\n}\n\ninput JiraOAuthAppsAppInput {\n    \"\"\"Name of this app\"\"\"\n    name: String!\n    \"\"\"Home URL from which this app should be accessible\"\"\"\n    homeUrl: String!\n    \"\"\"Logo of this app which will be shown on the screen\"\"\"\n    logoUrl: String!\n\n    \"\"\"Module for reading/writing builds data using these credentials\"\"\"\n    buildsModule: JiraOAuthAppsBuildsModuleInput\n    \"\"\"Module for reading/writing feature flags data using these credentials\"\"\"\n    featureFlagsModule: JiraOAuthAppsFeatureFlagsModuleInput\n    \"\"\"Module for reading/writing deployments data using these credentials\"\"\"\n    deploymentsModule: JiraOAuthAppsDeploymentsModuleInput\n    \"\"\"Module for reading/writing development information data using these credentials\"\"\"\n    devInfoModule: JiraOAuthAppsDevInfoModuleInput\n}\n\ninput JiraOAuthAppsAppUpdateInput {\n    \"\"\"Module for reading/writing builds data using these credentials\"\"\"\n    buildsModule: JiraOAuthAppsBuildsModuleInput\n    \"\"\"Module for reading/writing feature flags data using these credentials\"\"\"\n    featureFlagsModule: JiraOAuthAppsFeatureFlagsModuleInput\n    \"\"\"Module for reading/writing deployments data using these credentials\"\"\"\n    deploymentsModule: JiraOAuthAppsDeploymentsModuleInput\n    \"\"\"Module for reading/writing development information data using these credentials\"\"\"\n    devInfoModule: JiraOAuthAppsDevInfoModuleInput\n}\n\ninput JiraOAuthAppsBuildsModuleInput {\n    \"\"\"True if this app can read/write builds data\"\"\"\n    isEnabled: Boolean!\n}\n\ninput JiraOAuthAppsFeatureFlagsModuleInput {\n    \"\"\"True if this app can read/write feature flags data\"\"\"\n    isEnabled: Boolean!\n    \"\"\"Actions that this app can invoke on feature flags data\"\"\"\n    actions: JiraOAuthAppsFeatureFlagsModuleActionsInput\n}\n\ninput JiraOAuthAppsDeploymentsModuleInput {\n    \"\"\"True if this app can read/write deployments data\"\"\"\n    isEnabled: Boolean!\n    \"\"\"Actions that this app can invoke on deployments data\"\"\"\n    actions: JiraOAuthAppsDeploymentsModuleActionsInput\n}\n\ninput JiraOAuthAppsDevInfoModuleInput {\n    \"\"\"True if this app can read/write development information data\"\"\"\n    isEnabled: Boolean!\n    \"\"\"Actions that this app can invoke on development information data\"\"\"\n    actions: JiraOAuthAppsDevInfoModuleActionsInput\n}\n\ninput JiraOAuthAppsDevInfoModuleActionsInput {\n    \"\"\"A UrlTemplate which the app can inject a create branch button on the issue view\"\"\"\n    createBranch: JiraOAuthAppsUrlTemplateInput\n}\n\ninput JiraOAuthAppsFeatureFlagsModuleActionsInput {\n    \"\"\"A UrlTemplate which the app can inject a create feature flag button on the issue view\"\"\"\n    createFlag: JiraOAuthAppsUrlTemplateInput\n    \"\"\"A UrlTemplate which the app can inject a link feature flag button on the issue view\"\"\"\n    linkFlag: JiraOAuthAppsUrlTemplateInput\n    \"\"\"A UrlTemplate which the app can inject a list feature flags button on the issue view\"\"\"\n    listFlag: JiraOAuthAppsUrlTemplateInput\n}\n\ninput JiraOAuthAppsDeploymentsModuleActionsInput {\n    \"\"\"A UrlTemplate which the app can inject a list deployments button on the issue view\"\"\"\n    listDeployments: JiraOAuthAppsUrlTemplateInput\n}\n\ninput JiraOAuthAppsUrlTemplateInput {\n    urlTemplate: String!\n}","gira":"\"\"\"\nA union type representing childIssues available within a Jira Issue.\nThe *WithinLimit type is used for childIssues with a count that is within a limit specified by the server.\nThe *ExceedsLimit type is used for childIssues with a count that exceeds a limit specified by the server.\n\"\"\"\nunion JiraChildIssues = JiraChildIssuesWithinLimit | JiraChildIssuesExceedingLimit\n\n\"\"\"\nRepresents childIssues with a count that is within the count limit set by the server.\n\"\"\"\ntype JiraChildIssuesWithinLimit {\n    \"\"\"\n    Paginated list of childIssues within this Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    issues(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueConnection\n}\n\n\"\"\"\nRepresents childIssues with a count that exceeds a limit set by the server.\n\"\"\"\ntype JiraChildIssuesExceedingLimit {\n    \"\"\"\n    Search string to query childIssues when limit is exceeded.\n    \"\"\"\n    search: String\n}\"\"\"\nJira Version type that can be either Versions system fields or Versions Custom fields.\n\"\"\"\ntype JiraVersion implements Node {\n    id: ID!\n    \"\"\"\n    Version Id.\n    \"\"\"\n    versionId: String!\n    \"\"\"\n    Version name.\n    \"\"\"\n    name: String\n    \"\"\"\n    Version icon URL.\n    \"\"\"\n    iconUrl: URL\n    \"\"\"\n    Status to which version belongs to.\n    \"\"\"\n    status: JiraVersionStatus\n    \"\"\"\n    Version description.\n    This is a beta field and has not been implemented yet.\n    \"\"\"\n    description: String\n    \"\"\"\n    The date at which work on the version began.\n    This is a beta field and has not been implemented yet.\n    \"\"\"\n    startDate: DateTime\n    \"\"\"\n    The date at which the version was released to customers. Must occur after startDate.\n    This is a beta field and has not been implemented yet.\n    \"\"\"\n    releaseDate: DateTime\n    \"\"\"\n    Warning config of the version. This is per project setting.\n    \"\"\"\n    warningConfig: JiraVersionWarningConfig @beta(name: \"JiraVersionWarningConfig\")\n    \"\"\"\n    List of issues with the version.\n    \"\"\"\n    issues(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        filter of the issues under this version. If not given, the default filter will be determined by the server\n        \"\"\"\n        filter: JiraVersionIssuesFilter = ALL\n    ): JiraIssueConnection\n}\n\n\"\"\"\nThe filter for a version's issues\n\"\"\"\nenum JiraVersionIssuesFilter {\n    ALL\n    TODO\n    IN_PROGRESS\n    DONE\n    UNREVIEWED_CODE\n    OPEN_PULL_REQUEST\n    FAILING_BUILD\n}\n\n\"\"\"\nThe status of a version field.\n\"\"\"\nenum JiraVersionStatus {\n    \"\"\"\n    Indicates the version is available to public\n    \"\"\"\n    RELEASED\n    \"\"\"\n    Indicates the version is not launched yet\n    \"\"\"\n    UNRELEASED\n    \"\"\"\n    Indicates the version is archived, no further changes can be made to this version unless it is un-archived\n    \"\"\"\n    ARCHIVED\n}\n\n\"\"\"\nThe connection type for JiraVersion.\n\"\"\"\ntype JiraVersionConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraVersionEdge]\n}\n\n\"\"\"\nAn edge in a JiraVersion connection.\n\"\"\"\ntype JiraVersionEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraVersion\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\nextend type JiraQuery {\n    \"Get version by ARI\"\n    version(\n        \"\"\"\n        The identifier of the Jira version\n        \"\"\"\n        id: ID! @ARI(type: \"version\", owner: \"jira\")\n    ): JiraVersionResult @beta(name: \"JiraVersionResult\")\n\n    \"\"\"\n    This field returns a connection over JiraVersion.\n    \"\"\"\n    versionsForProject(\n        \"\"\"\n        The identifier for the Jira project\n        \"\"\"\n        jiraProjectId: ID! @ARI(type: \"project\", owner: \"jira\")\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        The filter array dictates what versions to return by their status.\n        Defaults to unreleased versions only\n        \"\"\"\n        filter: [JiraVersionStatus] = [UNRELEASED]\n    ): JiraVersionConnection @beta(name: \"VersionsForProject\")\n}\n\n\"\"\"\nContains either the successful fetched version information or an error.\n\"\"\"\nunion JiraVersionResult = JiraVersion | QueryError\n\n\"\"\"\nThe warning config for version details page to generate warning report. Depending on tenant settings and providers installed, some warning config could be in NOT_APPLICABLE state.\n\"\"\"\nenum JiraVersionWarningConfigState {\n    ENABLED\n    DISABLED\n    NOT_APPLICABLE\n}\n\n\"\"\"\nThe warning configuration to generate version details page warning report.\n\"\"\"\ntype JiraVersionWarningConfig {\n    \"\"\"\n    The warnings for issues that has open pull request and in done issue status category.\n    \"\"\"\n    openPullRequest: JiraVersionWarningConfigState\n    \"\"\"\n    The warnings for issues that has unreviewed code and in done issue status category.\n    \"\"\"\n    unreviewedCode: JiraVersionWarningConfigState\n    \"\"\"\n    The warnings for issues that has failing build and in done issue status category.\n    \"\"\"\n    failingBuild: JiraVersionWarningConfigState\n}\n\n\"\"\"\nThe warning configuration to be updated for version details page warning report.\nApplicable values will have their value updated. Null values will default to true.\n\"\"\"\ninput JiraVersionUpdatedWarningConfigInput {\n    \"\"\"\n    The warnings for issues that has open pull request and in done issue status category.\n    \"\"\"\n    isOpenPullRequestEnabled: Boolean = true\n    \"\"\"\n    The warnings for issues that has unreviewed code and in done issue status category.\n    \"\"\"\n    isUnreviewedCodeEnabled: Boolean = true\n    \"\"\"\n    The warnings for issues that has failing build and in done issue status category.\n    \"\"\"\n    isFailingBuildEnabled: Boolean = true\n}\n\n\"\"\"\nThe input to update the version details page warning report.\n\"\"\"\ninput JiraUpdateVersionWarningConfigInput {\n    \"\"\"\n    The ARI of the Jira project.\n    \"\"\"\n    jiraProjectId: ID! @ARI(type: \"project\", owner: \"jira\")\n    \"\"\"\n    The version configuration options to be updated.\n    \"\"\"\n    updatedVersionWarningConfig: JiraVersionUpdatedWarningConfigInput!\n}\n\ntype JiraUpdateVersionWarningConfigPayload implements Payload {\n    \"Whether the mutation was successful or not.\"\n    success: Boolean!\n\n    \"A list of errors that occurred during the mutation.\"\n    errors: [MutationError!]\n}\n\nextend type JiraMutation {\n    \"\"\"\n    Update version warning configuration by enabling/disabling warnings\n    for specific scenarios.\n    \"\"\"\n    updateVersionWarningConfig(\n        input: JiraUpdateVersionWarningConfigInput!\n    ): JiraUpdateVersionWarningConfigPayload @beta(name: \"UpdateVersionWarningConfig\")\n}\nextend type JiraQuery {\n    \"\"\"\n    Performs an issue search using the provided string of JQL.\n    This query will error if the JQL does not pass validation.\n    \"\"\"\n    issueSearchByJql(cloudId: ID! @CloudID, jql: String!): JiraIssueSearchByJqlResult @beta(name: \"JiraIssueSearch\")\n\n    \"\"\"\n    Performs an issue search using the underlying JQL saved as a filter.\n\n    The id provided MUST be in ARI format.\n\n    This query will error if the id parameter is not in ARI format, does not pass validation or does not correspond to a filter.\n    \"\"\"\n    issueSearchByFilterId(id: ID! @ARI(type: \"filter\", owner: \"jira\")): JiraIssueSearchByFilterResult @beta(name: \"JiraIssueSearch\")\n\n    \"\"\"\n    Hydrate a list of issue IDs into issue data. The issue data retrieved will depend on\n    the subsequently specified view(s) and/or fields.\n\n    The ids provided MUST be in ARI format.\n\n    For each id provided, it will resolve to either a JiraIssue as a leaf node in an subsequent query, or a QueryError if:\n    - The ARI provided did not pass validation.\n    - The ARI did not resolve to an issue.\n    \"\"\"\n    issueHydrateByIssueIds(ids: [ID!]! @ARI(type: \"issue\", owner: \"jira\")): JiraIssueSearchByHydration @beta(name: \"JiraIssueSearch\")\n\n    \"\"\"\n    Retrieves data about a JiraIssueSearchView.\n\n    The id provided MUST be in ARI format.\n\n    This query will error if the id parameter is not in ARI format, does not pass validation or does not correspond to a JiraIssueSearchView.\n    \"\"\"\n    issueSearchView(id: ID! @ARI(type: \"issue-search-view\", owner: \"jira\")): JiraIssueSearchView @beta(name: \"JiraIssueSearch\")\n}\n\nextend type JiraMutation {\n    \"\"\"\n    Updates the fieldConfigSets of the JiraIssueSearchView with the provided fields.\n\n    The id provided MUST be in ARI format.\n\n    This mutation will error if the id parameter is not in ARI format, does not pass validation or does not correspond to a JiraIssueSearchView.\n    \"\"\"\n    updateIssueSearchViewFieldConfigSets(\n        id: ID! @ARI(type: \"issue-search-view\", owner: \"jira\")\n        fieldConfigSetIds: [String!]!\n    ): JiraIssueSearchViewPayload\n}\n\n\"\"\"\nThe payload returned when a JiraIssueSearchView has been updated.\n\"\"\"\ntype JiraIssueSearchViewPayload implements Payload {\n  success: Boolean!\n  errors: [MutationError!]\n  view: JiraIssueSearchView\n}\n\n\"\"\"\nA generic interface for issue search results in Jira.\n\"\"\"\ninterface JiraIssueSearchResult {\n  \"\"\"\n  Retrieves content controlled by the context of a JiraIssueSearchView.\n  To query multiple content views at once, use GraphQL aliases.\n\n  If a namespace is provided, and a viewId is:\n  - Not provided, then the last used view is returned within this namespace.\n  - Provided, then this view is returned if it exists in this namespace.\n\n  If a namespace is not provided, and a viewId is:\n  - Not provided, then the last used view across any namespace is returned.\n  - Provided, then this view is returned if it exists in the global namespace.\n  \"\"\"\n  content(namespace: String, viewId: String): JiraIssueSearchContextualContent\n\n  \"\"\"\n  Retrieves content by provided field config set ids, ignoring the active query context.\n  To query multiple content views at once, use GraphQL aliases.\n  \"\"\"\n  contentByFieldConfigSetIds(fieldConfigSetIds: [String!]!): JiraIssueSearchContextlessContent\n}\n\n\"\"\"\nRepresents an issue search result when querying with a JiraFilter.\n\"\"\"\ntype JiraIssueSearchByFilter implements JiraIssueSearchResult {\n  \"\"\"\n  Retrieves content controlled by the context of a JiraIssueSearchView.\n  To query multiple content views at once, use GraphQL aliases.\n\n  If a namespace is provided, and a viewId is:\n  - Not provided, then the last used view is returned within this namespace.\n  - Provided, then this view is returned if it exists in this namespace.\n\n  If a namespace is not provided, and a viewId is:\n  - Not provided, then the last used view across any namespace is returned.\n  - Provided, then this view is returned if it exists in the global namespace.\n  \"\"\"\n  content(namespace: String, viewId: String): JiraIssueSearchContextualContent\n  \"\"\"\n  Retrieves content by provided field config set ids, ignoring the active query context.\n  To query multiple content views at once, use GraphQL aliases.\n  \"\"\"\n  contentByFieldConfigSetIds(fieldConfigSetIds: [String!]!): JiraIssueSearchContextlessContent\n  \"\"\"\n  The Jira Filter corresponding to the filter ARI specified in the calling query.\n  \"\"\"\n  filter: JiraFilterResult\n}\n\n\nunion JiraIssueSearchByJqlResult = JiraIssueSearchByJql | QueryError\n\nunion JiraIssueSearchByFilterResult = JiraIssueSearchByFilter | QueryError\n\n\"\"\"\nRepresents an issue search result when querying with a Jira Query Language (JQL) string.\n\"\"\"\ntype JiraIssueSearchByJql implements JiraIssueSearchResult {\n  \"\"\"\n  Retrieves content controlled by the context of a JiraIssueSearchView.\n  To query multiple content views at once, use GraphQL aliases.\n\n  If a namespace is provided, and a viewId is:\n  - Not provided, then the last used view is returned within this namespace.\n  - Provided, then this view is returned if it exists in this namespace.\n\n  If a namespace is not provided, and a viewId is:\n  - Not provided, then the last used view across any namespace is returned.\n  - Provided, then this view is returned if it exists in the global namespace.\n  \"\"\"\n  content(namespace: String, viewId: String): JiraIssueSearchContextualContent\n  \"\"\"\n  Retrieves content by provided field config set ids, ignoring the active query context.\n  To query multiple content views at once, use GraphQL aliases.\n  \"\"\"\n  contentByFieldConfigSetIds(fieldConfigSetIds: [String!]!): JiraIssueSearchContextlessContent\n  \"\"\"\n  The JQL specified in the calling query.\n  \"\"\"\n  jql: String\n}\n\n\"\"\"\nRepresents an issue search result when querying with a set of issue ids.\n\"\"\"\ntype JiraIssueSearchByHydration implements JiraIssueSearchResult {\n  \"\"\"\n  Retrieves content controlled by the context of a JiraIssueSearchView.\n  To query multiple content views at once, use GraphQL aliases.\n\n  If a namespace is provided, and a viewId is:\n  - Not provided, then the last used view is returned within this namespace.\n  - Provided, then this view is returned if it exists in this namespace.\n\n  If a namespace is not provided, and a viewId is:\n  - Not provided, then the last used view across any namespace is returned.\n  - Provided, then this view is returned if it exists in the global namespace.\n  \"\"\"\n  content(namespace: String, viewId: String): JiraIssueSearchContextualContent\n  \"\"\"\n  Retrieves content by provided field config set ids, ignoring the active query context.\n  To query multiple content views at once, use GraphQL aliases.\n  \"\"\"\n  contentByFieldConfigSetIds(fieldConfigSetIds: [String!]!): JiraIssueSearchContextlessContent\n}\n\n\"\"\"\nA generic interface for the content of an issue search result in Jira.\n\"\"\"\ninterface JiraIssueSearchResultContent {\n  \"\"\"\n  Retrieves JiraIssue limited by provided pagination params, or global search limits, whichever is smaller.\n  To retrieve multiple sets of issues, use GraphQL aliases.\n\n  An optimized search is run when only JiraIssue issue ids are requested.\n  \"\"\"\n  issues(\n    first: Int\n    last: Int\n    before: String\n    after: String\n  ): JiraIssueConnection\n}\n\n\"\"\"\nRepresents the contextual content for an issue search result in Jira.\nThe context here is determined by the JiraIssueSearchView associated with the content.\n\"\"\"\ntype JiraIssueSearchContextualContent implements JiraIssueSearchResultContent {\n  \"\"\"\n  The JiraIssueSearchView that will be used as the context when retrieving JiraIssueField data.\n  \"\"\"\n  view: JiraIssueSearchView\n  \"\"\"\n  Retrieves a connection of JiraIssues for the current search context.\n  \"\"\"\n  issues(\n    first: Int\n    last: Int\n    before: String\n    after: String\n  ): JiraIssueConnection\n}\n\n\"\"\"\nRepresents the contextless content for an issue search result in Jira.\nThere is no JiraIssueSearchView associated with this content and is therefore contextless.\n\"\"\"\ntype JiraIssueSearchContextlessContent implements JiraIssueSearchResultContent {\n  \"\"\"\n  Retrieves a connection of JiraIssues for the current search context.\n  \"\"\"\n  issues(\n    first: Int\n    last: Int\n    before: String\n    after: String\n  ): JiraIssueConnection\n}\n\n\"\"\"\nRepresents a grouping of search data to a particular UI behaviour.\nBuilt-in views are automatically created for certain Jira pages and global Jira system filters.\n\"\"\"\ntype JiraIssueSearchView implements Node {\n  \"\"\"\n  An ARI-format value that encodes both namespace and viewId.\n  \"\"\"\n  id: ID!\n  \"\"\"\n  A subscoping that affects where this view's last used data is stored and grouped by. If null, this view is in the global namespace.\n  \"\"\"\n  namespace: String\n  \"\"\"\n  A unique identifier for this view within its namespace, or the global namespace if no namespace is defined.\n  \"\"\"\n  viewId: String\n  \"\"\"\n  A connection of included fields' configurations, grouped where logical (e.g. collapsed fields).\n  \"\"\"\n  fieldConfigSets(first: Int, last: Int, before: String, after: String, filter: JiraIssueSearchFieldConfigSetsFilter): JiraIssueSearchFieldConfigSetConnection\n}\n\n\"\"\"\nSpecifies which field config sets should be returned.\n\"\"\"\nenum JiraIssueSearchFieldConfigSetSelectedState {\n  \"\"\"\n  Both selected and non-selected field config sets.\n  \"\"\"\n  ALL,\n  \"\"\"\n  Only the field config sets selected in the current view.\n  \"\"\"\n  SELECTED,\n  \"\"\"\n  Only the field config sets that have not been selected in the current view.\n  \"\"\"\n  NON_SELECTED\n}\n\n\"\"\"\nA filter for the JiraIssueSearchFieldConfigSet connections.\nBy default, if no fieldConfigSetSelectedState is specified, only SELECTED fields are returned.\n\"\"\"\ninput JiraIssueSearchFieldConfigSetsFilter {\n  \"\"\"\n  Only the fieldConfigSets that case-insensitively, contain this searchString in their displayName will be returned.\n  \"\"\"\n  searchString: String,\n  \"\"\"\n  An enum specifying which field config sets should be returned based on the selected status.\n  \"\"\"\n  fieldConfigSetSelectedState: JiraIssueSearchFieldConfigSetSelectedState,\n}\n\n\"\"\"\nA Connection of JiraIssueSearchFieldConfigSet.\n\"\"\"\ntype JiraIssueSearchFieldConfigSetConnection {\n  \"\"\"\n  The total number of JiraIssueSearchFieldConfigSet matching the criteria\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for Edges in the current page\n  \"\"\"\n  edges: [JiraIssueSearchFieldConfigSetEdge]\n}\n\n\"\"\"\nRepresents a field-value edge for a JiraIssueSearchFieldConfigSet.\n\"\"\"\ntype JiraIssueSearchFieldConfigSetEdge {\n  \"\"\"\n  The node at the the edge.\n  \"\"\"\n  node: JiraIssueSearchFieldConfigSet\n  \"\"\"\n  The cursor to this edge\n  \"\"\"\n  cursor: String!\n}\n\n\"\"\"\nRepresents a configurable field in Jira issue searches.\nThese fields can be used to update JiraIssueSearchViews or to directly query for issue fields.\nThis mirrors the concept of collapsed fields where all collapsible fields with the same `name` and `type` will be\ncollapsed into a single JiraIssueSearchFieldConfigSet with `fieldConfigSetId = name[type]`.\nNon-collapsible and system fields cannot be collapsed but can still be represented as this type where `fieldConfigSetId = fieldId`.\n\"\"\"\ntype JiraIssueSearchFieldConfigSet {\n  \"\"\"\n  The identifer of the field config set e.g. `assignee`, `reporter`, `checkbox_cf[Checkboxes]`.\n  \"\"\"\n  fieldConfigSetId: String\n  \"\"\"\n  The user-friendly name for a JiraIssueSearchFieldConfigSet, to be displayed in the UI.\n  \"\"\"\n  displayName: String\n  \"\"\"\n  The field-type of the current field config set.\n  E.g. `Short Text`, `Number`, `Version Picker`, `Team`.\n  Important note: This information only exists for collapsed fields.\n  \"\"\"\n  fieldType: String\n  \"\"\"\n  Determines whether or not the current field config set is sortable.\n  \"\"\"\n  isSortable: Boolean\n  \"\"\"\n  Tracks whether or not the current field config set has been selected.\n  \"\"\"\n  isSelected: Boolean\n}\nextend type JiraQuery {\n  \"\"\"\n  A parent field to get information about jql related aspects from a given jira instance.\n  \"\"\"\n  jqlBuilder(cloudId: ID! @CloudID): JiraJqlBuilder @beta(name: \"JiraJqlBuilder\")\n}\n\n\"\"\"\nEncapsulates queries and fields necessary to power the JQL builder.\n\nIt also exposes generic JQL capabilities that can be leveraged to power other experiences.\n\"\"\"\ntype JiraJqlBuilder {\n  \"\"\"\n  A list of available JQL functions.\n  \"\"\"\n  functions: [JiraJqlFunction!]!\n\n  \"\"\"\n  The last used JQL builder search mode.\n\n  This can either be the Basic or JQL search mode.\n  \"\"\"\n  lastUsedMode: JiraJqlBuilderMode\n\n  \"\"\"\n  Hydrates the JQL fields and field-values of a given JQL query.\n  \"\"\"\n  hydrateJqlQuery(query: String): JiraJqlHydratedQueryResult\n  \"\"\"\n  Hydrates the JQL fields and field-values of a filter corresponding to the provided filter ID.\n\n  The id provided MUST be in ARI format.\n\n  This query will error if the id parameter is not in ARI format, does not pass validation or does not correspond to a JiraFilter.\n  \"\"\"\n  hydrateJqlQueryForFilter(id: ID!): JiraJqlHydratedQueryResult\n\n  \"\"\"\n  Retrieves a connection of searchable Jira JQL fields.\n\n  In a given JQL, fields will precede operators and operators precede field-values/ functions.\n\n  E.g. `${FIELD} ${OPERATOR} ${FUNCTION}()` => `Assignee = currentUser()`\n  \"\"\"\n  fields(\n    \"\"\"\n    The JQL query that will be parsed and used to form a search context.\n\n    Only the Jira fields that are scoped to this search context will be returned.\n\n    E.g. `Project IN (KEY1, KEY2) AND issueType = Task`.\n    \"\"\"\n    jqlContext: String\n    \"\"\"\n    Only the fields that contain this searchString in their displayName will be returned.\n    \"\"\"\n    searchString: String\n    \"\"\"\n    Only the fields that support the provided JqlClauseType will be returned.\n    \"\"\"\n    forClause: JiraJqlClauseType\n    \"\"\"\n    The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified the cursor is assumed to be the beginning.\n    \"\"\"\n    after: String\n  ): JiraJqlFieldConnectionResult\n\n  \"\"\"\n  Retrieves a connection of Jira fields recently used in JQL searches.\n  \"\"\"\n  recentFields(\n    \"\"\"\n    The JQL query that will be parsed and used to form a search context.\n\n    Only the Jira fields that are scoped to this search context will be returned.\n\n    E.g. `Project IN (KEY1, KEY2) AND issueType = Task`.\n    \"\"\"\n    jqlContext: String\n    \"\"\"\n    Only the Jira fields that support the provided forClause will be returned.\n    \"\"\"\n    forClause: JiraJqlClauseType\n    \"\"\"\n    The number of items after the cursor to be returned. Either `first` or `last` is required.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items. If not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument. Either `first` or `last` is required.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items. If not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n  ): JiraJqlFieldConnectionResult\n\n  \"\"\"\n  Retrieves a connection of field-values for a specified Jira Field.\n\n  E.g. A given Jira checkbox field may have the following field-values: `Option 1`, `Option 2` and `Option 3`.\n  \"\"\"\n  fieldValues(\n    \"\"\"\n    The JQL query that will be parsed and used to form a search context.\n\n    Only the Jira fields that are scoped to this search context will be returned.\n\n    E.g. `Project IN (KEY1, KEY2) AND issueType = Task`\n    \"\"\"\n    jqlContext: String\n    \"\"\"\n    An identifier that a client should use in a JQL query when it’s referring to a field-value.\n\n    Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n    \"\"\"\n    jqlTerm: String!\n    \"\"\"\n    Only the Jira field-values with their diplayName matching this searchString will be retrieved.\n    \"\"\"\n    searchString: String\n    \"\"\"\n    The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified the cursor is assumed to be the beginning.\n    \"\"\"\n    after: String\n  ): JiraJqlFieldValueConnection\n\n  \"\"\"\n  Retrieves a connection of users recently used in Jira user fields.\n  \"\"\"\n  recentlyUsedUsers(\n    \"\"\"\n    The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n  ): JiraJqlUserFieldValueConnection\n\n  \"\"\"\n  Retrieves a connection of suggested groups.\n\n  Groups are suggested when the current user is a member.\n  \"\"\"\n  suggestedGroups(\n    \"\"\"\n    The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n  ): JiraJqlGroupFieldValueConnection\n\n  \"\"\"\n  Retrieves a connection of projects that have recently been viewed by the current user.\n  \"\"\"\n  recentlyUsedProjects(\n    \"\"\"\n    The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n  ): JiraJqlProjectFieldValueConnection\n\n  \"\"\"\n  Retrieves a connection of sprints that have recently been viewed by the current user.\n  \"\"\"\n  recentlyUsedSprints(\n    \"\"\"\n    The JQL query that will be parsed and used to form a search context.\n\n    Only the Jira fields that are scoped to this search context will be returned.\n\n    E.g. `Project IN (KEY1, KEY2) AND issueType = Task`\n    \"\"\"\n    jqlContext: String\n    \"\"\"\n    The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n  ): JiraJqlSprintFieldValueConnection\n\n  \"\"\"\n  Retrieves the field-values for the Jira issueType field.\n  \"\"\"\n  issueTypes(jqlContext: String): JiraJqlIssueTypes\n\n  \"\"\"\n  Retrieves the field-values for the Jira cascading options field.\n  \"\"\"\n  cascadingSelectOptions(\n    \"\"\"\n    The number of items to be sliced away to target between the after and before cursors.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n    \"\"\"\n    The JQL query that will be parsed and used to form a search context.\n\n    Only the Jira fields that are scoped to this search context will be returned.\n\n    E.g. `Project IN (KEY1, KEY2) AND issueType = Task`\n    \"\"\"\n    jqlContext: String\n    \"\"\"\n    An identifier that a client should use in a JQL query when it’s referring to an instance of a Jira cascading option field.\n\n    Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n    \"\"\"\n    jqlTerm: String!\n    \"\"\"\n    Only the Jira field-values with their diplayName matching this searchString will be retrieved.\n    \"\"\"\n    searchString: String\n    \"\"\"\n    Only the cascading options matching this filter will be retrieved.\n    \"\"\"\n    filter: JiraCascadingSelectOptionsFilter!\n  ): JiraJqlOptionFieldValueConnection\n\n  \"\"\"\n  Retrieves the field-values for the Jira version field.\n  \"\"\"\n  versions(\n    \"\"\"\n    The JQL query that will be parsed and used to form a search context.\n\n    Only the Jira fields that are scoped to this search context will be returned.\n\n    E.g. `Project IN (KEY1, KEY2) AND issueType = Task`.\n    \"\"\"\n    jqlContext: String,\n    \"\"\"\n    An identifier that a client should use in a JQL query when it’s referring to an instance of a Jira version field.\n\n    Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n    \"\"\"\n    jqlTerm: String!\n  ): JiraJqlVersions\n}\n\n\"\"\"\nA function in JQL appears as a word followed by parentheses, which may contain one or more explicit values or Jira fields.\n\nIn a clause, a function is preceded by an operator, which in turn is preceded by a field.\n\nA function performs a calculation on either specific Jira data or the function's content in parentheses,\nsuch that only true results are retrieved by the function, and then again by the clause in which the function is used.\n\nE.g. `approved()`, `currentUser()`, `endOfMonth()` etc.\n\"\"\"\ntype JiraJqlFunction {\n  \"\"\"\n  The user-friendly name for the function, to be displayed in the UI.\n  \"\"\"\n  displayName: String\n  \"\"\"\n  A JQL-function safe encoded name. This value will not be encoded if the displayName is already safe.\n  \"\"\"\n  value: String\n  \"\"\"\n  Indicates whether or not the function is meant to be used with IN or NOT IN operators, that is,\n  if the function should be viewed as returning a list.\n\n  The method should return false when it is to be used with the other relational operators (e.g. =, !=, <, >, ...)\n  that only work with single values.\n  \"\"\"\n  isList: Boolean\n  \"\"\"\n  The data types that this function handles and creates values for.\n\n  This allows consumers to infer information on the JiraJqlField type such as which functions are supported.\n  \"\"\"\n  dataTypes: [String!]!\n}\n\n\"\"\"\nThe modes the JQL builder can be displayed and used in.\n\"\"\"\nenum JiraJqlBuilderMode {\n  \"\"\"\n  The JQL mode, allows queries to be built and executed via the JQL advanced editor.\n\n  This mode allows users to manually type and construct complex JQL queries.\n  \"\"\"\n  JQL\n  \"\"\"\n  The basic mode, allows queries to be built and executed via the JQL basic editor.\n\n  This mode allows users to easily construct JQL queries by interacting with the UI.\n  \"\"\"\n  BASIC\n}\n\n\"\"\"\nA union of a Jira JQL hydrated query and a GraphQL query error.\n\"\"\"\nunion JiraJqlHydratedQueryResult = JiraJqlHydratedQuery | QueryError\n\n\"\"\"\nRepresents a JQL query with hydrated fields and field-values.\n\"\"\"\ntype JiraJqlHydratedQuery {\n  \"\"\"\n  The JQL query to be hydrated.\n  \"\"\"\n  jql: String\n  \"\"\"\n  A list of hydrated fields from the provided JQL.\n  \"\"\"\n  fields: [JiraJqlQueryHydratedFieldResult!]!\n}\n\n\"\"\"\nA union of a JQL query hydrated field and a GraphQL query error.\n\"\"\"\nunion JiraJqlQueryHydratedFieldResult =\n  JiraJqlQueryHydratedField\n  | JiraJqlQueryHydratedError\n\n\"\"\"\nRepresents an error for a JQL query hydration.\n\"\"\"\ntype JiraJqlQueryHydratedError {\n  \"\"\"\n  An identifier for the hydrated Jira JQL field where the error occurred.\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The error that occurred whilst hydrating the Jira JQL field.\n  \"\"\"\n  error: QueryError\n}\n\n\"\"\"\nRepresents a hydrated field for a JQL query.\n\"\"\"\ntype JiraJqlQueryHydratedField {\n  \"\"\"\n  An identifier for the hydrated Jira JQL field.\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The Jira JQL field associated with the hydrated field.\n  \"\"\"\n  field: JiraJqlField!\n  \"\"\"\n  The hydrated value results.\n  \"\"\"\n  values: [JiraJqlQueryHydratedValueResult]!\n}\n\n\"\"\"\nA union of a JQL query hydrated field-value and a GraphQL query error.\n\"\"\"\nunion JiraJqlQueryHydratedValueResult =\n  JiraJqlQueryHydratedValue\n  | JiraJqlQueryHydratedError\n\n\"\"\"\nRepresents a hydrated field-value for a given field in the JQL query.\n\"\"\"\ntype JiraJqlQueryHydratedValue {\n  \"\"\"\n  An identifier for the hydrated Jira JQL field value.\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The hydrated field values.\n  \"\"\"\n  values: [JiraJqlFieldValue]!\n}\n\n\"\"\"\nA union of a Jira JQL field connection and a GraphQL query error.\n\"\"\"\nunion JiraJqlFieldConnectionResult = JiraJqlFieldConnection | QueryError\n\n\"\"\"\nRepresents a connection of Jira JQL fields.\n\"\"\"\ntype JiraJqlFieldConnection {\n  \"\"\"\n  The total number of JiraJqlFields matching the criteria.\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for the edges in the current page.\n  \"\"\"\n  edges: [JiraJqlFieldEdge]\n}\n\n\"\"\"\nRepresents a Jira JQL field edge.\n\"\"\"\ntype JiraJqlFieldEdge {\n  \"\"\"\n  The node at the edge.\n  \"\"\"\n  node: JiraJqlField\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\n\n\"\"\"\nThe representation of a Jira field within the context of the Jira Query Language.\n\"\"\"\ntype JiraJqlField {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira JQL field.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: ID!\n  \"\"\"\n  The user-friendly name for the current field, to be displayed in the UI.\n  \"\"\"\n  displayName: String\n  \"\"\"\n  The data types handled by the current field.\n  These can be used to identify which JQL functions are supported.\n  \"\"\"\n  dataTypes: [String]\n  \"\"\"\n  The JQL clause types that can be used with this field.\n  \"\"\"\n  allowedClauseTypes: [JiraJqlClauseType!]!\n  \"\"\"\n  The JQL operators that can be used with this field.\n  \"\"\"\n  operators: [JiraJqlOperator!]!\n  \"\"\"\n  Defines how a field should be represented in the basic search mode of the JQL builder.\n  \"\"\"\n  searchTemplate: JiraJqlSearchTemplate\n  \"\"\"\n  Defines how the field-values should be shown for a field in the JQL-Builder's JQL mode.\n  \"\"\"\n  autoCompleteTemplate: JiraJqlAutocompleteType\n  \"\"\"\n  The field-type of the current field.\n  E.g. `Short Text`, `Number`, `Version Picker`, `Team` etc.\n  Important note: This information only exists for collapsed fields.\n  \"\"\"\n  jqlFieldType: JiraJqlFieldType\n  \"\"\"\n  Determines whether or not the current field should be accessible in the current search context.\n  \"\"\"\n  shouldShowInContext: Boolean\n}\n\n\"\"\"\nThe types of JQL clauses supported by Jira.\n\"\"\"\nenum JiraJqlClauseType {\n  \"\"\"\n  This denotes both WHERE and ORDER_BY.\n  \"\"\"\n  ANY\n  \"\"\"\n  This corresponds to jql fields used as filter criteria of Jira issues.\n  \"\"\"\n  WHERE\n  \"\"\"\n  This corresponds to fields used to sort Jira Issues.\n  \"\"\"\n  ORDER_BY\n}\n\n\"\"\"\nThe types of JQL operators supported by Jira.\n\nAn operator in JQL is one or more symbols or words,which compares the value of a field on its left with one or more values (or functions) on its right,\nsuch that only true results are retrieved by the clause.\n\nFor more information on JQL operators please visit: https://support.atlassian.com/jira-software-cloud/docs/advanced-search-reference-jql-operators.\n\"\"\"\nenum JiraJqlOperator {\n  \"\"\"\n  The `=` operator is used to search for issues where the value of the specified field exactly matches the specified value.\n  \"\"\"\n  EQUALS\n  \"\"\"\n  The `!=` operator is used to search for issues where the value of the specified field does not match the specified value.\n  \"\"\"\n  NOT_EQUALS\n  \"\"\"\n  The `IN` operator is used to search for issues where the value of the specified field is one of multiple specified values.\n  \"\"\"\n  IN\n  \"\"\"\n  The `NOT IN` operator is used to search for issues where the value of the specified field is not one of multiple specified values.\n  \"\"\"\n  NOT_IN\n  \"\"\"\n  The `IS` operator can only be used with EMPTY or NULL. That is, it is used to search for issues where the specified field has no value.\n  \"\"\"\n  IS\n  \"\"\"\n  The `IS NOT` operator can only be used with EMPTY or NULL. That is, it is used to search for issues where the specified field has a value.\n  \"\"\"\n  IS_NOT\n  \"\"\"\n  The `<` operator is used to search for issues where the value of the specified field is less than the specified value.\n  \"\"\"\n  LESS_THAN\n  \"\"\"\n  The `<=` operator is used to search for issues where the value of the specified field is less than or equal to than the specified value.\n  \"\"\"\n  LESS_THAN_OR_EQUAL\n  \"\"\"\n  The `>` operator is used to search for issues where the value of the specified field is greater than the specified value.\n  \"\"\"\n  GREATER_THAN\n  \"\"\"\n  The `>=` operator is used to search for issues where the value of the specified field is greater than or equal to the specified value.\n  \"\"\"\n  GREATER_THAN_OR_EQUAL\n  \"\"\"\n  The `CHANGED` operator is used to find issues that have a value that had changed for the specified field.\n  \"\"\"\n  CONTAINS\n  \"\"\"\n  The `!~` operator is used to search for issues where the value of the specified field is not a \"fuzzy\" match for the specified value.\n  \"\"\"\n  NOT_CONTAINS\n  \"\"\"\n  The `WAS NOT IN` operator is used to search for issues where the value of the specified field has never been one of multiple specified values.\n  \"\"\"\n  WAS_NOT_IN\n  \"\"\"\n  The `CHANGED` operator is used to find issues that have a value that had changed for the specified field.\n  \"\"\"\n  CHANGED\n  \"\"\"\n  The `WAS IN` operator is used to find issues that currently have or previously had any of multiple specified values for the specified field.\n  \"\"\"\n  WAS_IN\n  \"\"\"\n  The `WAS` operator is used to find issues that currently have or previously had the specified value for the specified field.\n  \"\"\"\n  WAS\n  \"\"\"\n  The `WAS NOT` operator is used to find issues that have never had the specified value for the specified field.\n  \"\"\"\n  WAS_NOT\n}\n\n\"\"\"\nThe representation of a Jira field in the basic search mode of the JQL builder.\n\"\"\"\ntype JiraJqlSearchTemplate {\n  key: String\n}\n\n\"\"\"\nThe autocomplete types available for Jira fields in the context of the Jira Query Language.\n\nThis enum also describes which fields have field-value support from this schema.\n\"\"\"\nenum JiraJqlAutocompleteType {\n  \"\"\"\n  No autocomplete support.\n  \"\"\"\n  NONE\n  \"\"\"\n  The Jira component field JQL autocomplete type.\n  \"\"\"\n  COMPONENT\n  \"\"\"\n  The Jira group field JQL autocomplete type.\n  \"\"\"\n  GROUP\n  \"\"\"\n  The Jira issue field JQL autocomplete type.\n  \"\"\"\n  ISSUE\n  \"\"\"\n  The Jira issue field type JQL autocomplete type.\n  \"\"\"\n  ISSUETYPE\n  \"\"\"\n  The Jira priority field JQL autocomplete type.\n  \"\"\"\n  PRIORITY\n  \"\"\"\n  The Jira project field JQL autocomplete type.\n  \"\"\"\n  PROJECT\n  \"\"\"\n  The Jira sprint field JQL autocomplete type.\n  \"\"\"\n  SPRINT\n  \"\"\"\n  The Jira status category field JQL autocomplete type.\n  \"\"\"\n  STATUSCATEGORY\n  \"\"\"\n  The Jira status field JQL autocomplete type.\n  \"\"\"\n  STATUS\n  \"\"\"\n  The Jira user field JQL autocomplete type.\n  \"\"\"\n  USER\n  \"\"\"\n  The Jira version field JQL autocomplete type.\n  \"\"\"\n  VERSION\n}\n\n\"\"\"\nThe representation of a Jira JQL field-type in the context of the Jira Query Language.\n\nE.g. `Short Text`, `Number`, `Version Picker`, `Team` etc.\n\nImportant note: This information only exists for collapsed fields.\n\"\"\"\ntype JiraJqlFieldType {\n  \"\"\"\n  The non-translated name of the field type.\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The translated name of the field type.\n  \"\"\"\n  displayName: String!\n}\n\n\"\"\"\nRepresents a connection of field-values for a JQL field.\n\"\"\"\ntype JiraJqlFieldValueConnection {\n  \"\"\"\n  The total number of JiraJqlFieldValues matching the criteria.\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for the edges in the current page.\n  \"\"\"\n  edges: [JiraJqlFieldValueEdge]\n}\n\n\"\"\"\nRepresents a field-value edge for a JQL field.\n\"\"\"\ntype JiraJqlFieldValueEdge {\n  \"\"\"\n  The node at the edge.\n  \"\"\"\n  node: JiraJqlFieldValue\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\n\"\"\"\nA generic interface for JQL fields in Jira.\n\"\"\"\ninterface JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira JQL field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a component JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n}\n\n\"\"\"\nRepresents a field-value for a JQL component field.\n\"\"\"\ntype JiraJqlComponentFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira component field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a component JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n}\n\n\"\"\"\nRepresents a field-value for a JQL group field.\n\"\"\"\ntype JiraJqlGroupFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira group field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it into a query (e.g. wrap it in \"\" )\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a group JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira group associated with this JQL field value.\n  \"\"\"\n  group: JiraGroup!\n}\n\n\"\"\"\nRepresents a field-value for a JQL Issue field.\n\"\"\"\ntype JiraJqlIssueFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for an issue JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira issue associated with this JQL field value.\n  \"\"\"\n  issue: JiraIssue!\n}\n\n\"\"\"\nRepresents a field-value for a JQL issue type field.\n\"\"\"\ntype JiraJqlIssueTypeFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira issue type field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for an issue type JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira issue types associated with this JQL field value.\n  \"\"\"\n  issueTypes: [JiraIssueType!]!\n}\n\n\"\"\"\nRepresents a field-value for a JQL sprint field.\n\"\"\"\ntype JiraJqlSprintFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira sprint field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a sprint JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira sprint associated with this JQL field value.\n  \"\"\"\n  sprint: JiraSprint!\n}\n\n\"\"\"\nRepresents a field-value for a JQL priority field.\n\"\"\"\ntype JiraJqlPriorityFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira priority field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a priority JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira property associated with this JQL field value.\n  \"\"\"\n  priority: JiraPriority!\n}\n\n\"\"\"\nRepresents a field-value for a JQL option field.\n\"\"\"\ntype JiraJqlOptionFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira option field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for an option JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n}\n\n\"\"\"\nRepresents a field-value for a JQL cascading option field.\n\"\"\"\ntype JiraJqlCascadingOptionFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira cascading option field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a cascading option JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira JQL parent option associated with this JQL field value.\n  \"\"\"\n  parentOption: JiraJqlOptionFieldValue\n}\n\n\"\"\"\nRepresents a field-value for a JQL status category field.\n\"\"\"\ntype JiraJqlStatusCategoryFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira status category field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a status category JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira status category associated with this JQL field value.\n  \"\"\"\n  statusCategory: JiraStatusCategory!\n}\n\n\"\"\"\nRepresents a field-value for a JQL status field.\n\"\"\"\ntype JiraJqlStatusFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira status field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a status JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira status category associated with this JQL field value.\n  \"\"\"\n  statusCategory: JiraStatusCategory!\n}\n\n\"\"\"\nRepresents a field-value for a JQL user field.\n\"\"\"\ntype JiraJqlUserFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira user field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a user JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The user associated with this JQL field value.\n  \"\"\"\n  user: User @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.user.accountId\"}] identifiedBy : \"accountId\" batchSize: 90)\n}\n\n\"\"\"\nRepresents a field-value for a JQL resolution field.\n\"\"\"\ntype JiraJqlResolutionFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira resolution field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a resolution JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira resolution associated with this JQL field value.\n  \"\"\"\n  resolution: JiraResolution\n}\n\n\"\"\"\nRepresents a field-value for a JQL label field.\n\"\"\"\ntype JiraJqlLabelFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira label field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a label JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira label associated with this JQL field value.\n  \"\"\"\n  label: JiraLabel\n}\n\n\"\"\"\nRepresents a field-value for a JQL project field.\n\"\"\"\ntype JiraJqlProjectFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira project field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a project JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n  \"\"\"\n  The Jira project associated with this JQL field value.\n  \"\"\"\n  project: JiraProject!\n}\n\n\"\"\"\nRepresents a field-value for a JQL version field.\n\"\"\"\ntype JiraJqlVersionFieldValue implements JiraJqlFieldValue {\n  \"\"\"\n  An identifier that a client should use in a JQL query when it’s referring to a Jira version field-value.\n\n  Important note: this jqlTerm could require proper escaping before placing it  into a query (e.g. wrap it in \"\" ).\n  \"\"\"\n  jqlTerm: String!\n  \"\"\"\n  The user-friendly name for a version JQL field value, to be displayed in the UI.\n  \"\"\"\n  displayName: String!\n}\n\n\"\"\"\nRepresents a connection of field-values for a JQL user field.\n\"\"\"\ntype JiraJqlUserFieldValueConnection {\n  \"\"\"\n  The total number of JiraJqlUserFieldValues matching the criteria.\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for the edges in the current page.\n  \"\"\"\n  edges: [JiraJqlUserFieldValueEdge]\n}\n\n\"\"\"\nRepresents a field-value edge for a JQL user field.\n\"\"\"\ntype JiraJqlUserFieldValueEdge {\n  \"\"\"\n  The node at the edge.\n  \"\"\"\n  node: JiraJqlUserFieldValue\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\n\"\"\"\nRepresents a connection of field-values for a JQL group field.\n\"\"\"\ntype JiraJqlGroupFieldValueConnection {\n  \"\"\"\n  The total number of JiraJqlGroupFieldValues matching the criteria.\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for the edges in the current page.\n  \"\"\"\n  edges: [JiraJqlGroupFieldValueEdge]\n}\n\n\"\"\"\nRepresents a field-value edge for a JQL group field.\n\"\"\"\ntype JiraJqlGroupFieldValueEdge {\n  \"\"\"\n  The node at the edge.\n  \"\"\"\n  node: JiraJqlGroupFieldValue\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\n\"\"\"\nRepresents a connection of field-values for a JQL project field.\n\"\"\"\ntype JiraJqlProjectFieldValueConnection {\n  \"\"\"\n  The total number of JiraJqlProjectFieldValues matching the criteria.\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for the edges in the current page.\n  \"\"\"\n  edges: [JiraJqlProjectFieldValueEdge]\n}\n\n\"\"\"\nRepresents a field-value edge for a JQL project field.\n\"\"\"\ntype JiraJqlProjectFieldValueEdge {\n  \"\"\"\n  The node at the edge.\n  \"\"\"\n  node: JiraJqlProjectFieldValue\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\n\"\"\"\nRepresents a connection of field-values for a JQL sprint field.\n\"\"\"\ntype JiraJqlSprintFieldValueConnection {\n  \"\"\"\n  The total number of JiraJqlSprintFieldValues matching the criteria\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for the edges in the current page.\n  \"\"\"\n  edges: [JiraJqlSprintFieldValueEdge]\n}\n\n\"\"\"\nRepresents a field-value edge for a JQL sprint field.\n\"\"\"\ntype JiraJqlSprintFieldValueEdge {\n  \"\"\"\n  The node at the edge.\n  \"\"\"\n  node: JiraJqlSprintFieldValue\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\n\"\"\"\nA variation of the fieldValues query for retrieving specifically Jira issue type field-values.\n\"\"\"\ntype JiraJqlIssueTypes {\n  \"\"\"\n  Retrieves top-level issue types that encapsulate all others.\n\n  E.g. The `Epic` issue type in company-managed projects.\n  \"\"\"\n  aboveBaseLevel(\n    \"\"\"\n    The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n  ): JiraJqlIssueTypeFieldValueConnection\n  \"\"\"\n  Retrieves mid-level issue types.\n\n  E.g. The `Bug`, `Story` and `Task` issue type in company-managed projects.\n  \"\"\"\n  baseLevel(\n    \"\"\"\n    The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n  ): JiraJqlIssueTypeFieldValueConnection\n  \"\"\"\n  Retrieves the lowest level issue types.\n\n  E.g. The `Subtask` issue type in company-managed projects.\n  \"\"\"\n  belowBaseLevel(\n    \"\"\"\n    The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n  ): JiraJqlIssueTypeFieldValueConnection\n}\n\n\"\"\"\nRepresents a connection of field-values for a JQL issue type field.\n\"\"\"\ntype JiraJqlIssueTypeFieldValueConnection {\n  \"\"\"\n  The total number of JiraJqlIssueTypeFieldValues matching the criteria\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for the edges in the current page.\n  \"\"\"\n  edges: [JiraJqlIssueTypeFieldValueEdge]\n}\n\n\"\"\"\nRepresents a field-value edge for a JQL issue type field.\n\"\"\"\ntype JiraJqlIssueTypeFieldValueEdge {\n  \"\"\"\n  The node at the edge.\n  \"\"\"\n  node: JiraJqlIssueTypeFieldValue\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\n\"\"\"\nAn input filter used to specify the cascading options returned.\n\"\"\"\ninput JiraCascadingSelectOptionsFilter {\n  \"\"\"\n  The type of cascading option to be returned.\n  \"\"\"\n  optionType: JiraCascadingSelectOptionType!\n  \"\"\"\n  Used for retrieving CHILD cascading options by specifying the PARENT cascading option's name.\n\n  The parent name is case-sensitive and it will not be applied to non-child cascading options.\n  \"\"\"\n  parentOptionName: String\n}\n\n\"\"\"\nRepresents a connection of field-values for a JQL option field.\n\"\"\"\ntype JiraJqlOptionFieldValueConnection {\n  \"\"\"\n  The total number of JiraJqlOptionFieldValues matching the criteria.\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for the edges in the current page.\n  \"\"\"\n  edges: [JiraJqlOptionFieldValueEdge]\n}\n\n\"\"\"\nRepresents a field-value edge for a JQL option field.\n\"\"\"\ntype JiraJqlOptionFieldValueEdge {\n  \"\"\"\n  The node at the edge.\n  \"\"\"\n  node: JiraJqlOptionFieldValue\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\n\"\"\"\nCascading options can either be a parent or a child - this enum captures this characteristic.\n\nE.g. If there is a parent cascading option named `P1`, it may or may not have\nchild cascading options named `C1` and `C2`.\n- `P1` would be a `PARENT` enum\n- `C1` and `C2` would be `CHILD` enums\n\"\"\"\nenum JiraCascadingSelectOptionType {\n  \"\"\"\n  Parent option only\n  \"\"\"\n  PARENT\n  \"\"\"\n  Child option only\n  \"\"\"\n  CHILD\n  \"\"\"\n  All options, regardless of whether they're a parent or child.\n  \"\"\"\n  ALL\n}\n\n\"\"\"\nA variation of the fieldValues query for retrieving specifically Jira version field-values.\n\nThis type provides the capability to retrieve connections of released, unreleased and archived versions.\n\nImportant note: that released and unreleased versions can be archived and vice versa.\n\"\"\"\ntype JiraJqlVersions {\n  \"\"\"\n  Retrieves a connection of released versions.\n  \"\"\"\n  released(\n    \"\"\"\n    The number of items to be sliced away to target between the after and before cursors.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n    \"\"\"\n    Determines whether or not archived versions are returned. By default it will be false.\n    \"\"\"\n    includeArchived: Boolean\n  ): JiraJqlVersionFieldValueConnection\n  \"\"\"\n  Retrieves a connection of unreleased versions.\n  \"\"\"\n  unreleased(\n    \"\"\"\n    The number of items to be sliced away to target between the after and before cursors.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n    \"\"\"\n    Determines whether or not archived versions are returned. By default it will be false.\n    \"\"\"\n    includeArchived: Boolean\n  ): JiraJqlVersionFieldValueConnection\n\n  \"\"\"\n  Retrieves a connection of archived versions.\n  \"\"\"\n  archived(\n    \"\"\"\n    The number of items to be sliced away to target between the after and before cursors.\n    \"\"\"\n    first: Int\n    \"\"\"\n    The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n    \"\"\"\n    after: String\n    \"\"\"\n    The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n    \"\"\"\n    last: Int\n    \"\"\"\n    The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n    \"\"\"\n    before: String\n  ): JiraJqlVersionFieldValueConnection\n}\n\n\"\"\"\nRepresents a connection of field-values for a JQL version field.\n\"\"\"\ntype JiraJqlVersionFieldValueConnection {\n  \"\"\"\n  The total number of JiraJqlVersionFieldValues matching the criteria.\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  The page info of the current page of results.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  The data for the edges in the current page.\n  \"\"\"\n  edges: [JiraJqlVersionFieldValueEdge]\n}\n\n\"\"\"\nRepresents a field-value edge for a JQL version field.\n\"\"\"\ntype JiraJqlVersionFieldValueEdge {\n  \"\"\"\n  The node at the edge.\n  \"\"\"\n  node: JiraJqlVersionFieldValue\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\"\"\"\nContainer for the Dev Summary of an issue\n\"\"\"\ntype JiraIssueDevSummaryResult {\n  \"\"\"\n  Contains all available summaries for the issue\n  \"\"\"\n  devSummary: JiraIssueDevSummary\n\n  \"\"\"\n  Returns \"transient errors\". That is, errors that may be solved by retrying the fetch operation. \n  This excludes configuration errors that require admin intervention to be solved.\n  \"\"\"\n  errors: [JiraIssueDevSummaryError!]\n  \"\"\"\n  Returns \"non-transient errors\". That is, configuration errors that require admin intervention to be solved. \n  This returns an empty collection when called for users that are not administrators or system administrators.\n  \"\"\"\n  configErrors: [JiraIssueDevSummaryError!]\n}\n\n\"\"\"\nLists the summaries available for each type of dev info, for a given issue\n\"\"\"\ntype JiraIssueDevSummary {\n  \"\"\"\n  Summary of the Branches attached to the issue\n  \"\"\"\n  branch: JiraIssueBranchDevSummaryContainer\n  \"\"\"\n  Summary of the Commits attached to the issue\n  \"\"\"\n  commit: JiraIssueCommitDevSummaryContainer\n  \"\"\"\n  Summary of the Pull Requests attached to the issue\n  \"\"\"\n  pullrequest: JiraIssuePullRequestDevSummaryContainer\n  \"\"\"\n  Summary of the Builds attached to the issue\n  \"\"\"\n  build: JiraIssueBuildDevSummaryContainer\n  \"\"\"\n  Summary of the Reviews attached to the issue\n  \"\"\"\n  review: JiraIssueReviewDevSummaryContainer\n  \"\"\"\n  Summary of the deployment environments attached to some builds.\n  This is a legacy attribute only used by Bamboo builds\n  \"\"\"\n  deploymentEnvironments: JiraIssueDeploymentEnvironmentDevSummaryContainer\n}\n\n\"\"\"\nAggregates the `count` of entities for a given provider\n\"\"\"\ntype JiraIssueDevSummaryByProvider {\n  \"\"\"\n  UUID for a given provider, to allow aggregation\n  \"\"\"\n  providerId: String\n  \"\"\"\n  Provider name\n  \"\"\"\n  name: String\n  \"\"\"\n  Number of entities associated with that provider\n  \"\"\"\n  count: Int\n}\n\n\"\"\"\nError when querying the JiraIssueDevSummary\n\"\"\"\ntype JiraIssueDevSummaryError {\n  \"\"\"\n  A message describing the error\n  \"\"\"\n  message: String\n  \"\"\"\n  Information about the provider that triggered the error\n  \"\"\"\n  instance: JiraIssueDevSummaryErrorProviderInstance\n}\n\n\"\"\"\nBasic information on a provider that triggered an error\n\"\"\"\ntype JiraIssueDevSummaryErrorProviderInstance {\n  \"\"\"\n  Provider's name\n  \"\"\"\n  name: String\n  \"\"\"\n  Provider's type\n  \"\"\"\n  type: String\n  \"\"\"\n  Base URL of the provider's instance that failed\n  \"\"\"\n  baseUrl: String\n}\n\n\"\"\"\nContainer for the summary of the Branches attached to the issue\n\"\"\"\ntype JiraIssueBranchDevSummaryContainer {\n  \"\"\"\n  The actual summary of the Branches attached to the issue\n  \"\"\"\n  overall: JiraIssueBranchDevSummary\n  \"\"\"\n  Count of Branches aggregated per provider\n  \"\"\"\n  summaryByProvider: [JiraIssueDevSummaryByProvider!]\n}\n\n\"\"\"\nSummary of the Branches attached to the issue\n\"\"\"\ntype JiraIssueBranchDevSummary {\n  \"\"\"\n  Total number of Branches for the issue\n  \"\"\"\n  count: Int\n  \"\"\"\n  Date at which this summary was last updated\n  \"\"\"\n  lastUpdated: DateTime\n}\n\n\"\"\"\nContainer for the summary of the Commits attached to the issue\n\"\"\"\ntype JiraIssueCommitDevSummaryContainer {\n  \"\"\"\n  The actual summary of the Commits attached to the issue\n  \"\"\"\n  overall: JiraIssueCommitDevSummary\n  \"\"\"\n  Count of Commits aggregated per provider\n  \"\"\"\n  summaryByProvider: [JiraIssueDevSummaryByProvider!]\n}\n\n\"\"\"\nSummary of the Commits attached to the issue\n\"\"\"\ntype JiraIssueCommitDevSummary {\n  \"\"\"\n  Total number of Commits for the issue\n  \"\"\"\n  count: Int\n  \"\"\"\n  Date at which this summary was last updated\n  \"\"\"\n  lastUpdated: DateTime\n}\n\n\"\"\"\nContainer for the summary of the Pull Requests attached to the issue\n\"\"\"\ntype JiraIssuePullRequestDevSummaryContainer {\n  \"\"\"\n  The actual summary of the Pull Requests attached to the issue\n  \"\"\"\n  overall: JiraIssuePullRequestDevSummary\n  \"\"\"\n  Count of Pull Requests aggregated per provider\n  \"\"\"\n  summaryByProvider: [JiraIssueDevSummaryByProvider!]\n}\n\n\"\"\"\nSummary of the Pull Requests attached to the issue\n\"\"\"\ntype JiraIssuePullRequestDevSummary {\n  \"\"\"\n  Total number of Pull Requests for the issue\n  \"\"\"\n  count: Int\n  \"\"\"\n  Date at which this summary was last updated\n  \"\"\"\n  lastUpdated: DateTime\n\n  \"\"\"\n  State of the Pull Requests in the summary\n  \"\"\"\n  state: JiraPullRequestState\n  \"\"\"\n  Number of Pull Requests for the state\n  \"\"\"\n  stateCount: Int\n  \"\"\"\n  Whether the Pull Requests for the given state are open or not\n  \"\"\"\n  open: Boolean\n}\n\n\"\"\"\nPossible states for Pull Requests\n\"\"\"\nenum JiraPullRequestState {\n  \"\"\"\n  Pull Request is Open\n  \"\"\"\n  OPEN\n  \"\"\"\n  Pull Request is Declined\n  \"\"\"\n  DECLINED\n  \"\"\"\n  Pull Request is Merged\n  \"\"\"\n  MERGED\n}\n\n\"\"\"\nContainer for the summary of the Builds attached to the issue\n\"\"\"\ntype JiraIssueBuildDevSummaryContainer {\n  \"\"\"\n  The actual summary of the Builds attached to the issue\n  \"\"\"\n  overall: JiraIssueBuildDevSummary\n  \"\"\"\n  Count of Builds aggregated per provider\n  \"\"\"\n  summaryByProvider: [JiraIssueDevSummaryByProvider!]\n}\n\n\"\"\"\nSummary of the Builds attached to the issue\n\"\"\"\ntype JiraIssueBuildDevSummary {\n  \"\"\"\n  Total number of Builds for the issue\n  \"\"\"\n  count: Int\n  \"\"\"\n  Date at which this summary was last updated\n  \"\"\"\n  lastUpdated: DateTime\n\n  \"\"\"\n  Number of failed buids for the issue\n  \"\"\"\n  failedBuildCount: Int\n  \"\"\"\n  Number of successful buids for the issue\n  \"\"\"\n  successfulBuildCount: Int\n  \"\"\"\n  Number of buids with unknown result for the issue\n  \"\"\"\n  unknownBuildCount: Int\n}\n\n\"\"\"\nContainer for the summary of the Reviews attached to the issue\n\"\"\"\ntype JiraIssueReviewDevSummaryContainer {\n  \"\"\"\n  The actual summary of the Reviews attached to the issue\n  \"\"\"\n  overall: JiraIssueReviewDevSummary\n  \"\"\"\n  Count of Reviews aggregated per provider\n  \"\"\"\n  summaryByProvider: [JiraIssueDevSummaryByProvider!]\n}\n\n\"\"\"\nSummary of the Reviews attached to the issue\n\"\"\"\ntype JiraIssueReviewDevSummary {\n  \"\"\"\n  Total number of Reviews for the issue\n  \"\"\"\n  count: Int\n  \"\"\"\n  Date at which this summary was last updated\n  \"\"\"\n  lastUpdated: DateTime\n\n  \"\"\"\n  State of the Reviews in the summary\n  \"\"\"\n  state: JiraReviewState\n  \"\"\"\n  Number of Reviews for the state\n  \"\"\"\n  stateCount: Int\n}\n\n\"\"\"\nPossible states for Reviews\n\"\"\"\nenum JiraReviewState {\n  \"\"\"\n  Review is in Review state\n  \"\"\"\n  REVIEW\n  \"\"\"\n  Review is in Require Approval state\n  \"\"\"\n  APPROVAL\n  \"\"\"\n  Review is in Summarize state\n  \"\"\"\n  SUMMARIZE\n  \"\"\"\n  Review has been rejected\n  \"\"\"\n  REJECTED\n  \"\"\"\n  Review has been closed\n  \"\"\"\n  CLOSED\n  \"\"\"\n  Review is in Draft state\n  \"\"\"\n  DRAFT\n  \"\"\"\n  Review is in Dead state\n  \"\"\"\n  DEAD\n  \"\"\"\n  Review state is unknown\n  \"\"\"\n  UNKNOWN\n}\n\n\"\"\"\nContainer for the summary of the Deployment Environments attached to the issue\n\"\"\"\ntype JiraIssueDeploymentEnvironmentDevSummaryContainer {\n  \"\"\"\n  The actual summary of the Deployment Environments attached to the issue\n  \"\"\"\n  overall: JiraIssueDeploymentEnvironmentDevSummary\n  \"\"\"\n  Count of Deployment Environments aggregated per provider\n  \"\"\"\n  summaryByProvider: [JiraIssueDevSummaryByProvider!]\n}\n\n\"\"\"\nSummary of the Deployment Environments attached to the issue\n\"\"\"\ntype JiraIssueDeploymentEnvironmentDevSummary {\n  \"\"\"\n  Total number of Reviews for the issue\n  \"\"\"\n  count: Int\n  \"\"\"\n  Date at which this summary was last updated\n  \"\"\"\n  lastUpdated: DateTime\n\n  \"\"\"\n  A list of the top environment there was a deployment on\n  \"\"\"\n  topEnvironments: [JiraIssueDeploymentEnvironment!]\n}\n\ntype JiraIssueDeploymentEnvironment {\n  \"\"\"\n  Title of the deployment environment\n  \"\"\"\n  title: String\n  \"\"\"\n  State of the deployment\n  \"\"\"\n  status: JiraIssueDeploymentEnvironmentState\n}\n\n\"\"\"\nPossible states for a deployment environment\n\"\"\"\nenum JiraIssueDeploymentEnvironmentState {\n  \"\"\"\n  The deployment was not deployed successfully\n  \"\"\"\n  NOT_DEPLOYED\n  \"\"\"\n  The deployment was deployed successfully\n  \"\"\"\n  DEPLOYED\n}\"\"\"\nRepresents a WorkCategory.\n\"\"\"\ntype JiraWorkCategory {\n    \"\"\"\n    The value of the WorkCategory.\n    \"\"\"\n    value: String\n}\"\"\"\nRepresents a single team in Jira\n\"\"\"\ntype JiraTeam implements Node {\n    \"\"\"\n    Global identifier of team\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Team id in the digital format\n    \"\"\"\n    teamId: String!\n    \"\"\"\n    Name of the team\n    \"\"\"\n    name: String\n    \"\"\"\n    Description of the team\n    \"\"\"\n    description: String\n    \"\"\"\n    Avatar of the team\n    \"\"\"\n    avatar: JiraAvatar\n    \"\"\"\n    Members available in the team\n    \"\"\"\n    members: JiraUserConnection\n}\n\n\"\"\"\nThe connection type for JiraTeam.\n\"\"\"\ntype JiraTeamConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraTeamEdge]\n}\n\n\"\"\"\nAn edge in a JiraTeam connection.\n\"\"\"\ntype JiraTeamEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraTeam\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nThe visibility property of a comment within a JSM project type.\n\"\"\"\nenum JiraServiceManagementCommentVisibility {\n    \"\"\"\n    This comment will appear in the portal, visible to all customers. Also called public.\n    \"\"\"\n    VISIBLE_TO_HELPSEEKER\n    \"\"\"\n    This comment will only appear in JIRA's issue view. Also called private.\n    \"\"\"\n    INTERNAL\n}\ntype Query {\n  \"\"\"\n   this field is added to enable self governed onboarding of Jira GraphQL types to AGG\n   see https://hello.atlassian.net/wiki/spaces/PSRV/pages/1010287708/Announcing+self+governed+APIs for more details\n  \"\"\"\n  jira: JiraQuery @namespaced\n}\n\ntype Mutation {\n    \"\"\"\n    this field is added to enable self governed onboarding of Jira GraphQL types to AGG\n    see https://hello.atlassian.net/wiki/spaces/PSRV/pages/1010287708/Announcing+self+governed+APIs for more details\n    \"\"\"\n    jira: JiraMutation\n}\n\ntype JiraMutation\n\"\"\"\nRepresents a media context used for file uploads.\n\"\"\"\ntype JiraMediaContext {\n    \"\"\"\n    Contains the token information for uploading a media content.\n    \"\"\"\n    uploadToken: JiraMediaUploadTokenResult\n}\n\n\"\"\"\nContains either the successful fetched media token information or an error.\n\"\"\"\nunion JiraMediaUploadTokenResult = JiraMediaUploadToken | QueryError\n\n\"\"\"\nContains the information needed for uploading a media content in jira on issue create/view screens.\n\"\"\"\ntype JiraMediaUploadToken {\n    \"\"\"\n    Endpoint where the media content will be uploaded.\n    \"\"\"\n    endpointUrl: URL\n    \"\"\"\n    Registered client id of media API.\n    \"\"\"\n    clientId: String\n    \"\"\"\n    The collection in which to put the new files.\n    It can be user-scoped (such as upload-user-collection-*)\n    or project scoped (such as upload-project-*).\n    \"\"\"\n    targetCollection: String\n    \"\"\"\n    token string value which can be used with Media API requests.\n    \"\"\"\n    token: String\n    \"\"\"\n    Represents the duration (in minutes) for which token will be valid.\n    \"\"\"\n    tokenDurationInMin: Int\n}\n\"\"\"\nRepresents the customer organization on an Issue in a JiraServiceManagement project.\n\"\"\"\ntype JiraServiceManagementOrganization {\n    \"\"\"\n    Globally unique id within this schema.\n    \"\"\"\n    organizationId: ID\n    \"\"\"\n    The organization's name.\n    \"\"\"\n    organizationName: String\n    \"\"\"\n    The organization's domain.\n    \"\"\"\n    domain: String\n}\n\n\"\"\"\nThe connection type for JiraServiceManagementOrganization.\n\"\"\"\ntype JiraServiceManagementOrganizationConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraServiceManagementOrganizationEdge]\n}\n\n\"\"\"\nAn edge in a JiraServiceManagementOrganization connection.\n\"\"\"\ntype JiraServiceManagementOrganizationEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraServiceManagementOrganization\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\nextend type JiraQuery {\n    \"\"\"\n    Used to retrieve Issue layout information by type by `issueId`.\n    \"\"\"\n    issueContainersByType(\n        input: JiraIssueItemSystemContainerTypeWithIdInput!\n    ): JiraIssueItemContainersResult! @deprecated(reason: \"Please use issueContainersByTypeByKey.\")\n\n    \"\"\"\n    Used to retrieve Issue layout information by `issueKey` and `cloudId`.\n    \"\"\"\n    issueContainersByTypeByKey(\n        input: JiraIssueItemSystemContainerTypeWithKeyInput!\n    ): JiraIssueItemContainersResult!\n}\"\"\"\nRepresents the security levels on an Issue.\n\"\"\"\ntype JiraSecurityLevel implements Node {\n    \"\"\"\n    Global identifier for the security level.\n    \"\"\"\n    id: ID!,\n    \"\"\"\n    identifier for the security level.\n    \"\"\"\n    securityId: String!\n    \"\"\"\n        Name of the security level.\n    \"\"\"\n    name: String\n    \"\"\"\n    Description of the security level.\n    \"\"\"\n    description: String\n}\n\n\"\"\"\nThe connection type for JiraSecurityLevel.\n\"\"\"\ntype JiraSecurityLevelConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraSecurityLevelEdge]\n}\n\n\"\"\"\nAn edge in a JiraSecurityLevel connection.\n\"\"\"\ntype JiraSecurityLevelEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraSecurityLevel\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nA list of issues and JQL that results the list of issues.\n\"\"\"\ntype JiraVersionDetailPageIssues {\n    \"\"\"\n    JQL that is used to list issues\n    \"\"\"\n    jql: String\n    \"\"\"\n    Issues returned by the provided JQL query\n    \"\"\"\n    issues(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueConnection\n}\n\nextend type JiraQuery {\n    \"\"\"\n    Contains the lists of issues per table and the warning config for the version detail page under Releases home page.\n    \"\"\"\n    versionDetailPage(versionId: ID!): JiraVersionDetailPage\n}\n\n\"\"\"\nThis type holds specific information for version details page holding warning config for the version and issues for each category.\n\"\"\"\ntype JiraVersionDetailPage {\n    \"\"\"\n    Warning config of the version. This is per project setting.\n    \"\"\"\n    warningConfig: JiraVersionWarningConfig\n    \"\"\"\n    List of issues and its JQL, that have failing build, and its status is in done issue status category.\n    \"\"\"\n    failingBuildIssues: JiraVersionDetailPageIssues\n    \"\"\"\n    List of issues and its JQL, that have open pull request, and its status is in done issue status category.\n    \"\"\"\n    openPullRequestIssues: JiraVersionDetailPageIssues\n    \"\"\"\n    List of issues and its JQL, that have commits that are not a part of pull request, and its status is in done issue status category.\n    \"\"\"\n    unreviewedCodeIssues: JiraVersionDetailPageIssues\n    \"\"\"\n    List of issues and its JQL, that are in to-do issue status category.\n    \"\"\"\n    toDoIssues: JiraVersionDetailPageIssues\n    \"\"\"\n    List of issues and its JQL, that are in-progress issue status category.\n    \"\"\"\n    inProgressIssues: JiraVersionDetailPageIssues\n    \"\"\"\n    List of issues and its JQL, that are done issue status category.\n    \"\"\"\n    doneIssues: JiraVersionDetailPageIssues\n    \"\"\"\n    List of issues and its JQL, that have the given version as its fixed version.\n    \"\"\"\n    allIssues: JiraVersionDetailPageIssues\n}\n\"\"\"\nRepresents the JSM incident.\n\"\"\"\ntype JiraServiceManagementIncident {\n    \"\"\"\n    Indicates whether any incident is linked to the issue or not.\n    \"\"\"\n    hasLinkedIncidents: Boolean\n}\n\"\"\"\nRepresents the label of a custom label field.\n\"\"\"\ntype JiraLabel {\n    \"\"\"\n    The identifier of the label.\n    Can be null when label is not yet created or label was returned without providing an Issue id.\n    \"\"\"\n    labelId: String\n    \"\"\"\n    The name of the label.\n    \"\"\"\n    name: String\n}\n\n\"\"\"\nThe connection type for JiraLabel.\n\"\"\"\ntype JiraLabelConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraLabelEdge]\n}\n\n\"\"\"\nAn edge in a Jiralabel connection.\n\"\"\"\ntype JiraLabelEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraLabel\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\nextend type JiraQuery {\n    \"\"\"\n    Container for all DevOps related queries in Jira\n    \"\"\"\n    devOps: JiraDevOpsQuery @beta(name: \"JiraDevOps\")\n}\n\n\"\"\"\nContainer for all DevOps related queries in Jira\n\"\"\"\ntype JiraDevOpsQuery {\n    \"\"\"\n    Returns the JiraDevOpsIssuePanel for an issue\n    \"\"\"\n    devOpsIssuePanel(\n        issueId: ID! @ARI(type: \"issue\", owner: \"jira\")\n    ): JiraDevOpsIssuePanel @beta(name: \"JiraDevOps\")\n}\n\nextend type JiraMutation {\n    \"\"\"\n    Container for all DevOps related mutations in Jira\n    \"\"\"\n    devOps: JiraDevOpsMutation @beta(name: \"JiraDevOps\")\n}\n\n\"\"\"\nContainer for all DevOps related mutations in Jira\n\"\"\"\ntype JiraDevOpsMutation {\n    \"\"\"\n    Lets a user opt-out of the \"not-connected\" state in the DevOps Issue Panel\n    \"\"\"\n    optoutOfDevOpsIssuePanelNotConnectedState(\n        input: JiraOptoutDevOpsIssuePanelNotConnectedInput!\n    ): JiraOptoutDevOpsIssuePanelNotConnectedPayload @beta(name: \"JiraDevOps\")\n    \"\"\"\n    Lets a user dismiss a banner shown in the DevOps Issue Panel\n    \"\"\"\n    dismissDevOpsIssuePanelBanner(\n        input: JiraDismissDevOpsIssuePanelBannerInput!\n    ): JiraDismissDevOpsIssuePanelBannerPayload @beta(name: \"JiraDevOps\")\n}\n\n\"\"\"\nThe input type for opting out of the Not Connected state in the DevOpsPanel\n\"\"\"\ninput JiraOptoutDevOpsIssuePanelNotConnectedInput {\n    \"\"\"\n    Cloud ID of the tenant this change is applied to\n    \"\"\"\n    cloudId: ID! @CloudID\n}\n\n\"\"\"\nThe response payload for opting out of the Not Connected state in the DevOpsPanel\n\"\"\"\ntype JiraOptoutDevOpsIssuePanelNotConnectedPayload implements Payload {\n    \"The success indicator saying whether mutation operation was successful as a whole or not.\"\n    success: Boolean!\n    \"The errors field represents additional mutation error information if exists.\"\n    errors: [MutationError!]\n}\n\n\"\"\"\nThe input type for devops panel banner dismissal\n\"\"\"\ninput JiraDismissDevOpsIssuePanelBannerInput {\n    \"\"\"\n    ID of the issue this banner was dismissed on\n    \"\"\"\n    issueId: ID! @ARI(type: \"issue\", owner: \"jira\")\n    \"\"\"\n    Only \"issue-key-onboarding\" is supported currently as this is the only banner\n    that can be displayed in the panel for now\n    \"\"\"\n    bannerType: JiraDevOpsIssuePanelBannerType!\n}\n\n\"\"\"\nThe response payload for devops panel banner dismissal\n\"\"\"\ntype JiraDismissDevOpsIssuePanelBannerPayload implements Payload {\n    \"The success indicator saying whether mutation operation was successful as a whole or not.\"\n    success: Boolean!\n    \"The errors field represents additional mutation error information if exists.\"\n    errors: [MutationError!]\n}\"\"\"\nRepresents an affected service entity for a Jira Issue.\nAffectedService provides context on what has been changed.\n\"\"\"\ntype JiraAffectedService {\n    \"\"\"\n    The id of the affected service. E.g. Jira.\n    \"\"\"\n    serviceId: String\n}\n\n\"\"\"\nThe connection type for JiraAffectedService.\n\"\"\"\ntype JiraAffectedServiceConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraAffectedServiceEdge]\n}\n\n\"\"\"\nAn edge in a JiraAffectedService connection.\n\"\"\"\ntype JiraAffectedServiceEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraAffectedService\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nRepresents an epic.\n\"\"\"\ntype JiraEpic {\n    \"\"\"\n    Global identifier for the epic/issue Id.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Issue Id for the epic.\n    \"\"\"\n    issueId: String!\n    \"\"\"\n    Name of the epic.\n    \"\"\"\n    name: String\n    \"\"\"\n    Key identifier for the Issue.\n    \"\"\"\n    key: String\n    \"\"\"\n    Summary of the epic.\n    \"\"\"\n    summary: String\n    \"\"\"\n    Color string for the epic.\n    \"\"\"\n    color: String\n    \"\"\"\n    Status of the epic, whether its completed or not.\n    \"\"\"\n    done: Boolean\n}\n\n\"\"\"\nThe connection type for JiraEpic.\n\"\"\"\ntype JiraEpicConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraEpicEdge]\n}\n\n\"\"\"\nAn edge in a JiraEpic connection.\n\"\"\"\ntype JiraEpicEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraEpic\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nRepresents the language that can be used for fields such as JSM Requested Language.\n\"\"\"\ntype JiraServiceManagementLanguage {\n    \"\"\"\n    A unique language code that represents the language.\n    \"\"\"\n    languageCode: String\n    \"\"\"\n    A readable common name for this language.\n    \"\"\"\n    displayName: String\n}\n\"\"\"\nJira Configuration Management Database.\n\"\"\"\ntype JiraCmdbObject implements Node {\n    \"\"\"\n    Global identifier for the CMDB field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Unique object id formed with `workspaceId`:`objectId`.\n    \"\"\"\n    objectGlobalId: String\n    \"\"\"\n    Unique id in the workspace of the CMDB object.\n    \"\"\"\n    objectId: String\n    \"\"\"\n    Workspace id of the CMDB object.\n    \"\"\"\n    workspaceId: String\n    \"\"\"\n    Label of the CMDB object.\n    \"\"\"\n    label: String\n    \"\"\"\n    The key associated with the CMDB object.\n    \"\"\"\n    objectKey: String\n    \"\"\"\n    The avatar associated with this CMDB object.\n    \"\"\"\n    avatar: JiraCmdbAvatar\n    \"\"\"\n    The CMDB object type.\n    \"\"\"\n    objectType: JiraCmdbObjectType\n    \"\"\"\n    Paginated list of attributes present on the CMDB object.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    attributes(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraCmdbAttributeConnection\n    \"\"\"\n    The URL link for this CMDB object.\n    \"\"\"\n    webUrl: String\n}\n\n\"\"\"\nRepresents a CMDB avatar.\n\"\"\"\ntype JiraCmdbAvatar {\n    \"\"\"\n    The ID of the CMDB avatar.\n    \"\"\"\n    id: String\n    \"\"\"\n    The UUID of the CMDB avatar.\n    \"\"\"\n    avatarUUID: String\n    \"\"\"\n    The 16x16 pixel CMDB avatar.\n    \"\"\"\n    url16: String\n    \"\"\"\n    The 48x48 pixel CMDB avatar.\n    \"\"\"\n    url48: String\n    \"\"\"\n    The 72x72 pixel CMDB avatar.\n    \"\"\"\n    url72: String\n    \"\"\"\n    The 144x144 pixel CMDB avatar.\n    \"\"\"\n    url144: String\n    \"\"\"\n    The 288x288 pixel CMDB avatar.\n    \"\"\"\n    url288: String\n    \"\"\"\n    The media client config used for retrieving the CMDB Avatar.\n    \"\"\"\n    mediaClientConfig: JiraCmdbMediaClientConfig\n}\n\n\"\"\"\nRepresents the media client config used for retrieving the CMDB Avatar.\n\"\"\"\ntype JiraCmdbMediaClientConfig {\n    \"\"\"\n    The media client ID for the CMDB avatar.\n    \"\"\"\n    clientId: String\n    \"\"\"\n    The ASAP issuer of the media token.\n    \"\"\"\n    issuer: String\n    \"\"\"\n    The media file ID for the CMDB avatar.\n    \"\"\"\n    fileId: String\n    \"\"\"\n    The media base URL for the CMDB avatar.\n    \"\"\"\n    mediaBaseUrl: URL\n    \"\"\"\n    The media JWT token for the CMDB avatar.\n    \"\"\"\n    mediaJwtToken: String\n}\n\n\"\"\"\nRepresents the attribute associated with the CMDB object.\n\"\"\"\ntype JiraCmdbAttribute {\n    \"\"\"\n    The object type attribute ID.\n    \"\"\"\n    objectTypeAttributeId: String\n    \"\"\"\n    The object type attribute.\n    \"\"\"\n    objectTypeAttribute: JiraCmdbObjectTypeAttribute\n    \"\"\"\n    Paginated list of attribute values present on the CMDB object.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    objectAttributeValues(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraCmdbObjectAttributeValueConnection\n}\n\n\"\"\"\nRepresents the CMDB object type attribute.\n\"\"\"\ntype JiraCmdbObjectTypeAttribute {\n    \"\"\"\n    The name of the CMDB object type attribute.\n    \"\"\"\n    name: String\n    \"\"\"\n    A boolean representing whether this attribute is set as the label attribute or not.\n    \"\"\"\n    label: Boolean\n    \"\"\"\n    The category of the CMDB attribute that can be created.\n    \"\"\"\n    type: JiraCmdbAttributeType\n    \"\"\"\n    The description of the CMDB object type attribute.\n    \"\"\"\n    description: String\n    \"\"\"\n    The object type of the CMDB object type attribute.\n    \"\"\"\n    objectType: JiraCmdbObjectType\n    \"\"\"\n    The default type of the CMDB object type attribute.\n    This property will be present if the `type` of the attribute is `DEFAULT`.\n    \"\"\"\n    defaultType: JiraCmdbDefaultType\n    \"\"\"\n    The reference type of the CMDB object type attribute.\n    This property will be present if the `type` of the attribute is `REFERENCED_OBJECT`.\n    \"\"\"\n    referenceType: JiraCmdbReferenceType\n    \"\"\"\n    The reference object type ID of the CMDB object type attribute.\n    This property will be present if the `type` of the attribute is `REFERENCED_OBJECT`.\n    \"\"\"\n    referenceObjectTypeId: String\n    \"\"\"\n    The reference object type of the CMDB object type attribute.\n    This property will be present if the `type` of the attribute is `REFERENCED_OBJECT`.\n    \"\"\"\n    referenceObjectType: JiraCmdbObjectType\n    \"\"\"\n    The additional value of the CMDB object type attribute.\n    \"\"\"\n    additionalValue: String\n    \"\"\"\n    The suffix associated with the CMDB object type attribute.\n    \"\"\"\n    suffix: String\n}\n\n\"\"\"\nThe category of the CMDB attribute that can be created.\n\"\"\"\nenum JiraCmdbAttributeType {\n    \"\"\"\n    Default attributes, e.g. text, boolean, integer, date.\n    \"\"\"\n    DEFAULT\n    \"\"\"\n    Reference object attribute.\n    \"\"\"\n    REFERENCED_OBJECT\n    \"\"\"\n    User attribute.\n    \"\"\"\n    USER\n    \"\"\"\n    Confluence attribute.\n    \"\"\"\n    CONFLUENCE\n    \"\"\"\n    Group attribute.\n    \"\"\"\n    GROUP\n    \"\"\"\n    Version attribute.\n    \"\"\"\n    VERSION\n    \"\"\"\n    Project attribute.\n    \"\"\"\n    PROJECT\n    \"\"\"\n    Status attribute.\n    \"\"\"\n    STATUS\n}\n\n\"\"\"\nRepresents the CMDB object type.\n\"\"\"\ntype JiraCmdbObjectType {\n    \"\"\"\n    The ID of the CMDB object type.\n    \"\"\"\n    objectTypeId: String!\n    \"\"\"\n    The name of the CMDB object type.\n    \"\"\"\n    name: String\n    \"\"\"\n    The description of the CMDB object type.\n    \"\"\"\n    description: String\n    \"\"\"\n    The icon of the CMDB object type.\n    \"\"\"\n    icon: JiraCmdbIcon\n    \"\"\"\n    The object schema id of the CMDB object type.\n    \"\"\"\n    objectSchemaId: String\n}\n\n\"\"\"\nRepresents a CMDB icon.\n\"\"\"\ntype JiraCmdbIcon {\n    \"\"\"\n    The ID of the CMDB icon.\n    \"\"\"\n    id: String!\n    \"\"\"\n    The name of the CMDB icon.\n    \"\"\"\n    name: String\n    \"\"\"\n    The URL of the small CMDB icon.\n    \"\"\"\n    url16: String\n    \"\"\"\n    The URL of the large CMDB icon.\n    \"\"\"\n    url48: String\n}\n\n\"\"\"\nRepresents the CMDB default type.\nThis contains information about what type of default attribute this is.\nThe possible id: name values are as follows:\n    0: Text\n    1: Integer\n    2: Boolean\n    3: Float\n    4: Date\n    6: DateTime\n    7: URL\n    8: Email\n    9: Textarea\n    10: Select\n    11: IP Address\n\"\"\"\ntype JiraCmdbDefaultType {\n    \"\"\"\n    The ID of the CMDB default type.\n    \"\"\"\n    id: String\n    \"\"\"\n    The name of the CMDB default type.\n    \"\"\"\n    name: String\n}\n\n\"\"\"\nRepresents the CMDB reference type.\nThis describes the type of connection between one object and another.\n\"\"\"\ntype JiraCmdbReferenceType {\n    \"\"\"\n    The ID of the CMDB reference type.\n    \"\"\"\n    id: String\n    \"\"\"\n    The name of the CMDB reference type.\n    \"\"\"\n    name: String\n    \"\"\"\n    The description of the CMDB reference type.\n    \"\"\"\n    description: String\n    \"\"\"\n    The color of the CMDB reference type.\n    \"\"\"\n    color: String\n    \"\"\"\n    The URL of the icon of the CMDB reference type.\n    \"\"\"\n    webUrl: String\n    \"\"\"\n    The object schema ID of the CMDB reference type.\n    \"\"\"\n    objectSchemaId: String\n}\n\n\"\"\"\nRepresents the CMDB object attribute value.\nThe property values in this type will be defined depending on the attribute type.\nE.g. the `referenceObject` property value will only be defined if the attribute type is a reference object type.\n\"\"\"\ntype JiraCmdbObjectAttributeValue {\n    \"\"\"\n    The referenced CMDB object.\n    \"\"\"\n    referencedObject: JiraCmdbObject\n    \"\"\"\n    The user associated with this CMDB object attribute value.\n    \"\"\"\n    user: User\n    \"\"\"\n    The group associated with this CMDB object attribute value.\n    \"\"\"\n    group: JiraGroup\n    \"\"\"\n    The status of this CMDB object attribute value.\n    \"\"\"\n    status: JiraCmdbStatusType\n    \"\"\"\n    The value of this CMDB object attribute value.\n    \"\"\"\n    value: String\n    \"\"\"\n    The display value of this CMDB object attribute value.\n    \"\"\"\n    displayValue: String\n    \"\"\"\n    The search value of this CMDB object attribute value.\n    \"\"\"\n    searchValue: String\n    \"\"\"\n    The additional value of this CMDB object attribute value.\n    \"\"\"\n    additionalValue: String\n}\n\n\"\"\"\nRepresents the CMDB status type.\n\"\"\"\ntype JiraCmdbStatusType {\n    \"\"\"\n    The ID of the CMDB status type.\n    \"\"\"\n    id: String\n    \"\"\"\n    The name of the CMDB status type.\n    \"\"\"\n    name: String\n    \"\"\"\n    The description of the CMDB status type.\n    \"\"\"\n    description: String\n    \"\"\"\n    The category of the CMDB status type.\n    \"\"\"\n    category: Int\n    \"\"\"\n    The object schema ID associated with the CMDB status type.\n    \"\"\"\n    objectSchemaId: String\n}\n\n\"\"\"\nThe connection type for JiraCmdbAttribute.\n\"\"\"\ntype JiraCmdbAttributeConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraCmdbAttributeEdge]\n}\n\n\"\"\"\nAn edge in a JiraCmdbAttribute connection.\n\"\"\"\ntype JiraCmdbAttributeEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraCmdbAttribute\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nThe connection type for JiraCmdbObjectAttributeValue.\n\"\"\"\ntype JiraCmdbObjectAttributeValueConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraCmdbObjectAttributeValueEdge]\n}\n\n\"\"\"\nAn edge in a JiraCmdbObjectAttributeValue connection.\n\"\"\"\ntype JiraCmdbObjectAttributeValueEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraCmdbObjectAttributeValue\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nThe connection type for JiraCmdbObject.\n\"\"\"\ntype JiraCmdbObjectConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraCmdbObjectEdge]\n}\n\n\"\"\"\nAn edge in a JiraCmdbObject connection.\n\"\"\"\ntype JiraCmdbObjectEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraCmdbObject\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\"\"\"\nAn interface shared across all attachment types.\n\"\"\"\ninterface JiraAttachment {\n    \"\"\"\n    Identifier for the attachment.\n    \"\"\"\n    attachmentId: String!\n    \"\"\"\n    User profile of the attachment author.\n    \"\"\"\n    author: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.author.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    \"\"\"\n    Date the attachment was created in seconds since the epoch.\n    \"\"\"\n    created: DateTime!\n    \"\"\"\n    Media Services file id of this Attachment, May be absent if the attachment has not yet been migrated to Media Services.\n    \"\"\"\n    mediaApiFileId: String\n    \"\"\"\n    The mimetype (also called content type) of the attachment. This may be {@code null}.\n    \"\"\"\n    mimeType: String\n    \"\"\"\n    Filename of the attachment.\n    \"\"\"\n    fileName: String\n    \"\"\"\n    Size of the attachment in bytes.\n    \"\"\"\n    fileSize: Long\n    \"\"\"\n    Parent name that this attachment is contained in e.g Issue, Field, Comment, Worklog.\n    \"\"\"\n    parentName: String\n    \"\"\"\n    Parent id that this attachment is contained in.\n    \"\"\"\n    parentId: String\n}\n\n\"\"\"\nRepresents a Jira platform attachment.\n\"\"\"\ntype JiraPlatformAttachment implements JiraAttachment & Node {\n    \"\"\"\n    Global identifier for the attachment\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Identifier for the attachment.\n    \"\"\"\n    attachmentId: String!\n    \"\"\"\n    User profile of the attachment author.\n    \"\"\"\n    author: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.author.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    \"\"\"\n    Date the attachment was created in seconds since the epoch.\n    \"\"\"\n    created: DateTime!\n    \"\"\"\n    Media Services file id of this Attachment, May be absent if the attachment has not yet been migrated to Media Services.\n    \"\"\"\n    mediaApiFileId: String\n    \"\"\"\n    The mimetype (also called content type) of the attachment. This may be {@code null}.\n    \"\"\"\n    mimeType: String\n    \"\"\"\n    Filename of the attachment.\n    \"\"\"\n    fileName: String\n    \"\"\"\n    Size of the attachment in bytes.\n    \"\"\"\n    fileSize: Long\n    \"\"\"\n    Parent name that this attachment is contained in e.g Issue, Field, Comment, Worklog.\n    \"\"\"\n    parentName: String\n    \"\"\"\n    Parent id that this attachment is contained in.\n    \"\"\"\n    parentId: String\n}\n\n\"\"\"\nRepresents an attachment within a JiraServiceManagement project.\n\"\"\"\ntype JiraServiceManagementAttachment implements JiraAttachment & Node {\n    \"\"\"\n    Global identifier for the attachment\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Identifier for the attachment.\n    \"\"\"\n    attachmentId: String!\n    \"\"\"\n    User profile of the attachment author.\n    \"\"\"\n    author: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.author.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    \"\"\"\n    Media Services file id of this Attachment, May be absent if the attachment has not yet been migrated to Media Services.\n    \"\"\"\n    mediaApiFileId: String\n    \"\"\"\n    Date the attachment was created in seconds since the epoch.\n    \"\"\"\n    created: DateTime!\n    \"\"\"\n    The mimetype (also called content type) of the attachment. This may be {@code null}.\n    \"\"\"\n    mimeType: String\n    \"\"\"\n    Filename of the attachment.\n    \"\"\"\n    fileName: String\n    \"\"\"\n    Size of the attachment in bytes.\n    \"\"\"\n    fileSize: Long\n    \"\"\"\n    Parent name that this attachment is contained in e.g Issue, Field, Comment, Worklog.\n    \"\"\"\n    parentName: String\n    \"\"\"\n    Parent id that this attachment is contained in.\n    \"\"\"\n    parentId: String\n    \"\"\"\n    If the parent for the JSM attachment is a comment, this represents the JSM visibility property associated with this comment.\n    \"\"\"\n    parentCommentVisibility: JiraServiceManagementCommentVisibility\n}\n\n\"\"\"\nThe connection type for JiraAttachment.\n\"\"\"\ntype JiraAttachmentConnection {\n    \"\"\"\n    The approximate count of items in the connection.\n    \"\"\"\n    indicativeCount: Int\n    \"\"\"\n    The page info of the current page of results.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraAttachmentEdge]\n}\n\n\"\"\"\nAn edge in a JiraAttachment connection.\n\"\"\"\ntype JiraAttachmentEdge {\n    \"\"\"\n    The node at the the edge.\n    \"\"\"\n    node: JiraAttachment\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\nenum JiraAttachmentsPermissions {\n    \"Allows the user to create atachments on the correspondig Issue.\"\n    CREATE_ATTACHMENTS,\n    \"Allows the user to delete attachments on the corresponding Issue.\"\n    DELETE_OWN_ATTACHMENTS\n}\n\ninput JiraOrderDirection {\n    id: ID\n    #TODO\n}\n\ninput JiraAttachmentsOrderField {\n    id: ID\n    #TODO\n}\n\"\"\"\nRepresents the pair of values (parent & child combination) in a cascading select.\nThis type is used to represent a selected cascading field value on a Jira Issue.\nSince this is 2 level hierarchy, it is not possible to represent the same underlying\ntype for both single cascadingOption and list of cascadingOptions. Thus, we have created different types.\n\"\"\"\ntype JiraCascadingOption {\n    \"\"\"\n    Defines the parent option value.\n    \"\"\"\n    parentOptionValue: JiraOption\n    \"\"\"\n    Defines the selected single child option value for the parent.\n    \"\"\"\n    childOptionValue: JiraOption\n}\n\n\"\"\"\nRepresents the childs options allowed values for a parent option in cascading select operation.\n\"\"\"\ntype JiraCascadingOptions {\n    \"\"\"\n    Defines the parent option value.\n    \"\"\"\n    parentOptionValue: JiraOption\n    \"\"\"\n    Defines all the list of child options available for the parent option.\n    \"\"\"\n    childOptionValues: [JiraOption]\n}\n\n\"\"\"\nRepresents a single option value in a select operation.\n\"\"\"\ntype JiraOption implements Node {\n    \"\"\"\n    Global Identifier of the option.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Identifier of the option.\n    \"\"\"\n    optionId: String!\n    \"\"\"\n    Value of the option.\n    \"\"\"\n    value: String\n    \"\"\"\n    Whether or not the option has been disabled by the user. Disabled options are typically not accessible in the UI.\n    \"\"\"\n    isDisabled: Boolean\n}\n\n\"\"\"\nThe connection type for JiraOption.\n\"\"\"\ntype JiraOptionConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraOptionEdge]\n}\n\n\"\"\"\nAn edge in a JiraOption connection.\n\"\"\"\ntype JiraOptionEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraOption\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nThe connection type for JiraCascadingOptions.\n\"\"\"\ntype JiraCascadingOptionsConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraCascadingOptionsEdge]\n}\n\n\"\"\"\nAn edge in a JiraCascadingOptions connection.\n\"\"\"\ntype JiraCascadingOptionsEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraCascadingOptions\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nAn interface shared across all comment types.\n\"\"\"\ninterface JiraComment {\n    \"\"\"\n    Identifier for the comment.\n    \"\"\"\n    commentId: ID!\n    \"\"\"\n    The browser clickable link of this comment.\n    \"\"\"\n    webUrl: URL\n    \"\"\"\n    User profile of the original comment author.\n    \"\"\"\n    author: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.author.accountId\"}] identifiedBy : \"accountId\" batchSize : 90)\n    \"\"\"\n    User profile of the author performing the comment update.\n    \"\"\"\n    updateAuthor: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.author.accountId\"}] identifiedBy : \"accountId\" batchSize : 90)\n    \"\"\"\n    Comment body rich text.\n    \"\"\"\n    richText: JiraRichText\n    \"\"\"\n    Time of comment creation.\n    \"\"\"\n    created: DateTime!\n    \"\"\"\n    Time of last comment update.\n    \"\"\"\n    updated: DateTime\n    \"\"\"\n    Either the group or the project role associated with this comment, but not both.\n    Null means the permission level is unspecified, i.e. the comment is public.\n    \"\"\"\n    permissionLevel: JiraPermissionLevel\n}\n\n\"\"\"\nRepresents a Jira platform comment.\n\"\"\"\ntype JiraPlatformComment implements JiraComment & Node {\n    \"\"\"\n    Global identifier for the comment\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Identifier for the comment.\n    \"\"\"\n    commentId: ID!\n    \"\"\"\n    The browser clickable link of this comment.\n    \"\"\"\n    webUrl: URL\n    \"\"\"\n    User profile of the original comment author.\n    \"\"\"\n    author: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.author.accountId\"}] identifiedBy : \"accountId\" batchSize : 90)\n    \"\"\"\n    User profile of the author performing the comment update.\n    \"\"\"\n    updateAuthor: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.updateAuthor.accountId\"}] identifiedBy : \"accountId\" batchSize : 90)\n    \"\"\"\n    Comment body rich text.\n    \"\"\"\n    richText: JiraRichText\n    \"\"\"\n    Time of comment creation.\n    \"\"\"\n    created: DateTime!\n    \"\"\"\n    Time of last comment update.\n    \"\"\"\n    updated: DateTime\n    \"\"\"\n    Either the group or the project role associated with this comment, but not both.\n    Null means the permission level is unspecified, i.e. the comment is public.\n    \"\"\"\n    permissionLevel: JiraPermissionLevel\n}\n\n\"\"\"\nRepresents a comment within a JiraServiceManagement project.\n\"\"\"\ntype JiraServiceManagementComment implements JiraComment & Node {\n    \"\"\"\n    Global identifier for the comment\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Identifier for the comment.\n    \"\"\"\n    commentId: ID!\n    \"\"\"\n    The browser clickable link of this comment.\n    \"\"\"\n    webUrl: URL\n    \"\"\"\n    User profile of the original comment author.\n    \"\"\"\n    author: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.author.accountId\"}] identifiedBy : \"accountId\" batchSize : 90)\n    \"\"\"\n    User profile of the author performing the comment update.\n    \"\"\"\n    updateAuthor: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.updateAuthor.accountId\"}] identifiedBy : \"accountId\" batchSize : 90)\n    \"\"\"\n    Comment body rich text.\n    \"\"\"\n    richText: JiraRichText\n    \"\"\"\n    Time of comment creation.\n    \"\"\"\n    created: DateTime!\n    \"\"\"\n    Time of last comment update.\n    \"\"\"\n    updated: DateTime\n    \"\"\"\n    Either the group or the project role associated with this comment, but not both.\n    Null means the permission level is unspecified, i.e. the comment is public.\n    \"\"\"\n    permissionLevel: JiraPermissionLevel\n    \"\"\"\n    The JSM visibility property associated with this comment.\n    \"\"\"\n    visibility: JiraServiceManagementCommentVisibility\n    \"\"\"\n    Indicates whether the comment author can see the request or not.\n    \"\"\"\n    authorCanSeeRequest: Boolean\n}\n\n\"\"\"\nThe connection type for JiraComment.\n\"\"\"\ntype JiraCommentConnection {\n    \"\"\"\n    The approximate count of items in the connection.\n    \"\"\"\n    indicativeCount: Int\n    \"\"\"\n    Information to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraCommentEdge]\n}\n\n\"\"\"\nAn edge in a JiraComment connection.\n\"\"\"\ntype JiraCommentEdge {\n    \"\"\"\n    The node at the the edge.\n    \"\"\"\n    node: JiraComment\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\nextend type JiraQuery {\n    \"\"\"\n    Retrieves application properties for the given instance.\n\n    Returns an array containing application properties for each of the provided keys. If a matching application property\n    cannot be found, then no entry is added to the array for that key.\n\n    A maximum of 50 keys can be provided. If the limit is exceeded then then an error may be returned.\n    \"\"\"\n    applicationPropertiesByKey(cloudId: ID! @CloudID, keys: [String!]!): [JiraApplicationProperty!] @beta(name: \"JiraApplicationProperties\")\n}\n\n\"\"\"\nJira application properties is effectively a key/value store scoped to a Jira instance. A JiraApplicationProperty\nrepresents one of these key/value pairs, along with associated metadata about the property.\n\"\"\"\ntype JiraApplicationProperty implements Node {\n    \"\"\"\n    Globally unique identifier\n    \"\"\"\n    id: ID!,\n\n    \"\"\"\n    The unique key of the application property\n    \"\"\"\n    key: String!,\n\n    \"\"\"\n    Although all application properties are stored as strings, they notionally have a type (e.g. boolean, int, enum,\n    string). The type can be anything (for example, there is even a colour type), and there may be associated validation\n    on the server based on the property's type.\n    \"\"\"\n    type: String!,\n\n    \"\"\"\n    The value of the application property, encoded as a string. If no value is stored the default value will\n    be returned.\n    \"\"\"\n    value: String!,\n\n    \"\"\"\n    The default value which will be returned if there is no value stored. This might be useful for UIs which allow a\n    user to 'reset' an application property to the default value.\n    \"\"\"\n    defaultValue: String!,\n\n    \"\"\"\n    The human readable name for the application property. If no human readable name has been defined then the key will\n    be returned.\n    \"\"\"\n    name: String!,\n\n    \"\"\"\n    The human readable description for the application property\n    \"\"\"\n    description: String,\n\n    \"\"\"\n    Example is mostly used for application properties which store some sort of format pattern (e.g. date formats).\n    Example will contain an example string formatted according to the format stored in the property.\n    \"\"\"\n    example: String,\n\n    \"\"\"\n    If the type is 'enum', then allowedValues may optionally contain a list of values which are valid for this property.\n    Otherwise the value will be null.\n    \"\"\"\n    allowedValues: [String!],\n\n    \"\"\"\n    True if the user is allowed to edit the property, false otherwise\n    \"\"\"\n    isEditable: Boolean!\n}\n\nextend type JiraMutation {\n    \"\"\"\n    Sets application properties for the given instance.\n\n    Takes a list of key/value pairs to be updated, and returns a summary of the mutation result.\n    \"\"\"\n    setApplicationProperties(cloudId: ID! @CloudID, input: [JiraSetApplicationPropertyInput!]!): JiraSetApplicationPropertiesPayload\n}\n\n\"\"\"\nThe key of the property you want to update, and the new value you want to set it to\n\"\"\"\ninput JiraSetApplicationPropertyInput {\n    key: String!,\n    value: String!\n}\n\ntype JiraSetApplicationPropertiesPayload implements Payload {\n    \"\"\"\n    True if the mutation was successfully applied. False if the mutation was either partially successful or if the\n    mutation failed completely.\n    \"\"\"\n    success: Boolean!,\n\n    \"\"\"\n    A list of errors which encountered during the mutation\n    \"\"\"\n    errors: [MutationError!],\n\n    \"\"\"\n    A list of application properties which were successfully updated\n    \"\"\"\n    applicationProperties: [JiraApplicationProperty!]!\n}\n\"\"\"\nRepresents the status field of an issue.\n\"\"\"\ntype JiraStatus implements Node {\n  \"\"\"\n  Global identifier for the Status.\n  \"\"\"\n  id: ID!\n  \"\"\"\n  Status id in the digital format.\n  \"\"\"\n  statusId: String!\n  \"\"\"\n  Name of status. E.g. Backlog, Selected for Development, In Progress, Done.\n  \"\"\"\n  name: String\n  \"\"\"\n  Optional description of the status. E.g. \"This issue is actively being worked on by the assignee\".\n  \"\"\"\n  description: String\n  \"\"\"\n  Represents a group of Jira statuses.\n  \"\"\"\n  statusCategory: JiraStatusCategory\n}\n\n\"\"\"\nRepresents the category of a status.\n\"\"\"\ntype JiraStatusCategory implements Node {\n  \"\"\"\n  Global identifier for the Status Category.\n  \"\"\"\n  id: ID!\n  \"\"\"\n  Status category id in the digital format.\n  \"\"\"\n  statusCategoryId: String!\n  \"\"\"\n  A unique key to identify this status category. E.g. new, indeterminate, done.\n  \"\"\"\n  key: String\n  \"\"\"\n  Name of status category. E.g. New, In Progress, Complete.\n  \"\"\"\n  name: String\n  \"\"\"\n  Color of status category.\n  \"\"\"\n  colorName: JiraStatusCategoryColor\n}\n\n\"\"\"\nColor of the status category.\n\"\"\"\nenum JiraStatusCategoryColor {\n  \"\"\"\n  #707070\n  \"\"\"\n  MEDIUM_GRAY\n  \"\"\"\n  #14892c\n  \"\"\"\n  GREEN\n  \"\"\"\n  #f6c342\n  \"\"\"\n  YELLOW\n  \"\"\"\n  #815b3a\n  \"\"\"\n  BROWN\n  \"\"\"\n  #d04437\n  \"\"\"\n  WARM_RED\n  \"\"\"\n  #4a6785\n  \"\"\"\n  BLUE_GRAY\n}\n\"\"\"\nRepresents an approval that is completed.\n\"\"\"\ntype JiraServiceManagementCompletedApproval implements Node {\n    \"\"\"\n    ID of the completed approval.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Name of the approval that has been provided.\n    \"\"\"\n    name: String\n    \"\"\"\n    Outcome of the approval, based on the approvals provided by all approvers.\n    \"\"\"\n    finalDecision: JiraServiceManagementApprovalDecisionResponseType\n    \"\"\"\n    Detailed list of the users who responded to the approval.\n    \"\"\"\n    approvers: JiraServiceManagementApproverConnection\n    \"\"\"\n    Date the approval was created.\n    \"\"\"\n    createdDate: DateTime\n    \"\"\"\n    Date the approval was completed.\n    \"\"\"\n    completedDate: DateTime\n    \"\"\"\n    Status details in which the approval is applicable.\n    \"\"\"\n    status: JiraServiceManagementApprovalStatus\n}\n\n\"\"\"\nThe connection type for JiraServiceManagementCompletedApproval.\n\"\"\"\ntype JiraServiceManagementCompletedApprovalConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraServiceManagementCompletedApprovalEdge]\n}\n\n\"\"\"\nAn edge in a JiraServiceManagementCompletedApproval connection.\n\"\"\"\ntype JiraServiceManagementCompletedApprovalEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraServiceManagementCompletedApproval\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nThe connection type for JiraServiceManagementApprover.\n\"\"\"\ntype JiraServiceManagementApproverConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraServiceManagementApproverEdge]\n}\n\n\"\"\"\nAn edge in a JiraServiceManagementApprover connection.\n\"\"\"\ntype JiraServiceManagementApproverEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraServiceManagementApprover\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nRepresents an approval that is still active.\n\"\"\"\ntype JiraServiceManagementActiveApproval implements Node {\n    \"\"\"\n    ID of the active approval.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Name of the approval being sought.\n    \"\"\"\n    name: String\n    \"\"\"\n    Outcome of the approval, based on the approvals provided by all approvers.\n    \"\"\"\n    finalDecision: JiraServiceManagementApprovalDecisionResponseType\n    \"\"\"\n    Detailed list of the users who responded to the approval with a decision.\n    \"\"\"\n    approvers: JiraServiceManagementApproverConnection\n    \"\"\"\n    Detailed list of the users who are excluded to approve the approval.\n    \"\"\"\n    excludedApprovers: JiraUserConnection\n    \"\"\"\n    Indicates whether the user making the request is one of the approvers and can respond to the approval (true) or not (false).\n    \"\"\"\n    canAnswerApproval: Boolean\n    \"\"\"\n    List of the users' decisions. Does not include undecided users.\n    \"\"\"\n    decisions: JiraServiceManagementDecisionConnection\n    \"\"\"\n    Date the approval was created.\n    \"\"\"\n    createdDate: DateTime\n    \"\"\"\n    Configurations of the approval including the approval condition and approvers configuration.\n    There is a maximum limit of how many configurations an active approval can have.\n    \"\"\"\n    configurations: [JiraServiceManagementApprovalConfiguration]\n    \"\"\"\n    Status details of the approval.\n    \"\"\"\n    status: JiraServiceManagementApprovalStatus\n    \"\"\"\n    Approver principals can be a connection of users or groups that may decide on an approval.\n    The list includes undecided members.\n    \"\"\"\n    approverPrincipals: JiraServiceManagementApproverPrincipalConnection\n    \"\"\"\n    The number of approvals needed to complete.\n    \"\"\"\n    pendingApprovalCount: Int\n}\n\n\"\"\"\nThe connection type for JiraServiceManagementDecision.\n\"\"\"\ntype JiraServiceManagementDecisionConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraServiceManagementDecisionEdge]\n}\n\n\"\"\"\nAn edge in a JiraServiceManagementDecision connection.\n\"\"\"\ntype JiraServiceManagementDecisionEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraServiceManagementDecision\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nThe connection type for JiraServiceManagementUserApproverPrincipal.\n\"\"\"\ntype JiraServiceManagementApproverPrincipalConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraServiceManagementApproverPrincipalEdge]\n}\n\n\"\"\"\nAn edge in a JiraServiceManagementApproverPrincipal connection.\n\"\"\"\ntype JiraServiceManagementApproverPrincipalEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraServiceManagementApproverPrincipal\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nApprover principals are either an user, or users or groups that may decide on an approval.\n\"\"\"\nunion JiraServiceManagementApproverPrincipal = JiraServiceManagementUserApproverPrincipal | JiraServiceManagementUserApproverPrincipalConnection | JiraServiceManagementGroupApproverPrincipalConnection\n\n\"\"\"\nThe connection type for JiraServiceManagementUserApproverPrincipal.\n\"\"\"\ntype JiraServiceManagementUserApproverPrincipalConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraServiceManagementUserApproverPrincipalEdge]\n}\n\n\"\"\"\nAn edge in a JiraServiceManagementUserApproverPrincipal connection.\n\"\"\"\ntype JiraServiceManagementUserApproverPrincipalEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraServiceManagementUserApproverPrincipal\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nContains information about the approvers when approver is a user.\n\"\"\"\ntype JiraServiceManagementUserApproverPrincipal {\n    \"\"\"\n    A approver principal who's a user type\n    \"\"\"\n    user: User @hydrated(service: \"identity\" field: \"users\", arguments : [{ name:\"accountIds\" value:\"$source.user.accountId\"}], identifiedBy : \"accountId\", batchSize : 90 )\n    \"\"\"\n    URL for the principal.\n    \"\"\"\n    jiraRest: URL\n}\n\"\"\"\nThe user and decision that approved the approval.\n\"\"\"\ntype JiraServiceManagementApprover {\n    \"\"\"\n    Details of the User who is providing approval.\n    \"\"\"\n    approver: User @hydrated(service: \"identity\" field: \"users\", arguments : [{ name:\"accountIds\" value:\"$source.approver.accountId\"}], identifiedBy : \"accountId\", batchSize : 90 )\n    \"\"\"\n    Decision made by the approver.\n    \"\"\"\n    approverDecision: JiraServiceManagementApprovalDecisionResponseType\n}\n\n\"\"\"\nRepresents the user and decision details.\n\"\"\"\ntype JiraServiceManagementDecision {\n    \"\"\"\n    The user providing a decision.\n    \"\"\"\n    approver: User @hydrated(service: \"identity\" field: \"users\", arguments : [{ name:\"accountIds\" value:\"$source.approver.accountId\"}], identifiedBy : \"accountId\", batchSize : 90 )\n    \"\"\"\n    The decision made by the approver.\n    \"\"\"\n    approverDecision: JiraServiceManagementApprovalDecisionResponseType\n}\n\n\"\"\"\nRepresents the possible decisions that can be made by an approver.\n\"\"\"\nenum JiraServiceManagementApprovalDecisionResponseType {\n    \"\"\"\n    Indicates that the decision is approved by the approver.\n    \"\"\"\n    approved\n    \"\"\"\n    Indicates that the decision is declined by the approver.\n    \"\"\"\n    declined\n    \"\"\"\n    Indicates that the decision is pending by the approver.\n    \"\"\"\n    pending\n}\n\n\"\"\"\nRepresents the configuration details of an approval.\n\"\"\"\ntype JiraServiceManagementApprovalConfiguration {\n    \"\"\"\n    Contains information about approvers configuration.\n    There is a maximum number of fields that can be set for the approvers configuration.\n    \"\"\"\n    approversConfigurations: [JiraServiceManagementApproversConfiguration]\n    \"\"\"\n    Contains information about approval condition.\n    \"\"\"\n    condition: JiraServiceManagementApprovalCondition\n}\n\n\"\"\"\nRepresents the configuration details of the users providing approval.\n\"\"\"\ntype JiraServiceManagementApproversConfiguration {\n    \"\"\"\n    Approvers configuration type. E.g. custom_field.\n    \"\"\"\n    type: String\n    \"\"\"\n    The field's name configured for the approvers. Only set for type \"field\".\n    \"\"\"\n    fieldName: String\n    \"\"\"\n    The field's id configured for the approvers.\n    \"\"\"\n    fieldId: String\n}\n\n\"\"\"\nRepresents the details of an approval condition.\n\"\"\"\ntype JiraServiceManagementApprovalCondition {\n    \"\"\"\n    Condition type for approval.\n    \"\"\"\n    type: String\n    \"\"\"\n    Condition value for approval.\n    \"\"\"\n    value: String\n}\n\n\"\"\"\nThe connection type for JiraServiceManagementGroupApproverPrincipal.\n\"\"\"\ntype JiraServiceManagementGroupApproverPrincipalConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraServiceManagementGroupApproverPrincipalEdge]\n}\n\n\"\"\"\nAn edge in a JiraServiceManagementGroupApproverPrincipal connection.\n\"\"\"\ntype JiraServiceManagementGroupApproverPrincipalEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraServiceManagementGroupApproverPrincipal\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nContains information about the approvers when approver is a group.\n\"\"\"\ntype JiraServiceManagementGroupApproverPrincipal {\n    \"\"\"\n    A group identifier.\n    Note: Group identifiers are nullable.\n    \"\"\"\n    groupId: String\n    \"\"\"\n    Display name for a group.\n    \"\"\"\n    name: String\n    \"\"\"\n    This contains the number of members.\n    \"\"\"\n    memberCount: Int\n    \"\"\"\n    This contains the number of members that have approved a decision.\n    \"\"\"\n    approvedCount: Int\n}\n\n\"\"\"\nRepresents details of the approval status.\n\"\"\"\ntype JiraServiceManagementApprovalStatus {\n    \"\"\"\n    Status id of approval.\n    \"\"\"\n    id: String\n    \"\"\"\n    Status name of approval. E.g. Waiting for approval.\n    \"\"\"\n    name: String\n    \"\"\"\n    Status category Id of approval.\n    \"\"\"\n    categoryId: String\n}\n\"\"\"\nRepresents the votes information of an Issue.\n\"\"\"\ntype JiraVote {\n    \"\"\"\n    Indicates whether the current user has voted for this Issue.\n    \"\"\"\n    hasVoted: Boolean\n    \"\"\"\n    Count of users who have voted for this Issue.\n    \"\"\"\n    count: Long\n}\nextend type JiraQuery {\n    \"\"\"\n    Returns an Issue by the Issue Key and Jira instance Cloud ID.\n    \"\"\"\n    issueByKey(\n      key: String!\n      cloudId: ID! @CloudID\n    ): JiraIssue @beta(name: \"JiraIssue\")\n\n    \"\"\"\n    Returns an Issue by the Issue ID and Jira instance Cloud ID.\n    \"\"\"\n    issueById(\n        id: ID! @ARI(type: \"issue\", owner: \"jira\")\n    ): JiraIssue @beta(name: \"JiraIssue\")\n\n    \"\"\"\n    Returns Screen Id by the Issue ID.\n    \"\"\"\n    screenIdByIssueId(\n           issueId: ID!\n    ): Long\n}\n\"\"\"\nRepresents the rich text format of a rich text field.\n\"\"\"\ntype JiraRichText {\n    \"\"\"\n    Plain text version of the text.\n    \"\"\"\n    plainText: String\n    \"\"\"\n    Text in Atlassian Document Format.\n    \"\"\"\n    adfValue: JiraADF\n    \"\"\"\n    Text in wiki format.\n    \"\"\"\n    wikiValue: String\n}\n\n\"\"\"\nRepresents the Atlassian Document Format content in JSON format.\n\"\"\"\ntype JiraADF {\n    \"\"\"\n    The content of ADF in JSON.\n    \"\"\"\n    json: JSON\n}\n\"\"\"\nRepresents the sprint field of an issue.\n\"\"\"\ntype JiraSprint implements Node {\n    \"\"\"\n    Global identifier for the sprint.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Sprint id in the digital format.\n    \"\"\"\n    sprintId: String!\n    \"\"\"\n    Sprint name.\n    \"\"\"\n    name: String\n    \"\"\"\n    Current state of the sprint.\n    \"\"\"\n    state: JiraSprintState\n    \"\"\"\n    The board name that the sprint belongs to.\n    \"\"\"\n    boardName: String\n    \"\"\"\n    Start date of the sprint.\n    \"\"\"\n    startDate: DateTime\n    \"\"\"\n    End date of the sprint.\n    \"\"\"\n    endDate: DateTime\n}\n\n\"\"\"\nRepresents the state of the sprint.\n\"\"\"\nenum JiraSprintState {\n    \"\"\"\n    The sprint is in progress.\n    \"\"\"\n    ACTIVE\n    \"\"\"\n    The sprint hasn't been started yet.\n    \"\"\"\n    FUTURE\n    \"\"\"\n    The sprint has been completed.\n    \"\"\"\n    CLOSED\n}\n\n\"\"\"\nThe connection type for JiraSprint.\n\"\"\"\ntype JiraSprintConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraSprintEdge]\n}\n\n\"\"\"\nAn edge in a JiraSprint connection.\n\"\"\"\ntype JiraSprintEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraSprint\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nRepresents a single option value for an asset field.\n\"\"\"\ntype JiraAsset {\n    \"\"\"\n    The app key, which should be the Connect app key.\n    This parameter is used to scope the originId.\n    \"\"\"\n    appKey: String\n    \"\"\"\n    The identifier of an asset.\n    This is the same identifier for the asset in its origin (external) system.\n    \"\"\"\n    originId: String\n    \"\"\"\n    The appKey + originId separated by a forward slash.\n    \"\"\"\n    serializedOrigin: String\n    \"\"\"\n    The appKey + originId separated by a forward slash.\n    \"\"\"\n    value: String\n}\n\n\"\"\"\nThe connection type for JiraAsset.\n\"\"\"\ntype JiraAssetConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraAssetEdge]\n}\n\n\"\"\"\nAn edge in a JiraAsset connection.\n\"\"\"\ntype JiraAssetEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraAsset\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\"\"\"\nRepresents the Jira flag.\n\"\"\"\ntype JiraFlag {\n    \"\"\"\n    Indicates whether the issue is flagged or not.\n    \"\"\"\n    isFlagged: Boolean\n}\n\"\"\"\nRepresents the watches information.\n\"\"\"\ntype JiraWatch {\n    \"\"\"\n    Indicates whether the current user is watching this issue.\n    \"\"\"\n    isWatching: Boolean\n    \"\"\"\n    Count of users who are watching this issue.\n    \"\"\"\n    count: Long\n}\"\"\"\nRepresents the resolution field of an issue.\n\"\"\"\ntype JiraResolution implements Node {\n    \"\"\"\n    Global identifier representing the resolution id.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Resolution Id in the digital format.\n    \"\"\"\n    resolutionId: String!\n    \"\"\"\n    Resolution name.\n    \"\"\"\n    name: String\n    \"\"\"\n    Resolution description.\n    \"\"\"\n    description: String\n}\n\n\"\"\"\nThe connection type for JiraResolution.\n\"\"\"\ntype JiraResolutionConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraResolutionEdge]\n}\n\n\"\"\"\nAn edge in a JiraResolution connection.\n\"\"\"\ntype JiraResolutionEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraResolution\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nJira color that displays on a field.\n\"\"\"\ntype JiraColor {\n    \"\"\"\n    Global identifier for the color.\n    \"\"\"\n    id: ID\n    \"\"\"\n    The key associated with the color based on the field type (issue color, epic color).\n    \"\"\"\n    colorKey: String\n}\n\"\"\"\nRepresents an Atlassian team in Jira.\n\"\"\"\ntype JiraAtlassianTeam {\n    \"\"\"\n    The UUID of team.\n    \"\"\"\n    teamId: String\n    \"\"\"\n    The name of the team.\n    \"\"\"\n    name: String\n    \"\"\"\n    The avatar of the team.\n    \"\"\"\n    avatar: JiraAvatar\n}\n\n\"\"\"\nThe connection type for JiraAtlassianTeam.\n\"\"\"\ntype JiraAtlassianTeamConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraAtlassianTeamEdge]\n}\n\n\"\"\"\nAn edge in a JiraAtlassianTeam connection.\n\"\"\"\ntype JiraAtlassianTeamEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraAtlassianTeam\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nRequests the request type structure on an Issue.\n\"\"\"\ntype JiraServiceManagementRequestType implements Node {\n    \"\"\"\n    Global identifier representing the request type id.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Identifier for the request type.\n    \"\"\"\n    requestTypeId: Long!\n    \"\"\"\n    Name of the request type.\n    \"\"\"\n    name: String\n    \"\"\"\n    A deprecated unique identifier string for Request Types.\n    It is still necessary due to the lack of request-type-id in critical parts of JiraServiceManagement backend.\n    \"\"\"\n    key: String @deprecated(reason: \"The `key` field is deprecated. Please use the `requestTypeId` instead.\")\n    \"\"\"\n    Description of the request type if applicable.\n    \"\"\"\n    description: String\n    \"\"\"\n    Help text for the request type.\n    \"\"\"\n    helpText: String\n    \"\"\"\n    Issue type to which request type belongs to.\n    \"\"\"\n    issueType: JiraIssueType\n    \"\"\"\n    Id of the portal that this request type belongs to.\n    \"\"\"\n    portalId: String\n    \"\"\"\n    Avatar for the request type.\n    \"\"\"\n    avatar: JiraAvatar\n    \"\"\"\n    Request type practice. E.g. incidents, service_request.\n    \"\"\"\n    practices: [JiraServiceManagementRequestTypePractice]\n}\n\n\"\"\"\nDefines grouping of the request types,currently only applicable for JiraServiceManagement ITSM projects.\n\"\"\"\ntype JiraServiceManagementRequestTypePractice {\n    \"\"\"\n    Practice in which the request type is categorized.\n    \"\"\"\n    key: JiraServiceManagementPractice\n}\n\n\"\"\"\nITSM project practice categorization.\n\"\"\"\nenum JiraServiceManagementPractice {\n    \"\"\"\n    Manage work across teams with one platform so the employees and customers quickly get the help they need.\n    \"\"\"\n    SERVICE_REQUEST\n    \"\"\"\n    Bring the development and IT operations teams together to rapidly respond to, resolve, and continuously learn from incidents.\n    \"\"\"\n    INCIDENT_MANAGEMENT\n    \"\"\"\n    Group incidents to problems, fast-track root cause analysis, and record workarounds to minimize the impact of incidents.\n    \"\"\"\n    PROBLEM_MANAGEMENT\n    \"\"\"\n    Empower the IT operations teams with richer contextual information around changes from software development tools so they can make better decisions and minimize risk.\n    \"\"\"\n    CHANGE_MANAGEMENT\n}\n\n\"\"\"\nThe connection type for JiraServiceManagementRequestType.\n\"\"\"\ntype JiraServiceManagementRequestTypeConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraServiceManagementRequestTypeEdge]\n}\n\n\"\"\"\nAn edge in a JiraServiceManagementIssueType connection.\n\"\"\"\ntype JiraServiceManagementRequestTypeEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraServiceManagementRequestType\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nRepresents the JSM feedback rating.\n\"\"\"\ntype JiraServiceManagementFeedback {\n    \"\"\"\n    Represents the integer rating value available on the issue.\n    \"\"\"\n    rating: Int\n}\n\"\"\"\nA permission scheme is a collection of permission grants.\n\"\"\"\ntype JiraPermissionScheme implements Node {\n    \"The ARI of the permission scheme.\"\n    id: ID!\n    \"The display name of the permission scheme.\"\n    name: String!\n    \"The description of the permission scheme.\"\n    description: String\n}\n\n\"\"\"\nThe project permission in Jira and it is scoped to projects.\n\"\"\"\ntype JiraProjectPermission {\n    \"The unique key of the permission.\"\n    key: String!\n    \"The display name of the permission.\"\n    name: String!\n    \"The description of the permission.\"\n    description: String!\n    \"The category of the permission.\"\n    type: JiraProjectPermissionCategory!\n}\n\n\"\"\"\nThe category of the project permission.\nThe category information is typically seen in the permission scheme Admin UI.\nIt is used to group the project permissions in general and available for connect app developers when registering new project permissions.\n\"\"\"\ntype JiraProjectPermissionCategory {\n    \"The unique key of the permission category.\"\n    key: JiraProjectPermissionCategoryEnum!\n    \"The display name of the permission category.\"\n    name: String!\n}\n\n\"\"\"\nThe category of the project permission.\nIt represents the logical grouping of the project permissions.\n\"\"\"\nenum JiraProjectPermissionCategoryEnum {\n    \"Represents one or more permissions applicable at project level such as project administration, view project information, and manage sprints.\"\n    PROJECTS\n    \"Represents one or more permissions applicable at issue level to manage operations such as create, delete, edit, and transition.\"\n    ISSUES\n    \"Represents one or more permissions to manage watchers and voters of an issue.\"\n    VOTERS_AND_WATCHERS\n    \"Represents one or more permissions to manage issue comments such as add, delete and edit.\"\n    COMMENTS\n    \"Represents one or more permissions to manage issue attacments such as create and delete.\"\n    ATTACHMENTS\n    \"Represents one or more permissions to manage worklogs, time tracking for billing purpose in some cases.\"\n    TIME_TRACKING\n    \"Represents one or more permissions representing default category if not any other existing category.\"\n    OTHER\n}\n\n\"\"\"\nThe unique key of the grant type such as PROJECT_ROLE.\n\"\"\"\ntype JiraGrantTypeKey {\n    \"The key to identify the grant type such as PROJECT_ROLE.\"\n    key: JiraGrantTypeKeyEnum!\n    \"The display name of the grant type key such as Project Role.\"\n    name: String!\n}\n\n\"\"\"\nThe grant type key enum represents all the possible grant types available in Jira.\nA grant type may take an optional parameter value.\nFor example: PROJECT_ROLE grant type takes project role id as parameter. And, PROJECT_LEAD grant type do not.\n\nThe actual ARI formats are documented on the various concrete grant type values.\n\"\"\"\nenum JiraGrantTypeKeyEnum {\n    \"\"\"\n    A role that user/group can play in a project.\n    It takes project role as parameter.\n    \"\"\"\n    PROJECT_ROLE\n\n    \"\"\"\n    A application role is used to grant a user/group access to the application group.\n    It takes application role as parameter.\n    \"\"\"\n    APPLICATION_ROLE\n\n    \"\"\"\n    An individual user who can be given the access to work on one or more projects.\n    It takes user account id as parameter.\n    \"\"\"\n    USER\n\n    \"\"\"\n    A group is a collection of users who can be given access together.\n    It represents group in the organization's user base.\n    It takes group id as parameter.\n    \"\"\"\n    GROUP\n\n    \"\"\"\n    A multi user picker custom field.\n    It takes multi user picker custom field id as parameter.\n    \"\"\"\n    MULTI_USER_PICKER\n\n    \"\"\"\n    A multi group picker custom field.\n    It takes multi group picker custom field id as parameter.\n    \"\"\"\n    MULTI_GROUP_PICKER\n\n    \"\"\"\n    The grant type defines what the customers can do from the portal view.\n    It takes no parameter.\n    \"\"\"\n    SERVICE_PROJECT_CUSTOMER_PORTAL_ACCESS\n\n    \"\"\"\n    The issue reporter role.\n    It takes platform defined 'reporter' as parameter to represent the issue field value.\n    \"\"\"\n    REPORTER\n\n    \"\"\"\n    The project lead role.\n    It takes no parameter.\n    \"\"\"\n    PROJECT_LEAD\n\n    \"\"\"\n    The issue assignee role.\n    It takes platform defined 'assignee' as parameter to represent the issue field value.\n    \"\"\"\n    ASSIGNEE\n\n    \"\"\"\n    The anonymous access represents the public access without logging in.\n    It takes no parameter.\n    \"\"\"\n    ANONYMOUS_ACCESS\n\n    \"\"\"\n    Any user who has the product access.\n    It takes no parameter.\n    \"\"\"\n    ANY_LOGGEDIN_USER_APPLICATION_ROLE\n}\n\n\"\"\"\nThe default grant type with only id and name to return data for grant types such as PROJECT_LEAD, APPLICATION_ROLE,\nANY_LOGGEDIN_USER_APPLICATION_ROLE, ANONYMOUS_ACCESS, SERVICE_PROJECT_CUSTOMER_PORTAL_ACCESS\n\"\"\"\ntype JiraDefaultGrantTypeValue implements Node {\n    \"\"\"\n    The ARI to represent the default grant type value.\n    For example:\n    PROJECT_LEAD ari - ari:cloud:jira:a2520569-493f-45bc-807b-54b02bc724d1:role/project-lead/activation/bd0c43a9-a23a-4302-8ffa-ca04bde7c747/project/f67c73a8-545e-455b-a6bd-3d53cb7e0524\n    APPLICATION_ROLE ari for JSM - ari:cloud:jira-servicedesk::role/123\n    ANY_LOGGEDIN_USER_APPLICATION_ROLE ari - ari:cloud:jira::role/product/member\n    ANONYMOUS_ACCESS ari - ari:cloud:identity::user/unidentified\n    \"\"\"\n    id: ID!\n    \"The display name of the grant type value such as GROUP.\"\n    name: String!\n}\n\n\"\"\"\nThe USER grant type value where user data is provided by identity service.\n\"\"\"\ntype JiraUserGrantTypeValue implements Node {\n    \"\"\"\n    The ARI to represent the grant user type value.\n    For example: ari:cloud:identity::user/123\n    \"\"\"\n    id: ID!\n    \"The GDPR compliant user profile information.\"\n    user: User @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.user.accountId\"}] identifiedBy : \"accountId\" batchSize: 90)\n}\n\n\"\"\"\nThe GROUP grant type value where group data is provided by identity service.\n\"\"\"\ntype JiraGroupGrantTypeValue implements Node {\n    \"\"\"\n    The ARI to represent the group grant type value.\n    For example: ari:cloud:identity::group/123\n    \"\"\"\n    id: ID!\n    \"The group information such as name, and description.\"\n    group: JiraGroup!\n}\n\n\"\"\"\nThe project role grant type value having the project role information.\n\"\"\"\ntype JiraProjectRoleGrantTypeValue implements Node {\n    \"\"\"\n    The ARI to represent the project role grant type value.\n    For example: ari:cloud:jira:a2520569-493f-45bc-807b-54b02bc724d1:role/project-role/activation/bd0c43a9-a23a-4302-8ffa-ca04bde7c747/projectrole/b434089d-7f6d-476b-884b-7811661f91d2\n    \"\"\"\n    id: ID!\n    \"The project role information such as name, description.\"\n    role: JiraRole!\n}\n\n\"\"\"\nThe issue field grant type used to represent field of an issue.\nGrant types such as ASSIGNEE, REPORTER, MULTI USER PICKER, and MULTI GROUP PICKER use this grant type value.\n\"\"\"\ntype JiraIssueFieldGrantTypeValue implements Node {\n    \"\"\"\n    The ARI to represent the issue field grant type value.\n    For example:\n    assignee field ARI is ari:cloud:jira:a2520569-493f-45bc-807b-54b02bc724d1:issuefieldvalue/10000/assignee\n    reporter field ARI is ari:cloud:jira:a2520569-493f-45bc-807b-54b02bc724d1:issuefieldvalue/10000/reporter\n    multi user picker field ARI is ari:cloud:jira:a2520569-493f-45bc-807b-54b02bc724d1:issuefieldvalue/10000/customfield_10126\n    \"\"\"\n    id: ID!\n    \"The issue field information such as name, description, field id.\"\n    field: JiraIssueField!\n}\n\"\"\"\nContains either the group or the projectRole associated with a comment/worklog, but not both.\nIf both are null, then the permission level is unspecified and the comment/worklog is public.\n\"\"\"\ntype JiraPermissionLevel {\n    \"\"\"\n    The Jira Group associated with the comment/worklog.\n    \"\"\"\n    group: JiraGroup\n    \"\"\"\n    The Jira ProjectRole associated with the comment/worklog.\n    \"\"\"\n    role: JiraRole\n}\n# Copied over from jira-project, will extend this type after deprecating rest bridge project\n\n\"\"\"\nRepresents a Jira project.\n\"\"\"\ntype JiraProject implements Node {\n    \"\"\"\n    Global identifier for the project.\n    \"\"\"\n    id: ID! @ARI(type: \"project\", owner: \"jira\")\n    \"\"\"\n    The key of the project.\n    \"\"\"\n    key: String!\n    \"\"\"\n    The project id of the project. e.g. 10000. Temporarily needed to support interoperability with REST.\n    \"\"\"\n    projectId: String\n    \"\"\"\n    The name of the project.\n    \"\"\"\n    name: String!\n    \"\"\"\n    The cloudId associated with the project.\n    \"\"\"\n    cloudId: ID! @CloudID\n    \"\"\"\n    The description of the project.\n    \"\"\"\n    description: String\n    \"\"\"\n    The ID of the project lead.\n    \"\"\"\n    leadId: ID\n    \"\"\"\n    The category of the project.\n    \"\"\"\n    category: JiraProjectCategory\n    \"\"\"\n    The avatar of the project.\n    \"\"\"\n    avatar: JiraAvatar\n    \"\"\"\n    The URL associated with the project.\n    \"\"\"\n    projectUrl: String\n    \"\"\"\n    Specifies the type to which project belongs to ex:- software, service_desk, business etc.\n    \"\"\"\n    projectType: JiraProjectType\n    \"\"\"\n    Specifies if the project style is team or company managed.\n    The use of this field is discouraged. This field is subject to change, deviations between project styles are discouraged.\n    This field will change and/or be removed going forward as this data becomes available.\n    \"\"\"\n    projectStyle: JiraProjectStyle @beta(name: \"projectStyle\") @deprecated(reason: \"The `projectStyle` is a deprecated field.\")\n    \"\"\"\n    Specifies the status of the project e.g. archived, deleted.\n    \"\"\"\n    status: JiraProjectStatus\n}\n\n\"\"\"\n\"\"\"\ntype JiraProjectCategory implements Node {\n    \"\"\"\n    Global id of this project category.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Display name of the Project category.\n    \"\"\"\n    name: String\n    \"\"\"\n    Description of the Project category.\n    \"\"\"\n    description: String\n}\n\n\"\"\"\nThe connection type for JiraProject.\n\"\"\"\ntype JiraProjectConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraProjectEdge]\n}\n\n\"\"\"\nAn edge in a JiraProject connection.\n\"\"\"\ntype JiraProjectEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraProject\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nJira Project types.\n\"\"\"\nenum JiraProjectType {\n    \"\"\"\n    A service desk project.\n    \"\"\"\n    SERVICE_DESK\n    \"\"\"\n    A business project.\n    \"\"\"\n    BUSINESS\n    \"\"\"\n    A software project.\n    \"\"\"\n    SOFTWARE\n}\n\n\"\"\"\nJira Project statuses.\n\"\"\"\nenum JiraProjectStatus {\n    \"\"\"\n    An active project.\n    \"\"\"\n    ACTIVE\n    \"\"\"\n    An archived project.\n    \"\"\"\n    ARCHIVED\n    \"\"\"\n    A deleted project.\n    \"\"\"\n    DELETED\n}\n\n\"\"\"\nJira Project Styles.\n\"\"\"\nenum JiraProjectStyle {\n    \"\"\"\n    A team-managed project.\n    \"\"\"\n    TEAM_MANAGED_PROJECT\n    \"\"\"\n    A company-managed project.\n    \"\"\"\n    COMPANY_MANAGED_PROJECT\n}type JiraIssueLinkTypeRelation implements Node {\n    \"Global identifier for the Issue Link Type Relation.\"\n    id: ID!\n    \"\"\"\n    Represents the description of the relation by which this link is identified.\n    This can be the inward or outward description of an IssueLinkType.\n    E.g. blocks, is blocked by, duplicates, is duplicated by, clones, is cloned by.\n    \"\"\"\n    relationName: String\n    \"\"\"\n    Represents the IssueLinkType id to which this type belongs to.\n    \"\"\"\n    linkTypeId: String!\n    \"\"\"\n    Display name of IssueLinkType to which this relation belongs to. E.g. Blocks, Duplicate, Cloners.\n    \"\"\"\n    linkTypeName: String\n    \"\"\"\n    Represents the direction of Issue link type. E.g. INWARD, OUTWARD.\n    \"\"\"\n    direction: JiraIssueLinkDirection\n}\n\n\"\"\"\nRepresents a single Issue link containing the link id, link type and destination Issue.\n\nFor Issue create, JiraIssueLink will be populated with\nthe default IssueLink types in the relatedBy field.\nThe issueLinkId and Issue fields will be null.\n\nFor Issue view, JiraIssueLink will be populated with\nthe Issue link data available on the Issue.\nThe Issue field will contain a nested JiraIssue that is atmost 1 level deep.\nThe nested JiraIssue will not contain fields that can contain further nesting.\n\"\"\"\ntype JiraIssueLink {\n    \"\"\"\n    Global identifier for the Issue Link.\n    \"\"\"\n    id: ID\n    \"\"\"\n    Identifier for the Issue Link. Can be null to represent a link not yet created.\n    \"\"\"\n    issueLinkId: ID\n    \"\"\"\n    Issue link type relation through which the source Issue is connected to the\n    destination Issue. Source Issue is the Issue being created/queried.\n    \"\"\"\n    relatedBy: JiraIssueLinkTypeRelation\n    \"\"\"\n    The destination Issue to which this link is connected.\n    \"\"\"\n    issue: JiraIssue\n}\n\n\"\"\"\nThe connection type for JiraIssueLink.\n\"\"\"\ntype JiraIssueLinkConnection {\n    \"\"\"\n    The total number of JiraIssueLink matching the criteria.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    The page info of the current page of results.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraIssueLinkEdge]\n}\n\n\"\"\"\nAn edge in a JiraIssueLink connection.\n\"\"\"\ntype JiraIssueLinkEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraIssueLink\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nThe connection type for JiraIssueLinkTypeRelation.\n\"\"\"\ntype JiraIssueLinkTypeRelationConnection {\n    \"\"\"\n    The total number of JiraIssueLinkTypeRelation matching the criteria.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    The page info of the current page of results.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraIssueLinkTypeRelationEdge]\n}\n\n\"\"\"\nAn edge in a JiraIssueLinkType connection.\n\"\"\"\ntype JiraIssueLinkTypeRelationEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraIssueLinkTypeRelation\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nRepresents the possible linking directions between issues.\n\"\"\"\nenum JiraIssueLinkDirection {\n    \"\"\"\n    Going from the other issue to this issue.\n    \"\"\"\n    INWARD\n    \"\"\"\n    Going from this issue to the other issue.\n    \"\"\"\n    OUTWARD\n}\n\"\"\"\nJira Issue node. Includes the Issue data displayable in the current User context.\n\"\"\"\ntype JiraIssue implements Node {\n    \"\"\"\n    Unique identifier associated with this Issue.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Issue ID in numeric format. E.g. 10000\n    \"\"\"\n    issueId: String!\n    \"\"\"\n    The {projectKey}-{issueNumber} associated with this Issue.\n    \"\"\"\n    key: String!\n    \"\"\"\n    The browser clickable link of this Issue.\n    \"\"\"\n    webUrl: URL\n    \"\"\"\n    Loads the fields relevant to the current GraphQL Query, Issue and User contexts.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    fields(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueFieldConnection\n    \"\"\"\n    Paginated list of fields available on this issue. Allows clients to specify fields by their identifier.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    fieldsById(\n        \"\"\"\n        A list of field identifiers corresponding to the fields to be returned.\n        E.g. [\"ari:cloud:jira:{siteId}:issuefieldvalue/{issueId}/description\", \"ari:cloud:jira:{siteId}:issuefieldvalue/{issueId}/customfield_10000\"].\n        \"\"\"\n        ids: [ID!]!\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueFieldConnection\n    \"\"\"\n    Paginated list of comments available on this issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    comments(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraCommentConnection\n    \"\"\"\n    Paginated list of worklogs available on this issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    worklogs(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraWorkLogConnection\n    \"\"\"\n    Paginated list of attachments available on this issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    attachments(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraAttachmentConnection\n    \"\"\"\n    Loads all field sets relevant to the current context for the Issue.\n    \"\"\"\n    fieldSets(\n        \"\"\"\n        The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueFieldSetConnection\n    \"\"\"\n    The childIssues within this issue.\n    \"\"\"\n    childIssues: JiraChildIssues\n    \"\"\"\n    The dev summary cache. This could be stale.\n    \"\"\"\n    devSummaryCache: JiraIssueDevSummaryResult @beta(name: \"JiraIssueDevSummaryCache\")\n}\n\n\"\"\"\nThe connection type for JiraIssue.\n\"\"\"\ntype JiraIssueConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    jql if issues are returned by jql. This field will have value only when the context has jql\n    \"\"\"\n    jql: String @beta(name: \"JiraIssueConnectionJql\")\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraIssueEdge]\n}\n\n\"\"\"\nAn edge in a JiraIssue connection.\n\"\"\"\ntype JiraIssueEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraIssue\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nRepresents a field set which contains a set of JiraIssueFields, otherwise commonly referred to as collapsed fields.\n\"\"\"\ntype JiraIssueFieldSet {\n    \"\"\"\n    The identifer of the field set e.g. `assignee`, `reporter`, `checkbox_cf[Checkboxes]`.\n    \"\"\"\n    fieldSetId: String\n    \"\"\"\n    The field type key of the contained fields e.g: `project`, `issuetype`, `com.pyxis.greenhopper.jira:gh-epic-link`.\n    \"\"\"\n    type: String\n    \"\"\"\n    Retrieves a connection of JiraIssueFields\n    \"\"\"\n    fields(\n        \"\"\"\n        The number of items after the cursor to be returned, if not specified it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items to be sliced away from the bottom of the list after slicing with `first` argument.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items, if not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueFieldConnection\n}\n\n\"\"\"\nAn edge in a JiraIssueFieldSet connection.\n\"\"\"\ntype JiraIssueFieldSetEdge {\n    \"\"\"\n    The node at the the edge.\n    \"\"\"\n    node: JiraIssueFieldSet\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nThe connection type for JiraIssueFieldSet.\n\"\"\"\ntype JiraIssueFieldSetConnection {\n    \"\"\"\n    The total number of JiraIssueFields matching the criteria.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    The page info of the current page of results.\n    \"\"\"\n    pageInfo: PageInfo\n    \"\"\"\n    The data for Edges in the current page.\n    \"\"\"\n    edges: [JiraIssueFieldSetEdge]\n}\n\"\"\"\nRepresents an issue's priority field\n\"\"\"\ntype JiraPriority implements Node {\n    \"\"\"\n    Unique identifier referencing the priority ID.\n    \"\"\"\n    id: ID!\n    \"\"\"\"\n    The priority ID. E.g. 10000.\n    \"\"\"\n    priorityId: String!\n    \"\"\"\n    The priority name.\n    \"\"\"\n    name: String\n    \"\"\"\n    The priority icon URL.\n    \"\"\"\n    iconUrl: URL\n    \"\"\"\n    The priority color.\n    \"\"\"\n    color: String\n}\n\n\"\"\"\nThe connection type for JiraPriority.\n\"\"\"\ntype JiraPriorityConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraPriorityEdge]\n}\n\n\"\"\"\nAn edge in a JiraPriority connection.\n\"\"\"\ntype JiraPriorityEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraPriority\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nRepresents proforma-forms.\n\"\"\"\ntype JiraProformaForms {\n    \"\"\"\n    Indicates whether the project has proforma-forms or not.\n    \"\"\"\n    hasProjectForms: Boolean\n    \"\"\"\n    Indicates whether the issue has proforma-forms or not.\n    \"\"\"\n    hasIssueForms: Boolean\n}\"\"\"\nA connection to a list of users.\n\"\"\"\ntype JiraUserConnection {\n  \"The page info of the current page of results.\"\n  pageInfo: PageInfo!\n  \"A list of User edges.\"\n  edges: [JiraUserEdge]\n  \"A count of filtered result set across all pages.\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in an User connection object.\n\"\"\"\ntype JiraUserEdge {\n  \"The node at this edge.\"\n  node: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.node.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n  \"The cursor to this edge.\"\n  cursor: String\n}\nextend type JiraQuery {\n\n    \"\"\"\n    Get all the available grant type keys such as project role, application access, user, group.\n    \"\"\"\n    allGrantTypeKeys(cloudId: ID! @CloudID): [JiraGrantTypeKey!]! @beta(name: \"PermissionScheme\")\n\n    \"\"\"\n    Get the grant type values by search term and grant type key.\n    It only supports fetching values for APPLICATION_ROLE, PROJECT_ROLE, MULTI_USER_PICKER and MULTI_GROUP_PICKER grant types.\n    \"\"\"\n    grantTypeValues(\n        \"Returns the first n elements from the list.\"\n        first: Int\n        \"Returns the elements in the list that come after the specified cursor.\"\n        after: String\n        \"Returns the last n elements from the list.\"\n        last: Int\n        \"Returns the elements in the list that come before the specified cursor.\"\n        before: String\n        \"The mandatory grant type key to search within specific grant type such as project role.\"\n        grantTypeKey: JiraGrantTypeKeyEnum!\n        \"search term to filter down on the grant type values.\"\n        searchTerm: String\n        \"The cloud id of the tenant.\"\n        cloudId: ID! @CloudID\n    ): JiraGrantTypeValueConnection @beta(name: \"PermissionScheme\")\n\n    \"\"\"\n    Get the permission scheme based on scheme id. The scheme ID input represent an ARI.\n    \"\"\"\n    viewPermissionScheme(schemeId: ID! @ARI(type: \"permission-scheme\", owner: \"jira\")): JiraPermissionSchemeViewResult @beta(name: \"PermissionScheme\")\n\n    \"\"\"\n    Get the list of paginated projects associated with the given permission scheme ID.\n    The project objects will be returned based on implicit ascending order by project name.\n    \"\"\"\n    getProjectsByPermissionScheme(\n        \"Returns the first n elements from the list.\"\n        first: Int\n        \"Returns the elements in the list that come after the specified cursor.\"\n        after: String\n        \"Returns the last n elements from the list.\"\n        last: Int\n        \"Returns the elements in the list that come before the specified cursor.\"\n        before: String\n        \"The permission scheme ARI to filter the results.\"\n        schemeId: ID! @ARI(type: \"permission-scheme\", owner: \"jira\")\n    ): JiraProjectConnection @beta(name: \"PermissionScheme\")\n\n    \"\"\"\n    A list of paginated permission scheme grants based on the given permission scheme ID.\n    \"\"\"\n    permissionSchemeGrants(\n        \"Returns the first n elements from the list.\"\n        first: Int\n        \"Returns the elements in the list that come after the specified cursor.\"\n        after: String\n        \"Returns the last n elements from the list.\"\n        last: Int\n        \"Returns the elements in the list that come before the specified cursor.\"\n        before: String\n        \"The permission scheme ARI to filter the results.\"\n        schemeId: ID! @ARI(type: \"permission-scheme\", owner: \"jira\")\n        \"The optional project permission key to filter the results.\"\n        permissionKey: String\n    ): JiraPermissionGrantValueConnection @beta(name: \"PermissionScheme\") @deprecated(reason: \"Please use getPermissionSchemeGrants instead.\")\n\n    \"\"\"\n    A list of paginated permission scheme grants based on the given permission scheme ID and permission key.\n    \"\"\"\n    getPermissionSchemeGrants(\n        \"Returns the first n elements from the list.\"\n        first: Int\n        \"Returns the elements in the list that come after the specified cursor.\"\n        after: String\n        \"Returns the last n elements from the list.\"\n        last: Int\n        \"Returns the elements in the list that come before the specified cursor.\"\n        before: String\n        \"The permission scheme ARI to filter the results.\"\n        schemeId: ID! @ARI(type: \"permission-scheme\", owner: \"jira\")\n        \"The mandatory project permission key to filter the results.\"\n        permissionKey: String!\n        \"The optional grant type key to filter the results.\"\n        grantTypeKey: JiraGrantTypeKeyEnum\n    ): JiraPermissionGrantConnection @beta(name: \"PermissionScheme\")\n\n    \"\"\"\n    Gets the permission scheme grants hierarchy (by grant type key) based on the given permission scheme ID and permission key.\n    This returns a bounded list of data with limit set to 50. For getting the complete list in paginated manner, use getPermissionSchemeGrants.\n    \"\"\"\n    getPermissionSchemeGrantsHierarchy(\n        \"The permission scheme ARI to filter the results.\"\n        schemeId: ID! @ARI(type: \"permission-scheme\", owner: \"jira\")\n        \"The mandatory project permission key to filter the results.\"\n        permissionKey: String!\n    ): [JiraPermissionGrants!]! @beta(name: \"PermissionScheme\")\n\n}\n\nextend type JiraMutation {\n\n    \"\"\"\n    The mutation operation to add one or more new permission grants to the given permission scheme.\n    The operation takes mandatory permission scheme ID.\n    The limit on the new permission grants can be added is set to 50.\n    \"\"\"\n    addPermissionSchemeGrants(input: JiraPermissionSchemeAddGrantInput!): JiraPermissionSchemeAddGrantPayload @beta(name: \"PermissionScheme\")\n\n    \"\"\"\n    The mutation operation to remove one or more existing permission scheme grants in the given permission scheme.\n    The operation takes mandatory permission scheme ID.\n    The limit on the new permission grants can be removed is set to 50.\n    \"\"\"\n    removePermissionSchemeGrants(input: JiraPermissionSchemeRemoveGrantInput!): JiraPermissionSchemeRemoveGrantPayload @beta(name: \"PermissionScheme\")\n\n}\n\n\"\"\"\nThe JiraPermissionSchemeView represents the composite view to capture basic information of\nthe permission scheme such as id, name, description and a bounded list of one or more grant groups.\nA grant group contains existing permission grant information such as permission, permission category, grant type and grant type value.\n\"\"\"\ntype JiraPermissionSchemeView {\n    \"The basic permission scheme information such as id, name and description.\"\n    scheme: JiraPermissionScheme!\n    \"The additional configuration information regarding the permission scheme.\"\n    configuration: JiraPermissionSchemeConfiguration!\n    \"The bounded list of one or more grant groups represent each group of permission grants based on project permission category such as PROJECTS, ISSUES.\"\n    grantGroups: [JiraPermissionSchemeGrantGroup!]\n}\n\n\"\"\"\nThe JiraPermissionSchemeConfiguration represents additional configuration information regarding the permission scheme such as its editability.\n\"\"\"\ntype JiraPermissionSchemeConfiguration {\n    \"The indicator saying whether a permission scheme is editable or not.\"\n    isEditable: Boolean!\n}\n\n\"\"\"\nThe JiraPermissionSchemeGrantGroup is an association between project permission category information and a bounded list of one or more\nassociated permission grant holder. A grant holder represents project permission information and its associated permission grants.\n\"\"\"\ntype JiraPermissionSchemeGrantGroup {\n    \"The basic project permission category information such as key and display name.\"\n    category: JiraProjectPermissionCategory!\n    \"A bounded list of one or more permission grant holders.\"\n    grantHolders: [JiraPermissionGrantHolder]\n}\n\n\"\"\"\nThe JiraPermissionGrantHolder represents an association between project permission information and\na bounded list of one or more permission grant.\nA permission grant holds association between grant type and a paginated list of grant values.\n\"\"\"\ntype JiraPermissionGrantHolder {\n    \"The basic information about the project permission.\"\n    permission: JiraProjectPermission!\n    \"The additional configuration information regarding the permission.\"\n    configuration: JiraPermissionConfiguration\n    \"A bounded list of jira permission grant.\"\n    grants: [JiraPermissionGrants!]\n}\n\n\"\"\"\nThe JiraPermissionConfiguration represents additional configuration information regarding the permission such as\ndeprecation, new addition etc. It contains documentation/notice and/or actionable items for the permission\nsuch as deprecation of BROWSE_PROJECTS in favour of VIEW_PROJECTS and VIEW_ISSUES.\n\"\"\"\ntype JiraPermissionConfiguration {\n    \"The tag for the permission key.\"\n    tag: JiraPermissionTagEnum!\n    \"The message contains actionable information for the permission key.\"\n    message: JiraPermissionMessageExtension\n    \"The documentation for the permission key.\"\n    documentation: JiraPermissionDocumentationExtension\n}\n\n\"\"\"\nThe JiraPermissionTagEnum represents additional tags for the permission key.\n\"\"\"\nenum JiraPermissionTagEnum {\n    \"Represents a permission that is about to be deprecated.\"\n    DEPRECATED,\n    \"Represents a permission that is newly added.\"\n    NEW\n}\n\n\"\"\"\nThe JiraPermissionMessageExtension represents actionable information for a permission such as deprecation of\nBROWSE_PROJECTS in favour of VIEW_PROJECTS and VIEW_ISSUES.\n\"\"\"\ntype JiraPermissionMessageExtension {\n    \"The category of the message such as WARNING, INFORMATION etc.\"\n    type: JiraPermissionMessageTypeEnum!\n    \"The display text of the message.\"\n    text: String!\n}\n\n\"\"\"\nThe JiraPermissionMessageTypeEnum represents category of the message section.\n\"\"\"\nenum JiraPermissionMessageTypeEnum {\n    \"Represents a basic message.\"\n    INFORMATION,\n    \"Represents a warning message.\"\n    WARNING\n}\n\n\"\"\"\nThe JiraPermissionDocumentationExtension contains developer documentation for a permission key.\n\"\"\"\ntype JiraPermissionDocumentationExtension {\n    \"The display text of the developer documentation.\"\n    text: String!\n    \"The link to the developer documentation.\"\n    url: String!\n}\n\n\"\"\"\nThe JiraPermissionGrants represents an association between grant type information and a bounded list of one or more grant\nvalues associated with given grant type.\nEach grant value has grant type specific information.\nFor example, PROJECT_ROLE grant type value contains project role ID in ARI format and role specific details.\n\"\"\"\ntype JiraPermissionGrants {\n    \"The grant type information includes key and display name.\"\n    grantType: JiraGrantTypeKey!\n    \"A bounded list of grant values. Each grant value has grant type specific information.\"\n    grantValues: [JiraPermissionGrantValue!]\n    \"The total number of items matching the criteria\"\n    totalCount: Int\n}\n\n\"\"\"\nThe type represents a paginated view of permission grants in the form of connection object.\n\"\"\"\ntype JiraPermissionGrantConnection {\n    \"The page info of the current page of results.\"\n    pageInfo: PageInfo!\n    \"A list of edges in the current page.\"\n    edges: [JiraPermissionGrantEdge]\n    \"The total number of items matching the criteria.\"\n    totalCount: Int\n}\n\n\"\"\"\nThe permission grant edge object used in connection object for representing an edge.\n\"\"\"\ntype JiraPermissionGrantEdge {\n    \"The node at this edge.\"\n    node: JiraPermissionGrant!\n    \"The cursor to this edge.\"\n    cursor: String!\n}\n\n\"\"\"\nThe JiraPermissionGrant represents an association between the grant type key and the grant value.\nEach grant value has grant type specific information.\nFor example, PROJECT_ROLE grant type value contains project role ID in ARI format and role specific details.\n\"\"\"\ntype JiraPermissionGrant {\n    \"The grant type information includes key and display name.\"\n    grantType: JiraGrantTypeKey!\n    \"The grant value has grant type key specific information.\"\n    grantValue: JiraPermissionGrantValue!\n}\n\n\"\"\"\nThe type represents a paginated view of permission grant values in the form of connection object.\n\"\"\"\ntype JiraPermissionGrantValueConnection {\n    \"The page info of the current page of results.\"\n    pageInfo: PageInfo!\n    \"A list of edges in the current page.\"\n    edges: [JiraPermissionGrantValueEdge]\n    \"The total number of items matching the criteria.\"\n    totalCount: Int\n}\n\n\"\"\"\nThe permission grant value edge object used in connection object for representing an edge.\n\"\"\"\ntype JiraPermissionGrantValueEdge {\n    \"The node at this edge.\"\n    node: JiraPermissionGrantValue!\n    \"The cursor to this edge.\"\n    cursor: String!\n}\n\n\"\"\"\nThe permission grant value represents the actual permission grant value.\nThe id field represent the grant ID and its not an ARI. The value represents actual value information specific to grant type.\nFor example: PROJECT_ROLE grant type value contains project role ID in ARI format and role specific details\n\"\"\"\ntype JiraPermissionGrantValue {\n    \"\"\"\n    The ID of the permission grant.\n    It represents the relationship among permission, grant type and grant type specific value.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The optional grant type value is a union type.\n    The value itself may resolve to one of the concrete types such as JiraDefaultGrantTypeValue, JiraProjectRoleGrantTypeValue.\n    \"\"\"\n    value: JiraGrantTypeValue\n}\n\n\"\"\"\nThe JiraGrantTypeValue union resolves to one of the concrete types such as JiraDefaultGrantTypeValue, JiraProjectRoleGrantTypeValue.\n\"\"\"\nunion JiraGrantTypeValue = JiraDefaultGrantTypeValue | JiraUserGrantTypeValue | JiraProjectRoleGrantTypeValue | JiraGroupGrantTypeValue | JiraIssueFieldGrantTypeValue\n\n\"\"\"\nA type to represent one or more paginated list of one or more permission grant values available for a given grant type.\n\"\"\"\ntype JiraGrantTypeValueConnection {\n    \"A list of edges in the current page.\"\n    edges: [JiraGrantTypeValueEdge]\n    \"The page info of the current page of results.\"\n    pageInfo: PageInfo!\n    \"The total number of items matching the criteria.\"\n    totalCount: Int\n}\n\n\"\"\"\nAn edge object representing grant type value information used within connection object.\n\"\"\"\ntype JiraGrantTypeValueEdge {\n    \"The node at this edge.\"\n    node: JiraGrantTypeValue!\n    \"The cursor to this edge.\"\n    cursor: String!\n}\n\n\"\"\"\nThe union result representing either the composite view of the permission scheme or the query error information.\n\"\"\"\nunion JiraPermissionSchemeViewResult = JiraPermissionSchemeView | QueryError\n\n\"\"\"\nSpecifies permission scheme grant for the combination of permission key, grant type key, and grant type value ARI.\n\"\"\"\ninput JiraPermissionSchemeGrantInput {\n    \"the project permission key.\"\n    permissionKey: String!\n    \"The grant type key such as USER.\"\n    grantType: JiraGrantTypeKeyEnum!\n    \"\"\"\n    The optional grant value in ARI format. Some grantType like PROJECT_LEAD, REPORTER etc. have no grantValue. Any grantValue passed will be silently ignored.\n    For example: project role ID ari is of the format - ari:cloud:jira:a2520569-493f-45bc-807b-54b02bc724d1:role/project-role/activation/bd0c43a9-a23a-4302-8ffa-ca04bde7c747/projectrole/b434089d-7f6d-476b-884b-7811661f91d2\n    \"\"\"\n    grantValue: ID\n}\n\n\"\"\"\nThe input type to add new permission grants to the given permission scheme.\n\"\"\"\ninput JiraPermissionSchemeAddGrantInput {\n    \"The permission scheme ID in ARI format.\"\n    schemeId: ID! @ARI(type: \"permission-scheme\", owner: \"jira\")\n    \"The list of one or more grants to be added.\"\n    grants: [JiraPermissionSchemeGrantInput!]!\n}\n\n\"\"\"\nThe response payload for add permission grants mutation operation for a given permission scheme.\n\"\"\"\ntype JiraPermissionSchemeAddGrantPayload implements Payload {\n    \"The success indicator saying whether mutation operation was successful as a whole or not.\"\n    success: Boolean!\n    \"The errors field represents additional mutation error information if exists.\"\n    errors: [MutationError!]\n}\n\n\"\"\"\nThe input type to remove permission grants from the given permission scheme.\n\"\"\"\ninput JiraPermissionSchemeRemoveGrantInput {\n    \"The permission scheme ID in ARI format.\"\n    schemeId: ID! @ARI(type: \"permission-scheme\", owner: \"jira\")\n    \"The list of one or more grants to be removed.\"\n    grants: [JiraPermissionSchemeGrantInput!] @deprecated(reason: \"Please use grantIds field instead\")\n    \"The list of permission grant ids.\"\n    grantIds: [Long!]!\n}\n\n\"\"\"\nThe response payload for remove existing permission grants mutation operation for a given permission scheme.\n\"\"\"\ntype JiraPermissionSchemeRemoveGrantPayload implements Payload {\n    \"The success indicator saying whether mutation operation was successful as a whole or not.\"\n    success: Boolean!\n    \"The errors field represents additional mutation error information if exists.\"\n    errors: [MutationError!]\n}\n# Copied over from jira-project, will extend this type after deprecating rest bridge project\n\n\"\"\"\nRepresents an Issue type, e.g. story, task, bug.\n\"\"\"\ntype JiraIssueType implements Node {\n  \"\"\"\n  Global identifier of the Issue type.\n  \"\"\"\n  id: ID! @ARI(type: \"issue-type\", owner: \"jira\")\n  \"\"\"\n  Name of the Issue type.\n  \"\"\"\n  name: String!\n  \"\"\"\n  Description of the Issue type.\n  \"\"\"\n  description: String\n  \"\"\"\n  Avatar of the Issue type.\n  \"\"\"\n  avatar: JiraAvatar\n  \"\"\"\n  The IssueType hierarchy level\n  \"\"\"\n  hierarchy: JiraIssueTypeHierarchyLevel\n}\n\n\"\"\"\nThe connection type for JiraIssueType.\n\"\"\"\ntype JiraIssueTypeConnection {\n  \"\"\"\n  The total count of items in the connection.\n  \"\"\"\n  totalCount: Int\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges in the current page.\n  \"\"\"\n  edges: [JiraIssueTypeEdge]\n}\n\n\"\"\"\nAn edge in a JiraCommentConnection connection.\n\"\"\"\ntype JiraIssueTypeEdge {\n  \"\"\"\n  The node at the the edge.\n  \"\"\"\n  node: JiraIssueType\n  \"\"\"\n  The cursor to this edge.\n  \"\"\"\n  cursor: String!\n}\n\n\"\"\"\nThe Jira IssueType hierarchy level.\nHierarchy levels represent Issue parent-child relationships using an integer scale.\n\"\"\"\ntype JiraIssueTypeHierarchyLevel {\n  \"\"\"\n  The global hierarchy level of the IssueType.\n  E.g. -1 for subtask level, 0 for base level, 1 for epic level.\n  \"\"\"\n  level: Int\n  \"\"\"\n  The name of the IssueType hierarchy level.\n  \"\"\"\n  name: String\n}\n\"\"\"\nA generic interface for Jira Filter.\n\"\"\"\ntype JiraFilter implements Node {\n    \"\"\"\n    An ARI-format value that encodes the filterId.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    A tenant local filterId.\n    \"\"\"\n    filterId: String!\n    \"\"\"\n    JQL associated with the filter.\n    \"\"\"\n    jql: String!\n    \"\"\"\n    A string representing the filter name.\n    \"\"\"\n    name: String!\n}\n\nunion JiraFilterResult = JiraFilter | QueryError\n\"\"\"\nRepresents a Jira ProjectRole.\n\"\"\"\ntype JiraRole implements Node {\n    \"\"\"\n    Global identifier of the ProjectRole.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Id of the ProjectRole.\n    \"\"\"\n    roleId: String!\n    \"\"\"\n    Name of the ProjectRole.\n    \"\"\"\n    name: String\n    \"\"\"\n    Description of the ProjectRole.\n    \"\"\"\n    description: String\n}\n\n\"\"\"\nThe connection type for JiraRole.\n\"\"\"\ntype JiraRoleConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    The page infor of the current page of results.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraRoleEdge]\n}\n\n\"\"\"\nAn edge in a JiraRoleConnection connection.\n\"\"\"\ntype JiraRoleEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraRole\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nRepresents the common structure across Issue fields.\n\"\"\"\ninterface JiraIssueField implements Node {\n    \"\"\"\n    Unique identifier for the entity.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias.\n    Applies to managed or commonly known custom fields in Jira, which allow lookup without requiring the custom field ID.\n    E.g. rank or startdate.\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key. E.g. project, issuetype, com.pyxis.greenhopper.Jira:gh-epic-link.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n}\n\n\"\"\"\nThe connection type for JiraIssueField.\n\"\"\"\ntype JiraIssueFieldConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraIssueFieldEdge]\n}\n\nunion JiraIssueFieldConnectionResult = JiraIssueFieldConnection | QueryError\n\n\"\"\"\nAn edge in a JiraIssueField connection.\n\"\"\"\ntype JiraIssueFieldEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraIssueField\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nRepresents the configurations associated with an Issue field.\n\"\"\"\ninterface JiraIssueFieldConfiguration {\n    \"\"\"\n    Attributes of an Issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n}\n\n\"\"\"\nAttributes of field configuration.\n\"\"\"\ntype JiraFieldConfig {\n    \"\"\"\n    Defines if a field is required on a screen.\n    \"\"\"\n    isRequired: Boolean\n    \"\"\"\n    Defines if a field is editable.\n    \"\"\"\n    isEditable: Boolean\n    \"\"\"\n    Explains the reason why a field is not editable on a screen.\n    E.g. cases where a field needs a licensed premium version to be editable.\n    \"\"\"\n    nonEditableReason: JiraFieldNonEditableReason\n}\n\n\"\"\"\nAttributes of CMDB field configuration.\n\"\"\"\ntype JiraCmdbFieldConfig {\n    \"\"\"\n    The object schema ID associated with the CMDB object.\n    \"\"\"\n    objectSchemaId: String!\n    \"\"\"\n    The object filter query.\n    \"\"\"\n    objectFilterQuery: String\n    \"\"\"\n    The issue scope filter query.\n    \"\"\"\n    issueScopeFilterQuery: String\n    \"\"\"\n    Indicates whether this CMDB field should contain multiple CMDB objects or not.\n    \"\"\"\n    multiple: Boolean\n    \"\"\"\n    Paginated list of CMDB attributes displayed on issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    attributesDisplayedOnIssue(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraCmdbConfigAttributeConnection\n    \"\"\"\n    Paginated list of CMDB attributes included in autocomplete search.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    attributesIncludedInAutoCompleteSearch(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraCmdbConfigAttributeConnection\n}\n\n\"\"\"\nThe connection type for CMDB config attributes.\n\"\"\"\ntype JiraCmdbConfigAttributeConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraCmdbConfigAttributeEdge]\n}\n\n\"\"\"\nAn edge in a JiraCmdbConfigAttributeConnection.\n\"\"\"\ntype JiraCmdbConfigAttributeEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: String\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nRepresents the information for a field being non-editable on Issue screens.\n\"\"\"\ntype JiraFieldNonEditableReason {\n    \"\"\"\n    Message explanining why the field is non-editable (if present).\n    \"\"\"\n    message: String\n}\n\n\"\"\"\nRepresents user made configurations associated with an Issue field.\n\"\"\"\ninterface JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Attributes of an Issue field configuration info from a user's customisation.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nAttributes of user made field configurations.\n\"\"\"\ntype JiraUserFieldConfig {\n    \"\"\"\n    Defines whether a field has been pinned by the user.\n    \"\"\"\n    isPinned: Boolean\n    \"\"\"\n    Defines if the user has preferred to check a field on Issue creation.\n    \"\"\"\n    isSelected: Boolean\n}\n\n\"\"\"\nRepresents a priority field on a Jira Issue.\n\"\"\"\ntype JiraPriorityField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The priority selected on the Issue or default priority configured for the field.\n    \"\"\"\n    priority: JiraPriority\n    \"\"\"\n    Paginated list of priority options for the field or on an Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    priorities(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Determines if the results should be limited to suggested priorities.\n        \"\"\"\n        suggested: Boolean\n    ): JiraPriorityConnection\n    \"\"\"\n    Attributes of an Issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a project field on a Jira Issue.\nBoth the system & custom project field can be represented by this type.\n\"\"\"\ntype JiraProjectField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The ID of the project field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The project selected on the Issue or default project configured for the field.\n    \"\"\"\n    project: JiraProject\n    \"\"\"\n    List of project options available for this field to be selected.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    projects(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        recent: Boolean = false\n    ) : JiraProjectConnection\n    \"\"\"\n    Search url to fetch all available projects options on the field or an Issue.\n    To be deprecated once project connection is supported for custom project fields.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an Issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents an issue type field on a Jira Issue.\n\"\"\"\ntype JiraIssueTypeField implements Node & JiraIssueField & JiraIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\"\n    The issue type selected on the Issue or default issue type configured for the field.\n    \"\"\"\n    issueType: JiraIssueType\n    \"\"\"\n    List of issuetype options available to be selected for the field.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    issueTypes(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraIssueTypeConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n}\n\n\"\"\"\nRepresents a rich text field on a Jira Issue. E.g. description, environment.\n\"\"\"\ntype JiraRichTextField implements Node & JiraIssueField  & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The rich text selected on the Issue or default rich text configured for the field.\n    \"\"\"\n    richText: JiraRichText\n    \"\"\"\n    Determines what editor to render.\n    E.g. default text rendering or wiki text rendering.\n    \"\"\"\n    renderer: String\n    \"\"\"\n    Contains the information needed to add media content to the field.\n    \"\"\"\n    mediaContext: JiraMediaContext\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a version field on a Jira Issue. E.g. custom version picker field.\n\"\"\"\ntype JiraSingleVersionPickerField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The version selected on the Issue or default version configured for the field.\n    \"\"\"\n    version: JiraVersion\n    \"\"\"\n    Paginated list of versions options for the field or on a Jira Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    versions(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraVersionConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a multi version picker field on a Jira Issue. E.g. fixVersions and multi version custom field.\n\"\"\"\ntype JiraMultipleVersionPickerField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The versions selected on the Issue or default versions configured for the field.\n    \"\"\"\n    selectedVersions: [JiraVersion] @deprecated(reason: \"Please use selectedVersionsConnection instead.\")\n    \"\"\"\n    The versions selected on the Issue or default versions configured for the field.\n    \"\"\"\n    selectedVersionsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraVersionConnection\n    \"\"\"\n    Paginated list of versions options for the field or on a Jira Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    versions(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraVersionConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a labels field on a Jira Issue. Both system & custom field can be represented by this type.\n\"\"\"\ntype JiraLabelsField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The labels selected on the Issue or default labels configured for the field.\n    \"\"\"\n    selectedLabels: [JiraLabel] @deprecated(reason: \"Please use selectedLabelsConnection instead.\")\n    \"\"\"\n    The labels selected on the Issue or default labels configured for the field.\n    \"\"\"\n    selectedLabelsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraLabelConnection\n    \"\"\"\n    Paginated list of label options for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    labels(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraLabelConnection\n    \"\"\"\n    Search url to fetch all available label options on a field or an Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a single select user field on a Jira Issue. E.g. assignee, reporter, custom user picker.\n\"\"\"\ntype JiraSingleSelectUserPickerField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The user selected on the Issue or default user configured for the field.\n    \"\"\"\n    user: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.user.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    \"\"\"\n    Paginated list of user options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    users(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraUserConnection\n    \"\"\"\n    Search url to fetch all available users options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a multi select user picker field on a Jira Issue. E.g. custom user picker\n\"\"\"\ntype JiraMultipleSelectUserPickerField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the entity.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key of the field.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The users selected on the Issue or default users configured for the field.\n    \"\"\"\n    selectedUsers: [User] @deprecated(reason: \"Please use selectedUsersConnection instead.\")\n    \"\"\"\n    The users selected on the Issue or default users configured for the field.\n    \"\"\"\n    selectedUsersConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraUserConnection\n    \"\"\"\n    Paginated list of user options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    users(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraUserConnection\n    \"\"\"\n    Search url to fetch all available users options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\n\"\"\"\nRepresents a people picker field on a Jira Issue.\n\"\"\"\ntype JiraPeopleField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The people selected on the Issue or default people configured for the field.\n    \"\"\"\n    selectedUsers: [User] @deprecated(reason: \"Please use selectedUsersConnection instead.\")\n    \"\"\"\n    The users selected on the Issue or default users configured for the field.\n    \"\"\"\n    selectedUsersConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraUserConnection\n    \"\"\"\n    Whether the field is configured to act as single/multi select user(s) field.\n    \"\"\"\n    isMulti: Boolean\n    \"\"\"\n    Paginated list of user options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    users(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraUserConnection\n    \"\"\"\n    Search url to fetch all available users options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a date time picker field on a Jira Issue. E.g. created, resolution date, custom date time, request-feedback-date.\n\"\"\"\ntype JiraDateTimePickerField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The datetime selected on the Issue or default datetime configured for the field.\n    \"\"\"\n    dateTime: DateTime\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a date picker field on an issue. E.g. due date, custom date picker, baseline start, baseline end.\n\"\"\"\ntype JiraDatePickerField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The date selected on the Issue or default date configured for the field.\n    \"\"\"\n    date: Date\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a resolution field on a Jira Issue.\n\"\"\"\ntype JiraResolutionField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The resolution selected on the Issue or default resolution configured for the field.\n    \"\"\"\n    resolution: JiraResolution\n    \"\"\"\n    Paginated list of resolution options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    resolutions(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraResolutionConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a number field on a Jira Issue. E.g. float, story points.\n\"\"\"\ntype JiraNumberField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The number selected on the Issue or default number configured for the field.\n    \"\"\"\n    number: Float\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents single line text field on a Jira Issue. E.g. summary, epic name, custom text field.\n\"\"\"\ntype JiraSingleLineTextField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The text selected on the Issue or default text configured for the field.\n    \"\"\"\n    text: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents epic link field on a Jira Issue.\n\"\"\"\ntype JiraEpicLinkField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The epic selected on the Issue or default epic configured for the field.\n    \"\"\"\n    epic: JiraEpic\n    \"\"\"\n    Paginated list of epic options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    epics(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Set to true to search only for epics that are done, false otherwise.\n        \"\"\"\n        done: Boolean\n    ): JiraEpicConnection\n    \"\"\"\n    Search url to fetch all available epics options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents components field on a Jira Issue.\n\"\"\"\ntype JiraComponentsField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The component selected on the Issue or default component configured for the field.\n    \"\"\"\n    selectedComponents: [JiraComponent] @deprecated(reason: \"Please use selectedComponentsConnection instead.\")\n    \"\"\"\n    The component selected on the Issue or default component configured for the field.\n    \"\"\"\n    selectedComponentsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraComponentConnection\n    \"\"\"\n    Paginated list of component options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    components(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraComponentConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents url field on a Jira Issue.\n\"\"\"\ntype JiraUrlField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The url selected on the Issue or default url configured for the field.\n    \"\"\"\n    url: URL\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents sprint field on a Jira Issue.\n\"\"\"\ntype JiraSprintField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The sprints selected on the Issue or default sprints configured for the field.\n    \"\"\"\n    selectedSprints: [JiraSprint] @deprecated(reason: \"Please use selectedSprintsConnection instead.\")\n    \"\"\"\n    The sprints selected on the Issue or default sprints configured for the field.\n    \"\"\"\n    selectedSprintsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraSprintConnection\n    \"\"\"\n    Paginated list of sprint options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    sprints(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        The Result Sprints fetched will have particular Sprint State eg. ACTIVe.\n        \"\"\"\n        state: JiraSprintState\n    ): JiraSprintConnection\n    \"\"\"\n    Search url to fetch all available sprints options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents linked issues field on a Jira Issue.\n\"\"\"\ntype JiraIssueLinkField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Represents all the issue links defined on a Jira Issue. Should be deprecated and replaced with issueLinksConnection.\n    \"\"\"\n    issueLinks: [JiraIssueLink] @deprecated(reason: \"Please use issueLinkConnection instead.\")\n    \"\"\"\n    Paginated list of issue links selected on the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    issueLinkConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueLinkConnection\n    \"\"\"\n    Represents the different issue link type relations/desc which can be mapped/linked to the issue in context.\n    Issue in context is the one which is being created/ which is being queried.\n    \"\"\"\n    issueLinkTypeRelations(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueLinkTypeRelationConnection\n    \"\"\"\n    Paginated list of issues which can be related/linked with above issueLinkTypeRelations.\n    \"\"\"\n    issues(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueConnection\n    \"\"\"\n    Search url to list all available issues which can be related/linked with above issueLinkTypeRelations.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents Parent field on a Jira Issue. E.g. JSW Parent, JPO Parent (to be unified).\n\"\"\"\ntype JiraParentIssueField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The parent selected on the Issue or default parent configured for the field.\n    \"\"\"\n    parentIssue: JiraIssue\n    \"\"\"\n    Search url to fetch all available parents for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents security level field on a Jira Issue. Issue Security allows you to control who can and cannot view issues.\n\"\"\"\ntype JiraSecurityLevelField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The security level selected on the Issue or default security level configured for the field.\n    \"\"\"\n    securityLevel: JiraSecurityLevel\n    \"\"\"\n    Paginated list of security level options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    securityLevels(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraSecurityLevelConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents cascading select field. Currently only handles 2 level hierarchy.\n\"\"\"\ntype JiraCascadingSelectField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The cascading option selected on the Issue or default cascading option configured for the field.\n    \"\"\"\n    cascadingOption: JiraCascadingOption\n    \"\"\"\n    Paginated list of cascading options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    cascadingOptions(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraCascadingOptionsConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents issue restriction field on an issue for next gen projects.\n\"\"\"\ntype JiraIssueRestrictionField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The roles selected on the Issue or default roles configured for the field.\n    \"\"\"\n    selectedRoles: [JiraRole] @deprecated(reason: \"Please use selectedRolesConnection instead.\")\n    \"\"\"\n    The roles selected on the Issue or default roles configured for the field.\n    \"\"\"\n    selectedRolesConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraRoleConnection\n    \"\"\"\n    Paginated list of roles available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    roles(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraRoleConnection\n    \"\"\"\n    Search URL to fetch all the roles options for the fields on an issue.\n    \"\"\"\n    searchUrl : String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents color field on a Jira Issue. E.g. issue color, epic color.\n\"\"\"\ntype JiraColorField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The color selected on the Issue or default color configured for the field.\n    \"\"\"\n    color: JiraColor\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents single select field on a Jira Issue.\n\"\"\"\ntype JiraSingleSelectField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The option selected on the Issue or default option configured for the field.\n    \"\"\"\n    fieldOption: JiraOption\n    \"\"\"\n    Paginated list of options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    fieldOptions(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraOptionConnection\n    \"\"\"\n    Search URL to fetch the select option for the field on a Jira Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the check boxes field on a Jira Issue.\n\"\"\"\ntype JiraCheckboxesField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The options selected on the Issue or default options configured for the field.\n    \"\"\"\n    selectedFieldOptions: [JiraOption] @deprecated(reason: \"Please use selectedOptions instead.\")\n    \"\"\"\n    The options selected on the Issue or default options configured for the field.\n    \"\"\"\n    selectedOptions(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraOptionConnection\n    \"\"\"\n    Paginated list of options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    fieldOptions(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraOptionConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the radio select field on a Jira Issue.\n\"\"\"\ntype JiraRadioSelectField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The option selected on the Issue or default option configured for the field.\n    \"\"\"\n    selectedOption: JiraOption\n    \"\"\"\n    Paginated list of options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    fieldOptions(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraOptionConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the Asset field on a Jira Issue.\n\"\"\"\ntype JiraAssetField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The assets selected on the Issue or default assets configured for the field.\n    \"\"\"\n    selectedAssets: [JiraAsset] @deprecated(reason: \"Please use selectedAssetsConnection instead.\")\n    \"\"\"\n    The assets selected on the Issue or default assets configured for the field.\n    \"\"\"\n    selectedAssetsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraAssetConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Search URL to fetch all the assets for the field on a Jira Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the multi-select field on a Jira Issue.\n\"\"\"\ntype JiraMultipleSelectField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The options selected on the Issue or default options configured for the field.\n    \"\"\"\n    selectedFieldOptions: [JiraOption] @deprecated(reason: \"Please use selectedOptions instead.\")\n    \"\"\"\n    The options selected on the Issue or default options configured for the field.\n    \"\"\"\n    selectedOptions(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraOptionConnection\n    \"\"\"\n    Paginated list of options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    fieldOptions(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraOptionConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Search URL to fetch all the teams options for the field on a Jira Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents single group picker field. Allows you to select single Jira group to be associated with an issue.\n\"\"\"\ntype JiraSingleGroupPickerField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The group selected on the Issue or default group configured for the field.\n    \"\"\"\n    selectedGroup: JiraGroup\n    \"\"\"\n    Paginated list of group options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    groups(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraGroupConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Search URL to fetch group picker field on a Jira Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a multiple group picker field on a Jira Issue.\n\"\"\"\ntype JiraMultipleGroupPickerField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The groups selected on the Issue or default groups configured for the field.\n    \"\"\"\n    selectedGroups: [JiraGroup] @deprecated(reason: \"Please use selectedGroupsConnection instead.\")\n    \"\"\"\n    The groups selected on the Issue or default groups configured for the field.\n    \"\"\"\n    selectedGroupsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraGroupConnection\n    \"\"\"\n    Paginated list of group options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    groups(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraGroupConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Search URL to fetch all group pickers of the field on a Jira Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the team field on a Jira Issue. Allows you to select a team to be associated with an issue.\n\"\"\"\ntype JiraTeamField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The team selected on the Issue or default team configured for the field.\n    \"\"\"\n    selectedTeam: JiraTeam\n    \"\"\"\n    Paginated list of team options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    teams(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraTeamConnection\n    \"\"\"\n    Search URL to fetch all the teams options for the field on a Jira Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the Atlassian team field on a Jira Issue. Allows you to select a team to be associated with an issue.\n\"\"\"\ntype JiraAtlassianTeamField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The team selected on the Issue or default team configured for the field.\n    \"\"\"\n    selectedTeam: JiraAtlassianTeam\n    \"\"\"\n    Paginated list of team options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    teams(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraAtlassianTeamConnection\n    \"\"\"\n    Search URL to fetch all the teams options for the field on a Jira Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents Affected Services field.\n\"\"\"\ntype JiraAffectedServicesField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The affected services selected on the Issue or default affected services configured for the field.\n    \"\"\"\n    selectedAffectedServices: [JiraAffectedService] @deprecated(reason: \"Please use selectedAffectedServicesConnection instead.\")\n    \"\"\"\n    The affected services selected on the Issue or default affected services configured for the field.\n    \"\"\"\n    selectedAffectedServicesConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraAffectedServiceConnection\n    \"\"\"\n    Paginated list of affected services available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    affectedServices(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraAffectedServiceConnection\n    \"\"\"\n    Search url to query for all Affected Services when user interact with field.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents CMDB (Configuration Management Database) field on a Jira Issue.\n\"\"\"\ntype JiraCMDBField implements Node & JiraIssueField & JiraIssueFieldConfiguration{\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Whether the field is configured to act as single/multi select CMDB(s) field.\n    \"\"\"\n    isMulti: Boolean\n    \"\"\"\n    Search url to fetch all available cmdb options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    The CMDB objects selected on the Issue or default CMDB objects configured for the field.\n    \"\"\"\n    selectedCmdbObjects: [JiraCmdbObject] @deprecated(reason: \"Please use selectedCmdbObjectsConnection instead.\")\n    \"\"\"\n    The CMDB objects selected on the Issue or default CMDB objects configured for the field.\n    \"\"\"\n    selectedCmdbObjectsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraCmdbObjectConnection\n    \"\"\"\n    Attributes of a CMDB field’s configuration info.\n    \"\"\"\n    cmdbFieldConfig: JiraCmdbFieldConfig\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n    \"\"\"\n    Attributes that are configured for autocomplete search.\n    \"\"\"\n    attributesIncludedInAutoCompleteSearch: [String]\n}\n\n\"\"\"\nRepresents the time tracking field on Jira issue screens.\n\"\"\"\ntype JiraTimeTrackingField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Original Estimate displays the amount of time originally anticipated to resolve the issue.\n    \"\"\"\n    originalEstimate: JiraEstimate\n    \"\"\"\n    Time Remaining displays the amount of time currently anticipated to resolve the issue.\n    \"\"\"\n    remainingEstimate: JiraEstimate\n    \"\"\"\n    Time Spent displays the amount of time that has been spent on resolving the issue.\n    \"\"\"\n    timeSpent: JiraEstimate\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n    \"\"\"\n    This represents the global time tracking settings configuration like working hours and days.\n    \"\"\"\n    timeTrackingSettings: JiraTimeTrackingSettings\n}\n\n\"\"\"\nRepresents a text field created by Connect App.\n\"\"\"\ntype JiraConnectTextField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Content of the connect text field.\n    \"\"\"\n    text: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a number field created by Connect App.\n\"\"\"\ntype JiraConnectNumberField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Connected number.\n    \"\"\"\n    number: Float\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a single select field created by Connect App.\n\"\"\"\ntype JiraConnectSingleSelectField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The option selected on the Issue or default option configured for the field.\n    \"\"\"\n    fieldOption: JiraOption\n    \"\"\"\n    Paginated list of options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    fieldOptions(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraOptionConnection\n    \"\"\"\n    Search url to fetch all available options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a multi-select field created by Connect App.\n\"\"\"\ntype JiraConnectMultipleSelectField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The options selected on the Issue or default options configured for the field.\n    \"\"\"\n    selectedFieldOptions: [JiraOption] @deprecated(reason: \"Please use selectedOptions instead.\")\n    \"\"\"\n    The options selected on the Issue or default options configured for the field.\n    \"\"\"\n    selectedOptions(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraOptionConnection\n    \"\"\"\n    Paginated list of options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    fieldOptions(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraOptionConnection\n    \"\"\"\n    Search url to fetch all available options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents rich text field on a Jira Issue. E.g. description, environment.\n\"\"\"\ntype JiraConnectRichTextField implements Node & JiraIssueField  & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The rich text selected on the Issue or default rich text configured for the field.\n    \"\"\"\n    richText: JiraRichText\n    \"\"\"\n    Determines what editor to render.\n    E.g. default text rendering or wiki text rendering.\n    \"\"\"\n    renderer: String\n    \"\"\"\n    Contains the information needed to add a media content to this field.\n    \"\"\"\n    mediaContext: JiraMediaContext\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents Status field.\n\"\"\"\ntype JiraStatusField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The status selected on the Issue or default status configured for the field.\n    \"\"\"\n    status: JiraStatus!\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a string field created by Forge App.\n\"\"\"\ntype JiraForgeStringField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The text selected on the Issue or default text configured for the field.\n    \"\"\"\n    text: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a strings field created by Forge App.\n\"\"\"\ntype JiraForgeStringsField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The labels selected on the Issue or default labels configured for the field.\n    \"\"\"\n    selectedLabels: [JiraLabel] @deprecated(reason: \"Please use selectedLabelsConnection instead.\")\n    \"\"\"\n    The labels selected on the Issue or default labels configured for the field.\n    \"\"\"\n    selectedLabelsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraLabelConnection\n    \"\"\"\n    Paginated list of label options for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    labels(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraLabelConnection\n    \"\"\"\n    Search url to fetch all available labels options on the field or an Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a number field created by Forge App.\n\"\"\"\ntype JiraForgeNumberField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The number selected on the Issue or default number configured for the field.\n    \"\"\"\n    number: Float\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a date time field created by Forge App.\n\"\"\"\ntype JiraForgeDatetimeField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The datetime selected on the issue or default datetime configured for the field.\n    \"\"\"\n    dateTime: DateTime\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a object field created by Forge App.\n\"\"\"\ntype JiraForgeObjectField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The object string selected on the issue or default datetime configured for the field.\n    \"\"\"\n    object: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a User field created by Forge App.\n\"\"\"\ntype JiraForgeUserField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The user selected on the Issue or default user configured for the field.\n    \"\"\"\n    user: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.user.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    \"\"\"\n    Paginated list of user options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    users(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraUserConnection\n    \"\"\"\n    Search url to fetch all available users options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a Users field created by Forge App.\n\"\"\"\ntype JiraForgeUsersField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The users selected on the Issue or default users configured for the field.\n    \"\"\"\n    selectedUsers: [User] @deprecated(reason: \"Please use selectedUsersConnection instead.\")\n    \"\"\"\n    The users selected on the Issue or default users configured for the field.\n    \"\"\"\n    selectedUsersConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraUserConnection\n    \"\"\"\n    Paginated list of user options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    users(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraUserConnection\n    \"\"\"\n    Search url to fetch all available users options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a Group field created by Forge App.\n\"\"\"\ntype JiraForgeGroupField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The group selected on the Issue or default group configured for the field.\n    \"\"\"\n    selectedGroup: JiraGroup\n    \"\"\"\n    Paginated list of group options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    groups(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraGroupConnection\n    \"\"\"\n    Search url to fetch all available groups for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a Groups field created by Forge App.\n\"\"\"\ntype JiraForgeGroupsField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The groups selected on the Issue or default group configured for the field.\n    \"\"\"\n    selectedGroups: [JiraGroup] @deprecated(reason: \"Please use selectedGroupsConnection instead.\")\n    \"\"\"\n    The groups selected on the Issue or default group configured for the field.\n    \"\"\"\n    selectedGroupsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraGroupConnection\n    \"\"\"\n    Paginated list of group options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    groups(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraGroupConnection\n    \"\"\"\n    Search url to fetch all available groups for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a votes field on a Jira Issue.\n\"\"\"\ntype JiraVotesField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Represents the vote value selected on the Issue.\n    Can be null when voting is disabled.\n    \"\"\"\n    vote: JiraVote\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the Watches system field.\n\"\"\"\ntype JiraWatchesField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Represents the watch value selected on the Issue.\n    Can be null when watching is disabled.\n    \"\"\"\n    watch: JiraWatch\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a flag field on a Jira Issue. E.g. flagged.\n\"\"\"\ntype JiraFlagField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The flag value selected on the Issue.\n    \"\"\"\n    flag: JiraFlag\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents subtasks on a Jira Issue.\nDeprecated type. Please use `childIssues` field under `JiraIssue` instead.\n\"\"\"\ntype JiraSubtasksField implements Node & JiraIssueField & JiraIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Paginated list of subtasks on the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    subtasks(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraIssueConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n}\n\n\"\"\"\nRepresents an attachment field on a Jira Issue.\nDeprecated type. Please use `attachments` field under `JiraIssue` instead.\n\"\"\"\ntype JiraAttachmentsField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Defines the permissions of the attachment collection.\n    \"\"\"\n    permissions: [JiraAttachmentsPermissions]\n    \"\"\"\n    Paginated list of attachments available for the field or the Issue.\n    \"\"\"\n    attachments(\n        startAt: Int\n        maxResults: Int\n        orderField: JiraAttachmentsOrderField,\n        orderDirection: JiraOrderDirection\n    ): JiraAttachmentConnection\n    \"\"\"\n    Defines the maximum size limit (in bytes) of the total of all the attachments which can be associated with this field.\n    \"\"\"\n    maxAllowedTotalAttachmentsSize: Long\n    \"\"\"\n    Contains the information needed to add a media content to this field.\n    \"\"\"\n    mediaContext: JiraMediaContext\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents dev summary for an issue. The identifier for this field is devSummary\n\"\"\"\ntype JiraDevSummaryField implements Node & JiraIssueField {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    A summary of the development information (e.g. pull requests, commits) associated with\n    this issue.\n\n    WARNING: The data returned by this field may be stale/outdated. This field is temporary and\n    will be replaced by a `devSummary` field that returns up-to-date information.\n\n    In the meantime, if you only need data for a single issue you can use the `JiraDevOpsQuery.devOpsIssuePanel`\n    field to get up-to-date dev summary data.\n    \"\"\"\n    devSummaryCache: JiraIssueDevSummaryResult @beta(name: \"JiraDevSummaryIssueField\")\n}\n\n\"\"\"\nRepresents the WorkCategory field on an Issue.\n\"\"\"\ntype JiraWorkCategoryField implements Node & JiraIssueField & JiraIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The WorkCategory selected on the Issue or default WorkCategory configured for the field.\n    \"\"\"\n    workCategory: JiraWorkCategory\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n}\n\n\"\"\"\nRepresents a generic boolean field for an Issue. E.g. JSM alert linking.\n\"\"\"\ntype JiraBooleanField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The value selected on the Issue or default value configured for the field.\n    \"\"\"\n    value: Boolean\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the proforma-forms field for an Issue.\n\"\"\"\ntype JiraProformaFormsField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The proforma-forms selected on the Issue or default major incident configured for the field.\n    \"\"\"\n    proformaForms: JiraProformaForms\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n############################################################\n########### Jira Service Management (JSM) Fields ###########\n############################################################\n\n\"\"\"\nRepresents the Request Feedback custom field on an Issue in a JSM project.\n\"\"\"\ntype JiraServiceManagementRequestFeedbackField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Represents the JSM feedback rating value selected on the Issue.\n    \"\"\"\n    feedback: JiraServiceManagementFeedback\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a datetime field on an Issue in a JSM project.\nDeprecated: Please use `JiraDateTimePickerField`.\n\"\"\"\ntype JiraServiceManagementDateTimeField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The datetime selected on the Issue or default datetime configured for the field.\n    \"\"\"\n    dateTime: DateTime\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the responders entity custom field on an Issue in a JSM project.\n\"\"\"\ntype JiraServiceManagementRespondersField implements Node & JiraIssueField & JiraIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Represents the list of responders.\n    \"\"\"\n    responders: [JiraServiceManagementResponder] @deprecated(reason: \"Please use respondersConnection instead.\")\n    \"\"\"\n    Represents the list of responders.\n    \"\"\"\n    respondersConnection(\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraServiceManagementResponderConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n}\n\n\"\"\"\nRepresents the Incident Linking custom field on an Issue in a JSM project.\nDeprecated: please use `JiraBooleanField` instead.\n\"\"\"\ntype JiraServiceManagementIncidentLinkingField implements Node & JiraIssueField & JiraIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    Represents the JSM incident linked to the issue.\n    \"\"\"\n    incident: JiraServiceManagementIncident\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n}\n\n\"\"\"\nRepresents the Approval custom field on an Issue in a JSM project.\n\"\"\"\ntype JiraServiceManagementApprovalField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. customfield_10001 or description.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The active approval is used to render the approval panel that the users can interact with to approve/decline the request or update approvers.\n    \"\"\"\n    activeApproval: JiraServiceManagementActiveApproval\n    \"\"\"\n    The completed approvals are used to render the approval history section and contains records for all previous approvals for that issue.\n    \"\"\"\n    completedApprovals: [JiraServiceManagementCompletedApproval] @deprecated(reason: \"Please use completedApprovalsConnection instead.\")\n    \"\"\"\n    The completed approvals are used to render the approval history section and contains records for all previous approvals for that issue.\n    \"\"\"\n    completedApprovalsConnection(\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraServiceManagementCompletedApprovalConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a multi user picker field on an Issue in a JSM project. E.g. sd-request-participants.\n\"\"\"\ntype JiraServiceManagementMultipleSelectUserPickerField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The users selected on the Issue or default users configured for the field.\n    \"\"\"\n    selectedUsers: [User] @deprecated(reason: \"Please use selectedUsersConnection instead.\")\n    \"\"\"\n    The users selected on the Issue or default users configured for the field.\n    \"\"\"\n    selectedUsersConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraUserConnection\n    \"\"\"\n    Paginated list of user options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    users(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraUserConnection\n    \"\"\"\n    Search url to fetch all available users options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the Request Language field on an Issue in a JSM project.\n\"\"\"\ntype JiraServiceManagementRequestLanguageField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The language selected on the Issue or default language configured for the field.\n    \"\"\"\n    language: JiraServiceManagementLanguage\n    \"\"\"\n    List of languages available.\n    \"\"\"\n    languages: [JiraServiceManagementLanguage]\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the Customer Organization field on an Issue in a JSM project.\n\"\"\"\ntype JiraServiceManagementOrganizationField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The organizations selected on the Issue or default organizations configured for the field.\n    \"\"\"\n    selectedOrganizations: [JiraServiceManagementOrganization] @deprecated(reason: \"Please use selectedOrganizationsConnection instead.\")\n    \"\"\"\n    The organizations selected on the Issue or default organizations configured for the field.\n    \"\"\"\n    selectedOrganizationsConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraServiceManagementOrganizationConnection\n    \"\"\"\n    Paginated list of organization options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    organizations(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraServiceManagementOrganizationConnection\n    \"\"\"\n    Search url to query for all Customer orgs when user interact with field.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents a JSM people picker field on a Jira Issue. E.g. servicedesk-approvers-list.\n\"\"\"\ntype JiraServiceManagementPeopleField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The people selected on the Issue or default people configured for the field.\n    \"\"\"\n    selectedUsers: [User] @deprecated(reason: \"Please use selectedUsersConnection instead.\")\n    \"\"\"\n    The users selected on the Issue or default users configured for the field.\n    \"\"\"\n    selectedUsersConnection(\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n    ): JiraUserConnection\n    \"\"\"\n    Whether the field is configured to act as single/multi select user(s) field.\n    \"\"\"\n    isMulti: Boolean\n    \"\"\"\n    Paginated list of user options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    users(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraUserConnection\n    \"\"\"\n    Search url to fetch all available users options for the field or the Issue.\n    \"\"\"\n    searchUrl: String\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\n\"\"\"\nRepresents the request type field for an Issue in a JSM project.\n\"\"\"\ntype JiraServiceManagementRequestTypeField implements Node & JiraIssueField & JiraIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The request type selected on the Issue or default request type configured for the field.\n    \"\"\"\n    requestType: JiraServiceManagementRequestType\n    \"\"\"\n    Paginated list of request type options available for the field or the Issue.\n    The server may throw an error if both a forward page (specified with `first`) and a backward page (specified with `last`) are requested simultaneously.\n    \"\"\"\n    requestTypes(\n        \"\"\"\n        Search by the id/name of the item.\n        \"\"\"\n        searchBy: String\n        \"\"\"\n        The number of items after the cursor to be returned in a forward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        first: Int\n        \"\"\"\n        The index based cursor to specify the beginning of the items.\n        If not specified it's assumed as the cursor for the item before the beginning.\n        \"\"\"\n        after: String\n        \"\"\"\n        The number of items before the cursor to be returned in a backward page.\n        If not specified, it is up to the server to determine a page size.\n        \"\"\"\n        last: Int\n        \"\"\"\n        The index based cursor to specify the bottom limit of the items.\n        If not specified it's assumed as the cursor to the item after the last item.\n        \"\"\"\n        before: String\n        \"\"\"\n        Returns the recent items based on user history.\n        \"\"\"\n        suggested: Boolean\n    ): JiraServiceManagementRequestTypeConnection\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n}\n\n\"\"\"\nRepresents the major incident field for an Issue in a JSM project.\n\"\"\"\ntype JiraServiceManagementMajorIncidentField implements Node & JiraIssueField & JiraIssueFieldConfiguration & JiraUserIssueFieldConfiguration {\n    \"\"\"\n    Unique identifier for the field.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    The identifier of the field. E.g. summary, customfield_10001, etc.\n    \"\"\"\n    fieldId: String!\n    \"\"\"\n    The field ID alias (if applicable).\n    \"\"\"\n    aliasFieldId: ID\n    \"\"\"\n    Field type key.\n    \"\"\"\n    type: String!\n    \"\"\"\n    Translated name for the field (if applicable).\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description for the field (if present).\n    \"\"\"\n    description: String\n    \"\"\"\n    The major incident selected on the Issue or default major incident configured for the field.\n    \"\"\"\n    majorIncident: JiraServiceManagementMajorIncident\n    \"\"\"\n    Attributes of an issue field's configuration info.\n    \"\"\"\n    fieldConfig: JiraFieldConfig\n    \"\"\"\n    Configuration changes which a user can apply to a field. E.g. pin or hide the field.\n    \"\"\"\n    userFieldConfig: JiraUserFieldConfig\n}\n\"\"\"\nContainer for all DevOps data for an issue, to be displayed in the DevOps Panel of an issue\n\"\"\"\ntype JiraDevOpsIssuePanel {\n    \"\"\"\n    Specifies the state the DevOps panel in the issue view should be in\n    \"\"\"\n    panelState: JiraDevOpsIssuePanelState\n\n    \"\"\"\n    Specify a banner to show on top of the dev panel. `null` means that no banner should be displayed.\n    \"\"\"\n    devOpsIssuePanelBanner: JiraDevOpsIssuePanelBannerType\n\n    \"\"\"\n    Container for the Dev Summary of this issue\n    \"\"\"\n    devSummaryResult: JiraIssueDevSummaryResult\n\n    \"\"\"\n    Specify if tenant which hosts the project of this issue has installed SCM providers supporting Branch capabilities.\n    \"\"\"\n    hasBranchCapabilities: Boolean\n}\n\n\"\"\"\nThe possible States the DevOps Issue Panel can be in\n\"\"\"\nenum JiraDevOpsIssuePanelState {\n    \"\"\"\n    Panel should be hidden\n    \"\"\"\n    HIDDEN\n    \"\"\"\n    Panel should show the \"not connected\" state to prompt user to integrate tools\n    \"\"\"\n    NOT_CONNECTED\n    \"\"\"\n    Panel should show the available Dev Summary\n    \"\"\"\n    DEV_SUMMARY\n}\n\nenum JiraDevOpsIssuePanelBannerType {\n    \"\"\"\n    Banner that explains how to add issue keys in your commits, branches and PRs\n    \"\"\"\n    ISSUE_KEY_ONBOARDING\n}\n\"\"\"\nRepresents the four avatar sizes' url.\n\"\"\"\ntype JiraAvatar {\n  \"\"\"\n  An extra-small avatar (16x16 pixels).\n  \"\"\"\n  xsmall: String\n  \"\"\"\n  A small avatar (24x24 pixels).\n  \"\"\"\n  small: String\n  \"\"\"\n  A medium avatar (32x32 pixels).\n  \"\"\"\n  medium: String\n  \"\"\"\n  A large avatar (48x48 pixels).\n  \"\"\"\n  large: String\n}\n\"\"\"\nJira component defines a sub-selectin of a project.\n\"\"\"\ntype JiraComponent implements Node {\n    \"\"\"\n    Global identifier for the color.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Component id in digital format.\n    \"\"\"\n    componentId: String!\n    \"\"\"\n    The name of the component.\n    \"\"\"\n    name: String\n    \"\"\"\n    Component description.\n    \"\"\"\n    description: String\n    # TODO: lead, default assignee ...\n}\n\n\"\"\"\nThe connection type for JiraComponent.\n\"\"\"\ntype JiraComponentConnection {\n    \"\"\"\n    The total number of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraComponentEdge]\n}\n\n\"\"\"\nAn edge in a JiraComponent connection.\n\"\"\"\ntype JiraComponentEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraComponent\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nRepresents a Jira worklog.\n\"\"\"\ntype JiraWorklog implements Node {\n    \"\"\"\n    Global identifier for the worklog.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Identifier for the worklog.\n    \"\"\"\n    worklogId: ID!\n    \"\"\"\n    User profile of the original worklog author.\n    \"\"\"\n    author: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.author.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    \"\"\"\n    User profile of the author performing the worklog update.\n    \"\"\"\n    updateAuthor: User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.updateAuthor.accountId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    \"\"\"\n    Time spent displays the amount of time logged working on the issue so far.\n    \"\"\"\n    timeSpent: JiraEstimate\n    \"\"\"\n    Time Remaining displays the amount of time currently anticipated to resolve the issue.\n    \"\"\"\n    remainingEstimate: JiraEstimate\n    \"\"\"\n    Time of worklog creation.\n    \"\"\"\n    created: DateTime!\n    \"\"\"\n    Time of last worklog update.\n    \"\"\"\n    updated: DateTime\n    \"\"\"\n    Date and time when this unit of work was started.\n    \"\"\"\n    startDate: DateTime\n    \"\"\"\n    Either the group or the project role associated with this worklog, but not both.\n    Null means the permission level is unspecified, i.e. the worklog is public.\n    \"\"\"\n    permissionLevel: JiraPermissionLevel\n    \"\"\"\n    Description related to the achieved work.\n    \"\"\"\n    workDescription: JiraRichText\n}\n\n\"\"\"\nThe connection type for JiraWorklog.\n\"\"\"\ntype JiraWorkLogConnection {\n    \"\"\"\n    The approximate count of items in the connection.\n    \"\"\"\n    indicativeCount: Int\n    \"\"\"\n    The page info of the current page of results.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraWorkLogEdge]\n}\n\n\"\"\"\nAn edge in a JiraWorkLog connection.\n\"\"\"\ntype JiraWorkLogEdge {\n    \"\"\"\n    The node at the the edge.\n    \"\"\"\n    node: JiraWorklog\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n\"\"\"\nRepresents the type for representing global time tracking settings.\n\"\"\"\ntype JiraTimeTrackingSettings {\n    \"\"\"\n    Returns whether time tracking implementation is provided by Jira or some external providers.\n    \"\"\"\n    isJiraConfiguredTimeTrackingEnabled: Boolean\n    \"\"\"\n    Number of hours in a working day.\n    \"\"\"\n    workingHoursPerDay: Float\n    \"\"\"\n    Number of days in a working week.\n    \"\"\"\n    workingDaysPerWeek: Float\n    \"\"\"\n    Format in which the time tracking details are presented to the user.\n    \"\"\"\n    defaultFormat: JiraTimeFormat\n    \"\"\"\n    Default unit for time tracking wherever not specified.\n    \"\"\"\n    defaultUnit: JiraTimeUnit\n}\n\n\"\"\"\nDifferent time formats supported for entering & displaying time tracking related data.\n\"\"\"\nenum JiraTimeFormat {\n    \"\"\"\n    E.g. 2 days, 4 hours, 30 minutes\n    \"\"\"\n    PRETTY\n    \"\"\"\n    E.g. 2d 4.5h\n    \"\"\"\n    DAYS\n    \"\"\"\n    E.g. 52.5h\n    \"\"\"\n    HOURS\n}\n\n\"\"\"\nDifferent time units supported for entering & displaying time tracking related data.\nGet the currently configured default duration to use when parsing duration string for time tracking.\n\"\"\"\nenum JiraTimeUnit {\n    \"\"\"\n    When the current duration is in minutes.\n    \"\"\"\n    MINUTE\n    \"\"\"\n    When the current duration is in hours.\n    \"\"\"\n    HOUR\n    \"\"\"\n    When the current duration is in days.\n    \"\"\"\n    DAY\n    \"\"\"\n    When the current duration is in weeks.\n    \"\"\"\n    WEEK\n}\n\n\"\"\"\nRepresents the Jira time tracking estimate type.\n\"\"\"\ntype JiraEstimate {\n    \"\"\"\n    The estimated time in seconds.\n    \"\"\"\n    timeInSeconds: Long\n}\n\"\"\"\nRepresents a collection of system container types to be fetched by passing in an issue id.\n\"\"\"\ninput JiraIssueItemSystemContainerTypeWithIdInput {\n    \"\"\"\n    ARI of the issue.\n    \"\"\"\n    issueId: ID! @ARI(type: \"issue\", owner: \"jira\")\n    \"\"\"\n    The collection of system container types.\n    \"\"\"\n    systemContainerTypes: [JiraIssueItemSystemContainerType!]!\n}\n\n\"\"\"\nRepresents a collection of system container types to be fetched by passing in an issue key and a cloud id.\n\"\"\"\ninput JiraIssueItemSystemContainerTypeWithKeyInput {\n    \"\"\"\n    The {projectKey}-{issueNumber} associated with this Issue.\n    \"\"\"\n    issueKey: String!\n    \"\"\"\n    The cloudId associated with this Issue.\n    \"\"\"\n    cloudId: ID! @CloudID\n    \"\"\"\n    The collection of system container types.\n    \"\"\"\n    systemContainerTypes: [JiraIssueItemSystemContainerType!]!\n}\n\n\"\"\"\nContains the fetched containers or an error.\n\"\"\"\nunion JiraIssueItemContainersResult = JiraIssueItemContainers | QueryError\n\n\"\"\"\nRepresents a related collection of system containers and their items, and the collection of default item locations.\n\"\"\"\ntype JiraIssueItemContainers {\n    #id: ID - An id has not been added yet to allow room to make this a Node in future.\n    \"\"\"\n    The collection of system containers.\n    \"\"\"\n    containers: [JiraIssueItemContainer]\n    \"\"\"\n    The collection of default item locations.\n    \"\"\"\n    defaultItemLocations: [JiraIssueItemLayoutDefaultItemLocation]\n}\n\"\"\"\nRepresents a system container and its items.\n\"\"\"\ntype JiraIssueItemContainer {\n    \"\"\"\n    The system container type.\n    \"\"\"\n    containerType: JiraIssueItemSystemContainerType\n    \"\"\"\n    The system container items.\n    \"\"\"\n    items: JiraIssueItemContainerItemConnection\n}\n\n\"\"\"\nThe connection type for `JiraIssueItemContainerItem`.\n\"\"\"\ntype JiraIssueItemContainerItemConnection {\n    \"\"\"\n    Information about the page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    Deprecated.\n    \"\"\"\n    nodes: [JiraIssueItemContainerItem] @deprecated(reason: \"Please use edges instead.\")\n    \"\"\"\n    The data for edges in the page.\n    \"\"\"\n    edges: [JiraIssueItemContainerItemEdge]\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n}\n\n\"\"\"\nAn edge in a `JiraIssueItemContainerItem` connection.\n\"\"\"\ntype JiraIssueItemContainerItemEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraIssueItemContainerItem\n    \"\"\"\n    The cursor to the edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nThe system container types that are available for placing items.\n\"\"\"\nenum JiraIssueItemSystemContainerType {\n    \"\"\"\n    The container type for the request portal in JSM projects.\n    \"\"\"\n    REQUEST_PORTAL\n    \"\"\"\n    The container type for the issue content.\n    \"\"\"\n    CONTENT\n    \"\"\"\n    The container type for the issue primary context.\n    \"\"\"\n    PRIMARY\n    \"\"\"\n    The container type for the issue secondary context.\n    \"\"\"\n    SECONDARY\n    \"\"\"\n    The container type for the issue context.\n    \"\"\"\n    CONTEXT\n    \"\"\"\n    The container type for the issue hidden items.\n    \"\"\"\n    HIDDEN_ITEMS\n    \"\"\"\n    The container type for the request in JSM projects.\n    \"\"\"\n    REQUEST\n}\n\n\"\"\"\nRepresents a default location rule for items that are not configured in a container.\nExample: A user picker is added to a screen. Until the administrator places it in the layout, the item is placed in\nthe location specified by the 'PEOPLE' category. The categories available may vary based on the project type.\n\"\"\"\ntype JiraIssueItemLayoutDefaultItemLocation {\n    \"\"\"\n    A destination container type or the ID of a destination group.\n    \"\"\"\n    containerLocation: String\n    \"\"\"\n    The item location rule type.\n    \"\"\"\n    itemLocationRuleType: JiraIssueItemLayoutItemLocationRuleType\n}\n\n\"\"\"\nRepresents the type of items that the default location rule applies to.\n\"\"\"\nenum JiraIssueItemLayoutItemLocationRuleType {\n    \"\"\"\n    People items. For example: user pickers, team pickers or group picker.\n    \"\"\"\n    PEOPLE\n    \"\"\"\n    Multiline text items. For example: a description field or custom multi-line test fields.\n    \"\"\"\n    MULTILINE_TEXT\n    \"\"\"\n    Time tracking items. For example: estimate, original estimate or time tracking panels.\n    \"\"\"\n    TIMETRACKING\n    \"\"\"\n    Date items. For example: date or time related fields.\n    \"\"\"\n    DATES\n    \"\"\"\n    Any other item types not covered by previous item types.\n    \"\"\"\n    OTHER\n}\n\n\"\"\"\nRepresents the items that can be placed in any system container.\n\"\"\"\nunion JiraIssueItemContainerItem = JiraIssueItemFieldItem | JiraIssueItemPanelItem | JiraIssueItemGroupContainer | JiraIssueItemTabContainer\n\n\"\"\"\nRepresents the items that can be placed in any group container.\n\"\"\"\nunion JiraIssueItemGroupContainerItem = JiraIssueItemFieldItem | JiraIssueItemPanelItem\n\n\"\"\"\nRepresents the items that can be placed in any tab container.\n\"\"\"\nunion JiraIssueItemTabContainerItem = JiraIssueItemFieldItem\n\n\"\"\"\nRepresents a collection of items that are held in a tab container.\n\"\"\"\ntype JiraIssueItemTabContainer {\n    \"\"\"\n    The tab container ID.\n    \"\"\"\n    tabContainerId: String!\n    \"\"\"\n    The tab container name.\n    \"\"\"\n    name: String\n    \"\"\"\n    The tab container items.\n    \"\"\"\n    items: JiraIssueItemTabContainerItemConnection\n}\n\n\"\"\"\nRepresents a collection of items that are held in a group container.\n\"\"\"\ntype JiraIssueItemGroupContainer {\n    \"\"\"\n    The group container ID.\n    \"\"\"\n    groupContainerId: String!\n    \"\"\"\n    The group container name.\n    \"\"\"\n    name: String\n    \"\"\"\n    Whether a group container is minimized.\n    \"\"\"\n    minimised: Boolean\n    \"\"\"\n    The group container items.\n    \"\"\"\n    items: JiraIssueItemGroupContainerItemConnection\n}\n\n\"\"\"\nThe connection type for `JiraIssueItemGroupContainerItem`.\n\"\"\"\ntype JiraIssueItemGroupContainerItemConnection {\n    \"\"\"\n    Information about the page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    Deprecated.\n    \"\"\"\n    nodes: [JiraIssueItemGroupContainerItem] @deprecated(reason: \"Please use edges instead.\")\n    \"\"\"\n    The data for edges in the page.\n    \"\"\"\n    edges: [JiraIssueItemGroupContainerItemEdge]\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n}\n\n\"\"\"\nAn edge in a `JiraIssueItemGroupContainerItem` connection.\n\"\"\"\ntype JiraIssueItemGroupContainerItemEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraIssueItemGroupContainerItem\n    \"\"\"\n    The cursor to the edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nThe connection type for `JiraIssueItemTabContainerItem`.\n\"\"\"\ntype JiraIssueItemTabContainerItemConnection {\n    \"\"\"\n    Information about the page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    Deprecated.\n    \"\"\"\n    nodes: [JiraIssueItemTabContainerItem] @deprecated(reason: \"Please use edges instead.\")\n    \"\"\"\n    The data for edges in the page.\n    \"\"\"\n    edges: [JiraIssueItemTabContainerItemEdge]\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n}\n\n\"\"\"\nAn edge in a `JiraIssueItemTabContainerItem` connection.\n\"\"\"\ntype JiraIssueItemTabContainerItemEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraIssueItemTabContainerItem\n    \"\"\"\n    The cursor to the edge.\n    \"\"\"\n    cursor: String!\n}\n\n\"\"\"\nRepresents a reference to a field by field ID, used for laying out fields on an issue.\n\"\"\"\ntype JiraIssueItemFieldItem {\n    \"\"\"\n    The field item ID.\n    \"\"\"\n    fieldItemId: String!\n    \"\"\"\n    Represents the position of the field in the container.\n    Aid to preserve the field position when combining items in `PRIMARY` and `REQUEST` container types before saving in JSM projects.\n    \"\"\"\n    containerPosition: Int!\n}\n\n\"\"\"\nRepresents a reference to a panel by panel ID, used for laying out panels on an issue.\n\"\"\"\ntype JiraIssueItemPanelItem {\n    \"\"\"\n    The panel item ID.\n    \"\"\"\n    panelItemId: String!\n}\n\"\"\"\nAn enum representing possible values for Major Incident JSM field.\n\"\"\"\nenum JiraServiceManagementMajorIncident {\n    MAJOR_INCIDENT\n}\"\"\"\nResponder field of a JSM issue, can be either a user or a team.\n\"\"\"\nunion JiraServiceManagementResponder = JiraServiceManagementUserResponder | JiraServiceManagementTeamResponder\n\n\"\"\"\nA user as a responder\n\"\"\"\ntype JiraServiceManagementUserResponder {\n    user: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.user.accountId\"}], identifiedBy : \"accountId\", batchSize : 90)\n}\n\n\"\"\"\nAn Opsgenie team as a responder\n\"\"\"\ntype JiraServiceManagementTeamResponder {\n    \"\"\"\n    Opsgenie team id.\n    \"\"\"\n    teamId : String\n    \"\"\"\n    Opsgenie team name.\n    \"\"\"\n    teamName : String\n}\n\n\"\"\"\nThe connection type for JiraServiceManagementResponder.\n\"\"\"\ntype JiraServiceManagementResponderConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraServiceManagementResponderEdge]\n}\n\n\"\"\"\nAn edge in a JiraServiceManagementResponder connection.\n\"\"\"\ntype JiraServiceManagementResponderEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraServiceManagementResponder\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\"\"\"\nRepresents a Jira Group.\n\"\"\"\ntype JiraGroup implements Node {\n    \"\"\"\n    The global identifier of the group in ARI format.\n    \"\"\"\n    id: ID!\n    \"Group Id, can be null on group creation\"\n    groupId: String!\n    \"Name of the Group\"\n    name: String!\n}\n\n\"\"\"\nThe connection type for JiraGroup.\n\"\"\"\ntype JiraGroupConnection {\n    \"\"\"\n    The total count of items in the connection.\n    \"\"\"\n    totalCount: Int\n    \"\"\"\n    Information about the current page. Used to aid in pagination.\n    \"\"\"\n    pageInfo: PageInfo!\n    \"\"\"\n    A list of edges in the current page.\n    \"\"\"\n    edges: [JiraGroupEdge]\n}\n\n\"\"\"\nAn edge in a JiraGroupConnection connection.\n\"\"\"\ntype JiraGroupEdge {\n    \"\"\"\n    The node at the edge.\n    \"\"\"\n    node: JiraGroup\n    \"\"\"\n    The cursor to this edge.\n    \"\"\"\n    cursor: String!\n}\n","jira_projects":"type Subscription {\n    \"\"\"\n    This is a subscriptions use case for #a4t-makkuro\n\n    \"\"\"\n    onJiraIssueCreatedForUser(cloudId : ID! accountId : ID! projectType: JiraProjectType! = SOFTWARE filter: JiraProjectFilterInput!): OnJiraIssueCreatedForUserResponseType\n    @eventMatchingStrategy(name: JIRA_BY_CLOUD_BY_PROJECT_TYPE_BY_ACCOUNT)\n    @eventAvis(names: [AVI_JIRA_ISSUE_CREATED])\n    @eventEnrichmentQuery(name: \"jira.allJiraProjects\")\n}\n\n# TODO: remove this temp type when JiraQuery.issueById is prod ready\ntype IssueAndProject {\n    issueId: ID! @deprecated(reason: \"Will be replaced by jiraQuery.issueById \")\n    projectId: ID! @deprecated(reason: \"Will be replaced by jiraQuery.issueById \")\n}\n\nunion OnJiraIssueCreatedForUserResponseType = JiraProjectConnection | IssueAndProject\ntype JiraQuery {\n    jiraProject(\n        id: ID! @ARI(type: \"project\", owner: \"jira\")\n    ): JiraProject\n\n    \"\"\"\n    Returns a paginated connection of projects that meet the provided filter criteria\n    \"\"\"\n    allJiraProjects(\n        \"\"\"\n        The identifier that indicates that cloud instance this data is to be fetched for\n        \"\"\"\n        cloudId: ID! @CloudID,\n\n        \"\"\"The number of items to be sliced away to target between the after and before cursors\"\"\"\n        first: Int,\n        last: Int,\n\n        \"\"\"The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning\"\"\"\n        after: String,\n        before: String,\n\n        \"\"\"the filter criteria that is used to filter the projects\"\"\"\n        filter: JiraProjectFilterInput!\n    ): JiraProjectConnection\n\n    \"\"\"\n    Returns a paginated connection of project categories\n    \"\"\"\n    allJiraProjectCategories(\n        \"\"\"\n        The identifier that indicates that cloud instance this data is to be fetched for\n        \"\"\"\n        cloudId: ID! @CloudID,\n        \"\"\"The number of items to be sliced away to target between the after and before cursors\"\"\"\n        first: Int,\n        last: Int,\n\n        \"\"\"The index based cursor to specify the beginning of the items, if not specified it's assumed as the cursor for the item before the beginning\"\"\"\n        after: String,\n        before: String,\n    ): JiraProjectCategoryConnection\n}\n\ninput JiraProjectFilterInput {\n    \"\"\"the project types that can be used to filter list of projects\"\"\"\n    types: [JiraProjectType!]\n\n    \"\"\"the project category that can be used to filter list of projects\"\"\"\n    projectCategoryId: ID @ARI(type: \"project-category\", owner: \"jira\")\n\n    \"\"\" Filter the results using a literal string. Projects witha matching key or name are returned (case insensitive).\"\"\"\n    keyword: String\n\n    \"\"\"the sort criteria that is used while filtering the projects\"\"\"\n    sortBy: JiraProjectSortInput\n}\n\n\"\"\"The sort direction of the collection\"\"\"\nenum SortDirection {\n    \"\"\"Sort in ascending order\"\"\"\n    ASC\n    \"\"\"Sort in descending order\"\"\"\n    DESC\n}\n\nenum JiraProjectSortField {\n    \"\"\"sorts by project name\"\"\"\n    NAME\n\n    \"\"\"sorts by project key\"\"\"\n    KEY\n\n    \"\"\"sorts by lead\"\"\"\n    LEAD\n\n    \"\"\"sorts by category\"\"\"\n    CATEGORY\n}\n\ninput JiraProjectSortInput {\n    sortBy: JiraProjectSortField\n    order: SortDirection\n}\n\ntype JiraProjectCategoryConnection {\n    \"\"\"Information about the current page. Used to aid in pagination.\"\"\"\n    pageInfo: PageInfo!\n    \"\"\"A list of edges in the current page.\"\"\"\n    edges: [JiraProjectCategoryEdge]\n}\n\ntype JiraProjectCategoryEdge {\n    \"\"\"The item at the end of the edge\"\"\"\n    node: JiraProjectCategory\n    \"\"\"A cursor for use in pagination\"\"\"\n    cursor: String!\n}\n","marketplace_app_catalog":"type Query  {\n    \"\"\"\n    Get MarketplacePartner by id.\n    \"\"\"\n    marketplacePartner(id: ID!): MarketplacePartner\n    \"\"\"\n    Get MarketplaceApp by appId.\n    \"\"\"\n    marketplaceApp(appId: ID!): MarketplaceApp\n    \"\"\"\n    Get MarketplaceApp by appKey\n    \"\"\"\n    marketplaceAppByKey(appKey: String!): MarketplaceApp\n    \"\"\"\n    Get MarketplaceApp by cloud app's Id.\n    \"\"\"\n    marketplaceAppByCloudAppId(cloudAppId: ID!): MarketplaceApp\n    \"\"\"\n    Get Pricing Plan for a marketplace entity\n    \"\"\"\n    marketplacePricingPlan(appId: ID!, hostingType: AtlassianProductHostingType!, pricingPlanOptions: MarketplacePricingPlanOptions): MarketplacePricingPlan\n    \"\"\"\n    Get Atlassian marketplace user details\n    \"\"\"\n    marketplaceUser: MarketplaceUser\n}\n\ntype Mutation {\n    \"\"\"\n    Start watching Marketplace App for updates\n    \"\"\"\n    watchMarketplaceApp(id: ID!): WatchMarketplaceAppPayload\n    \"\"\"\n    Stop watching Marketplace App for updates\n    \"\"\"\n    unwatchMarketplaceApp(id: ID!): UnwatchMarketplaceAppPayload\n}\n\ninput MarketplaceAppVersionFilter {\n    \"\"\"\n    Options of Atlassian product instance hosting types for which app versions are available.\n    \"\"\"\n    productHostingOptions: [AtlassianProductHostingType!]\n    \"\"\"\n    Visibility of the version.\n    \"\"\"\n    visibility: MarketplaceAppVersionVisibility\n    \"\"\"\n    Excludes hidden versions as per Marketplace\n    \"\"\"\n    excludeHiddenIn: MarketplaceLocation\n    \"\"\"\n    Unique id of Cloud App's version\n    \"\"\"\n    cloudAppVersionId: ID\n}\n\n\"\"\"\nMarketplace Partners provide apps and integrations available for purchase on the Atlassian Marketplace that extend the power of Atlassian products.\n\"\"\"\ntype MarketplacePartner {\n    \"\"\"\n    Unique id of a Marketplace Partner.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Name of Marketplace Partner\n    \"\"\"\n    name: String!\n    \"\"\"\n    An SEO-friendly URL pathname for this Marketplace Partner\n    \"\"\"\n    slug: String!\n    \"\"\"\n    Marketplace Partner's contact details\n    \"\"\"\n    contactDetails: MarketplacePartnerContactDetails\n    \"\"\"\n    Marketplace Partner’s address\n    \"\"\"\n    address: MarketplacePartnerAddress\n    \"\"\"\n    Marketplace Partner support information\n    \"\"\"\n    support: MarketplacePartnerSupport\n    \"\"\"\n    Marketplace Programs that this Marketplace Partner has participated in.\n    \"\"\"\n    programs: MarketplacePartnerPrograms\n    \"\"\"\n    Tells if the Marketplace partner is an Atlassian’s internal one.\n    \"\"\"\n    partnerType: MarketplacePartnerType\n}\n\n\"\"\"\nTells if the Marketplace partner is an Atlassian’s internal one.\n\"\"\"\nenum MarketplacePartnerType {\n    ATLASSIAN_INTERNAL\n}\n\n\"\"\"\nMarketplace Partner's address\n\"\"\"\ntype MarketplacePartnerAddress {\n    \"\"\"\n    Line 1 of Marketplace Partner’s address\n    \"\"\"\n    line1: String\n    \"\"\"\n    Line 2 of Marketplace Partner’s address\n    \"\"\"\n    line2: String\n    \"\"\"\n    City of Marketplace Partner’s address\n    \"\"\"\n    city: String\n    \"\"\"\n    State of Marketplace Partner’s address\n    \"\"\"\n    state: String\n    \"\"\"\n    Country of Marketplace Partner’s address\n    \"\"\"\n    country: String\n    \"\"\"\n    Postal code of Marketplace Partner’s address\n    \"\"\"\n    postalCode: String\n}\n\n\"\"\"\nMarketplace Partner's support information.\n\"\"\"\ntype MarketplacePartnerSupport {\n    \"\"\"\n    Marketplace Partner’s support contact details\n    \"\"\"\n    contactDetails: MarketplacePartnerSupportContact\n    \"\"\"\n    Marketplace Partner’s support availability details\n    \"\"\"\n    availability: MarketplacePartnerSupportAvailability\n}\n\n\n\"\"\"\nMarketplace Partner's contact information\n\"\"\"\ntype MarketplacePartnerContactDetails {\n    \"\"\"\n    Marketplace Partner’s contact email id\n    \"\"\"\n    emailId: String\n    \"\"\"\n    Marketplace Partner’s contact phone number\n    \"\"\"\n    phoneNumber: String\n    \"\"\"\n    Marketplace Partner’s homepage URL\n    \"\"\"\n    homepageUrl: String\n    \"\"\"\n    Marketplace Partner's other contact details\n    \"\"\"\n    otherContactDetails: String\n}\n\n\"\"\"\nMarketplace Partner's support contact information\n\"\"\"\ntype MarketplacePartnerSupportContact {\n    \"\"\"\n    Marketplace Partner’s support contact email id\n    \"\"\"\n    emailId: String\n    \"\"\"\n    Marketplace Partner’s support contact phone number\n    \"\"\"\n    phoneNumber: String\n    \"\"\"\n    Marketplace Partner’s support website URL\n    \"\"\"\n    websiteUrl: URL\n}\n\n\"\"\"\nMarketplace Partner's support availability information\n\"\"\"\ntype MarketplacePartnerSupportAvailability {\n    \"\"\"\n    Days of week when Marketplace Partner support is available, as per ISO 8601 format for weekday, i.e. `1-7` for Monday - Sunday\n    \"\"\"\n    daysOfWeek: [Int!]!\n    \"\"\"\n    Tells if the support is available for all 24 hours\n    \"\"\"\n    isAvailable24Hours: Boolean!\n    \"\"\"\n    Support availability start time, in ISO time format `hh:mm` e.g, 23:25\n    \"\"\"\n    startTime: String\n    \"\"\"\n    Support availability end time, in ISO time format `hh:mm` e.g, 23:25\n    \"\"\"\n    endTime: String\n    \"\"\"\n    Support availability timezone for startTime and endTime values. e.g, `America/Los_Angeles`\n    \"\"\"\n    timezone: String!\n    \"\"\"\n    Support availability timezone in ISO 8601 format e.g. `+00:00`, `+05:30`, etc\n    \"\"\"\n    timezoneOffset: String!\n    \"\"\"\n    Dates on which MarketplacePartner’s support is not available due to holiday\n    \"\"\"\n    holidays: [MarketplacePartnerSupportHoliday!]!\n}\n\n\"\"\"\nMarketplace Partner's support holiday\n\"\"\"\ntype MarketplacePartnerSupportHoliday {\n    \"\"\"\n    Holiday’s title\n    \"\"\"\n    title: String!\n    \"\"\"\n    Tells whether it occurs one time or is annual.\n    \"\"\"\n    holidayFrequency: MarketplacePartnerSupportHolidayFrequency!\n    \"\"\"\n    Support holiday date, follows ISO date format `YYYY-MM-DD` e.g, 2020-08-12\n    \"\"\"\n    date: String!\n}\n\n\"\"\"\nTells whether support is on holiday only one time or if it repeats annually.\n\"\"\"\nenum MarketplacePartnerSupportHolidayFrequency {\n    ONE_TIME, ANNUAL\n}\n\n\"\"\"\nMarketplace Programs that this Marketplace Partner has participated in.\n\"\"\"\ntype MarketplacePartnerPrograms {\n    isCloudAppSecuritySelfAssessmentDone: Boolean\n}\n\n\"\"\"\nA piece of code that modifies the functionality or look and feel of Atlassian products\n\"\"\"\ntype MarketplaceApp {\n    \"\"\"\n    A numeric identifier for an app in marketplace.\n    \"\"\"\n    appId: ID!\n    \"\"\"\n    A human-readable identifier for an app in marketplace.\n    \"\"\"\n    appKey: String!\n    \"\"\"\n    App's name in Marketplace.\n    \"\"\"\n    name: String!\n    \"\"\"\n    Unique id of the Marketplace Partner that provided this app in Marketplace.\n    \"\"\"\n    partnerId: ID!\n    \"\"\"\n    Marketplace Partner that provided this app in Marketplace.\n    \"\"\"\n    partner: MarketplacePartner\n    @hydrated(service: \"marketplace_app_catalog\" field: \"marketplacePartner\" arguments : [\n        { name : \"id\", value : \"$source.partnerId\"}] identifiedBy : \"id\"\n    )\n    \"\"\"\n    Status of the app entity in Marketplace.\n    \"\"\"\n    entityStatus: MarketplaceEntityStatus!\n    \"\"\"\n    Timestamp when the app was created, in ISO time format `yyyy-MM-dd'T'HH:mm:ss.SSS'Z'` e.g, 2013-10-02T22:05:56.767Z\n    \"\"\"\n    createdAt: DateTime!\n    \"\"\"\n    Status of app’s listing in Marketplace.\n    \"\"\"\n    listingStatus: MarketplaceListingStatus!\n    \"\"\"\n    Options of Atlassian product instance hosting types for which app versions are available.\n    \"\"\"\n    productHostingOptions(excludeHiddenIn: MarketplaceLocation): [AtlassianProductHostingType!]!\n    \"\"\"\n    App's versions in Marketplace system.\n    \"\"\"\n    versions(filter: MarketplaceAppVersionFilter, first: Int, after: String): MarketplaceAppVersionConnection!\n    \"\"\"\n    A short phrase that summarizes what the app does.\n    \"\"\"\n    tagline: String\n    \"\"\"\n    A summary describing the app functionality.\n    \"\"\"\n    summary: String\n    \"\"\"\n    App's logo\n    \"\"\"\n    logo: MarketplaceListingImage\n    \"\"\"\n    Link to a statement explaining how the app uses and secures user data.\n    \"\"\"\n    privacyPolicyUrl: URL\n    \"\"\"\n    When enabled providing customers with a place to ask questions or browse answers about the app.\n    \"\"\"\n    isAtlassianCommunityEnabled: Boolean!\n    \"\"\"\n    An SEO-friendly URL pathname for the app\n    \"\"\"\n    slug: String!\n    \"\"\"\n    Summary of the reviews for an app\n    \"\"\"\n    reviewSummary: MarketplaceAppReviewSummary\n    \"\"\"\n    Distribution information about the app\n    \"\"\"\n    distribution: MarketplaceAppDistribution\n    @hydrated(service: \"marketplace_app_catalog\" field: \"marketplaceAppDistribution\" arguments : [\n        { name : \"appKey\", value : \"$source.appKey\"}] identifiedBy : \"id\"\n    )\n    \"\"\"\n    Information of watchers of a Marketplace app\n    \"\"\"\n    watchersInfo: MarketplaceAppWatchersInfo\n    @hydrated(service: \"marketplace_app_catalog\" field: \"marketplaceAppWatchersInfo\" arguments : [\n        { name : \"appKey\", value : \"$source.appKey\"}] identifiedBy : \"id\"\n    )\n    \"\"\"\n    Link to the issue tracker for the app\n    \"\"\"\n    issueTrackerUrl: URL\n    \"\"\"\n    Link to the support ticket system for the app\n    \"\"\"\n    supportTicketSystemUrl: URL\n    \"\"\"\n    Link to the status page for the app\n    \"\"\"\n    statusPageUrl: URL\n    \"\"\"\n    A URL where users can find Community Support resources for the app\n    \"\"\"\n    forumsUrl: URL\n    \"\"\"\n    A URL where users can find documentation platform hosted by the partner\n    \"\"\"\n    wikiUrl: URL\n    \"\"\"\n    Marketplace App Programs that this App has enrolled in.\n    \"\"\"\n    programs: MarketplaceAppPrograms\n    \"\"\"\n    Marketing Labels for the app\n    \"\"\"\n    marketingLabels: [String!]!\n    \"\"\"\n    Google analytics id used for tracking visitors to the app.\n    \"\"\"\n    googleAnalyticsId: String\n    \"\"\"\n    Segment write key for capturing user journey funnel for the app.\n    \"\"\"\n    segmentWriteKey: String\n    \"\"\"\n    List of categories associated with an app.\n    \"\"\"\n    categories: [MarketplaceAppCategory!]!\n    \"\"\"\n    JSD widget key\n    \"\"\"\n    jsdWidgetKey: String\n}\n\n\"\"\"\nMarketplace App Programs that this Marketplace App has enrolled into.\n\"\"\"\ntype MarketplaceAppPrograms {\n    cloudFortified: MarketplaceCloudFortified\n    bugBountyParticipant: MarketplaceBugBountyParticipant\n}\n\n\"\"\"\nDetails of Bug bounty program\n\"\"\"\ntype MarketplaceBugBountyParticipant{\n    \"\"\"\n    Indicates that Bug bounty program applicable on cloud hosting version of addon\n    \"\"\"\n    cloud: MarketplaceBugBountyProgramHostingStatus\n    \"\"\"\n    Indicates that Bug bounty program applicable on server hosting version of addon\n    \"\"\"\n    server: MarketplaceBugBountyProgramHostingStatus\n    \"\"\"\n    Indicates that Bug bounty program applicable on dataCenter hosting version of addon\n    \"\"\"\n    dataCenter: MarketplaceBugBountyProgramHostingStatus\n}\n\ntype MarketplaceBugBountyProgramHostingStatus{\n    \"\"\"\n    Indicates status for Bug bounty program\n    \"\"\"\n    status: MarketplaceProgramStatus\n}\n\n\"\"\"\nDetails of Cloud fortified program.\"\"\"\ntype MarketplaceCloudFortified {\n    \"\"\"\n    Indicates status for Cloud fortified program (Deprecated field: Use field `programStatus`)\n    \"\"\"\n    status: MarketplaceCloudFortifiedStatus\n\n    \"\"\"\n    Indicates status for Cloud fortified program\n    \"\"\"\n    programStatus: MarketplaceProgramStatus\n}\n\nenum MarketplaceProgramStatus {\n    APPROVED, REJECTED, NOT_A_PARTICIPANT\n}\n\nenum MarketplaceCloudFortifiedStatus {\n    APPROVED, REJECTED, NOT_A_PARTICIPANT\n}\n\ntype MarketplaceAppVersionConnection {\n    edges: [MarketplaceAppVersionEdge]\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype MarketplaceAppVersionEdge @renamed(from: \"MarketplaceAppVersionConnectionEdge\") {\n    cursor: String!\n    node: MarketplaceAppVersion\n}\n\n\"\"\"\nStatus of an entity in Marketplace system\n\"\"\"\nenum MarketplaceEntityStatus {\n    ACTIVE, ARCHIVED\n}\n\n\"\"\"\nStatus of app’s listing in Marketplace.\n\"\"\"\nenum MarketplaceListingStatus {\n    PRIVATE, PUBLIC, SUBMITTED, READY_TO_LAUNCH, REJECTED\n}\n\n\"\"\"\nVersion of App in Marketplace system\n\"\"\"\ntype MarketplaceAppVersion {\n    \"\"\"\n    A unique number for each version, higher value indicates more recent version of the app.\n    \"\"\"\n    buildNumber: ID!\n    \"\"\"\n    This version identifier is for end users, more than one app versions can have same version value.\n    \"\"\"\n    version: String!\n    \"\"\"\n    Tells whether this version has official support.\n    \"\"\"\n    isSupported: Boolean!\n    \"\"\"\n    Awards, customer testimonials, accolades, language support, or other details about this app.\n    \"\"\"\n    moreDetails: String,\n    \"\"\"\n    The ID of a YouTube video explaining the features of this app version.\n    \"\"\"\n    youtubeId: String\n    \"\"\"\n    Feature highlights to be displayed on this app's listing\n    \"\"\"\n    highlights: [MarketplaceListingHighlight!]\n    \"\"\"\n    Feature screenshots to be displayed on this app's listing\n    \"\"\"\n    screenshots: [MarketplaceListingScreenshot!]\n    \"\"\"\n    Hero image to be displayed on this app's listing\n    \"\"\"\n    heroImage: MarketplaceListingImage\n    \"\"\"\n    Payment model for integrating an app with an Atlassian product.\n    \"\"\"\n    paymentModel: MarketplaceAppPaymentModel!\n    \"\"\"\n    List of Hosting types where compatible Atlassian product instances are installed.\n    \"\"\"\n    productHostingOptions: [AtlassianProductHostingType!]!\n    \"\"\"\n    Visibility of this version of Marketplace app.\n    \"\"\"\n    visibility: MarketplaceAppVersionVisibility!\n    \"\"\"\n    All deployment related properties for this app version\n    \"\"\"\n    deployment: MarketplaceAppDeployment!\n    \"\"\"\n    License type for this version of Marketplace app.\n    \"\"\"\n    licenseType: MarketplaceAppVersionLicenseType\n    \"\"\"\n    A URL to access the app's source code license agreement. This agreement governs how the app's source code is used.\n    \"\"\"\n    sourceCodeLicenseUrl: URL\n    \"\"\"\n    A URL where users can find version-specific or general documentation about the app.\n    \"\"\"\n    documentationUrl: URL\n    \"\"\"\n    Link to the terms that give end users the right to use the app.\n    \"\"\"\n    endUserLicenseAgreementUrl: URL\n    \"\"\"\n    A URL where customers can purchase this app.\n    \"\"\"\n    purchaseUrl: URL\n    \"\"\"\n    A URL where customers can access more information about this app.\n    \"\"\"\n    learnMoreUrl: URL\n    \"\"\"\n    Version release date\n    \"\"\"\n    releaseDate: DateTime!\n    \"\"\"\n    Version release summary\n    \"\"\"\n    releaseSummary: String\n    \"\"\"\n    Version release notes\n    \"\"\"\n    releaseNotes: String\n    \"\"\"\n    URL with further details about this version release (link available for versions listed before October 2013)\n    \"\"\"\n    releaseNotesUrl: URL\n}\n\ntype MarketplaceListingHighlight {\n    \"\"\"\n    A short action-oriented highlight title.\n    \"\"\"\n    title: String\n    \"\"\"\n    Key feature summary.\n    \"\"\"\n    summary: String\n    \"\"\"\n    Highlight's screenshot\n    \"\"\"\n    screenshot: MarketplaceListingScreenshot!\n    \"\"\"\n    Highlight's cropped screenshot\n    \"\"\"\n    croppedScreenshot: MarketplaceListingImage!\n    \"\"\"\n    Screenshot's explaination\n    \"\"\"\n    caption: String\n}\n\ntype MarketplaceListingScreenshot {\n    \"\"\"\n    Screenshot's explaination\n    \"\"\"\n    caption: String\n    \"\"\"\n    Screenshot's image file\n    \"\"\"\n    image: MarketplaceListingImage!\n}\n\n\"\"\"\nImage to be displayed on a listing in Marketplace\n\"\"\"\ntype MarketplaceListingImage {\n    \"\"\"\n    Original image file uploaded\n    \"\"\"\n    original: MarketplaceImageFile!\n    \"\"\"\n    Image scaled to get required size\n    \"\"\"\n    scaled: MarketplaceImageFile!\n    \"\"\"\n    High resolution image file\n    \"\"\"\n    highResolution: MarketplaceImageFile\n}\n\n\"\"\"\nAn image file in Atlassian Marketplace system\n\"\"\"\ntype MarketplaceImageFile {\n    \"\"\"\n    Unique id of the file in Atlassian Marketplace system\n    \"\"\"\n    id: String!\n    \"\"\"\n    Width of the image\n    \"\"\"\n    width: Int!\n    \"\"\"\n    Height of the image\n    \"\"\"\n    height: Int!\n}\n\n\"\"\"\nHosting type where Atlassian product instance is installed.\n\"\"\"\nenum AtlassianProductHostingType {\n    CLOUD, SERVER, DATA_CENTER\n}\n\n\"\"\"\nVisibility of the Marketplace app's version\n\"\"\"\nenum MarketplaceAppVersionVisibility {\n    PRIVATE, PUBLIC\n}\n\n\"\"\"\nMarketplace location\n\"\"\"\nenum MarketplaceLocation {\n    WEBSITE, IN_PRODUCT\n}\n\n\"\"\"\nAll Atlassian Products an app version is compatible with\n\"\"\"\ninterface CompatibleAtlassianProduct {\n    \"\"\"\n    Unique id for this Atlassian product in Marketplace system\n    \"\"\"\n    id: ID! @deprecated(reason: \"Use field `atlassianProduct.id`\")\n    \"\"\"\n    Name of Atlassian product\n    \"\"\"\n    name: String! @deprecated(reason: \"Use field `atlassianProduct.name`\")\n    \"\"\"\n    Atlassian product\n    \"\"\"\n    atlassianProduct: MarketplaceSupportedAtlassianProduct\n    @hydrated(service: \"marketplace_app_catalog\" field: \"atlassianProduct\" arguments : [\n        { name : \"id\", value : \"$source.id\"}] identifiedBy : \"id\"\n    )\n}\n\n\"\"\"\nAll Atlassian Cloud Products an app version is compatible with\n\"\"\"\ntype CompatibleAtlassianCloudProduct implements CompatibleAtlassianProduct {\n    \"\"\"\n    Unique id for this Atlassian product in Marketplace system\n    \"\"\"\n    id: ID! @deprecated(reason: \"Use field `atlassianProduct.id`\")\n    \"\"\"\n    Name of Atlassian product\n    \"\"\"\n    name: String! @deprecated(reason: \"Use field `atlassianProduct.name`\")\n    \"\"\"\n    Atlassian product\n    \"\"\"\n    atlassianProduct: MarketplaceSupportedAtlassianProduct\n    @hydrated(service: \"marketplace_app_catalog\" field: \"atlassianProduct\" arguments : [\n        { name : \"id\", value : \"$source.id\"}] identifiedBy : \"id\"\n    )\n}\n\n\"\"\"\nAll Atlassian DataCenter Products an app version is compatible with\n\"\"\"\ntype CompatibleAtlassianDataCenterProduct implements CompatibleAtlassianProduct {\n    \"\"\"\n    Unique id for this Atlassian product in Marketplace system\n    \"\"\"\n    id: ID! @deprecated(reason: \"Use field `atlassianProduct.id`\")\n    \"\"\"\n    Name of Atlassian product\n    \"\"\"\n    name: String! @deprecated(reason: \"Use field `atlassianProduct.name`\")\n    \"\"\"\n    Atlassian product\n    \"\"\"\n    atlassianProduct: MarketplaceSupportedAtlassianProduct\n    @hydrated(service: \"marketplace_app_catalog\" field: \"atlassianProduct\" arguments : [\n        { name : \"id\", value : \"$source.id\"}] identifiedBy : \"id\"\n    )\n    \"\"\"\n    Minimum version number of Atlassian Product\n    \"\"\"\n    minimumVersion: String!\n    \"\"\"\n    Maximum version number of Atlassian Product\n    \"\"\"\n    maximumVersion: String!\n}\n\n\"\"\"\nAll Atlassian Server Products an app version is compatible with\n\"\"\"\ntype CompatibleAtlassianServerProduct implements CompatibleAtlassianProduct {\n    \"\"\"\n    Unique id for this Atlassian product in Marketplace system\n    \"\"\"\n    id: ID! @deprecated(reason: \"Use field `atlassianProduct.id`\")\n    \"\"\"\n    Name of Atlassian product\n    \"\"\"\n    name: String! @deprecated(reason: \"Use field `atlassianProduct.name`\")\n    \"\"\"\n    Atlassian product\n    \"\"\"\n    atlassianProduct: MarketplaceSupportedAtlassianProduct\n    @hydrated(service: \"marketplace_app_catalog\" field: \"atlassianProduct\" arguments : [\n        { name : \"id\", value : \"$source.id\"}] identifiedBy : \"id\"\n    )\n    \"\"\"\n    Minimum version number of Atlassian Product\n    \"\"\"\n    minimumVersion: String!\n    \"\"\"\n    Maximum version number of Atlassian Product\n    \"\"\"\n    maximumVersion: String!\n}\n\n\"\"\"\nAll deployment related properties for an app version\n\"\"\"\ninterface MarketplaceAppDeployment {\n    \"\"\"\n    All Atlassian Products this app version is compatible with\n    \"\"\"\n    compatibleProducts: [CompatibleAtlassianProduct!]!\n}\n\n\"\"\"\nPlugins1 app deployment properties\n\"\"\"\ntype MarketplacePlugins1AppDeployment implements MarketplaceAppDeployment {\n    \"\"\"\n    All Atlassian Products this app version is compatible with\n    \"\"\"\n    compatibleProducts: [CompatibleAtlassianProduct!]!\n    \"\"\"\n    Tells whether there is a deployment artifact\n    \"\"\"\n    isDeploymentArtifactAvailable: Boolean!\n}\n\n\"\"\"\nPlugins2 app deployment properties\n\"\"\"\ntype MarketplacePlugins2AppDeployment implements MarketplaceAppDeployment {\n    \"\"\"\n    All Atlassian Products this app version is compatible with\n    \"\"\"\n    compatibleProducts: [CompatibleAtlassianProduct!]!\n    \"\"\"\n    Tells whether there is a deployment artifact\n    \"\"\"\n    isDeploymentArtifactAvailable: Boolean!\n}\n\n\"\"\"\nConnect app deployment properties\n\"\"\"\ntype MarketplaceConnectAppDeployment implements MarketplaceAppDeployment {\n    \"\"\"\n    All Atlassian Products this app version is compatible with\n    \"\"\"\n    compatibleProducts: [CompatibleAtlassianProduct!]!\n    \"\"\"\n    Tells whether there Atlassian Connect app's descriptor file is available\n    \"\"\"\n    isDescriptorFileAvailable: Boolean!\n    \"\"\"\n    Level of access to an Atlassian product that this app can request\n    \"\"\"\n    scopes: [ConnectAppScope!]!\n}\n\n\"\"\"\nCloud app deployment properties\n\"\"\"\ntype MarketplaceCloudAppDeployment implements MarketplaceAppDeployment {\n    \"\"\"\n    All Atlassian Products this app version is compatible with\n    \"\"\"\n    compatibleProducts: [CompatibleAtlassianProduct!]!\n    \"\"\"\n    Cloud App’s unique identifier\n    \"\"\"\n    cloudAppId: ID!\n    \"\"\"\n    Unique identifier for the Cloud app's production environment\n    \"\"\"\n    cloudAppEnvironmentId: ID!\n    \"\"\"\n    Unique identifier of Cloud App’s version\n    \"\"\"\n    cloudAppVersionId: ID!\n    \"\"\"\n    Level of access to an Atlassian product that this app can request\n    \"\"\"\n    scopes: [CloudAppScope!]!\n}\n\n\"\"\"\nInstructional app deployment properties\n\"\"\"\ntype MarketplaceInstructionalAppDeployment implements MarketplaceAppDeployment {\n    \"\"\"\n    All Atlassian Products this app version is compatible with\n    \"\"\"\n    compatibleProducts: [CompatibleAtlassianProduct!]!\n    \"\"\"\n    Tells whether this instructional app has a url for its binary\n    \"\"\"\n    isBinaryUrlAvailable: Boolean!\n    \"\"\"\n    Steps for installing the instructional app\n    \"\"\"\n    instructions: [MarketplaceAppDeploymentStep!]\n}\n\n\"\"\"\nStep for installing the instructional app\n\"\"\"\ntype MarketplaceAppDeploymentStep {\n    \"\"\"\n    Text/html to explain the step\n    \"\"\"\n    instruction: String!\n    \"\"\"\n    Screenshot of the step\n    \"\"\"\n    screenshot: MarketplaceListingImage\n}\n\n\"\"\"\nWorkflow app deployment properties\n\"\"\"\ntype MarketplaceWorkflowAppDeployment implements MarketplaceAppDeployment {\n    \"\"\"\n    All Atlassian Products this app version is compatible with\n    \"\"\"\n    compatibleProducts: [CompatibleAtlassianProduct!]!\n    \"\"\"\n    Tells whether this workflow app has a JWB file\n    \"\"\"\n    isWorkflowDataFileAvailable: Boolean!\n}\n\n\"\"\"\nLevel of access to an Atlassian product that an app can request\n\"\"\"\ntype ConnectAppScope {\n    \"\"\"\n    Unique id of the scope (Deprecated field: Use field `id`)\n    \"\"\"\n    scopeId: ID! @deprecated(reason: \"Use field `id`\")\n    \"\"\"\n    Unique id of the scope\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Name of the scope\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description of the level of access to an Atlassian product that an app can request\n    \"\"\"\n    capability: String!\n    \"\"\"\n    Name of Atlassian product to which this scope applies\n    \"\"\"\n    atlassianProductName: String!\n}\n\n\"\"\"\nLevel of access to an Atlassian product that a cloud app can request\n\"\"\"\ntype CloudAppScope {\n    \"\"\"\n    Unique id of the scope\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Name of the scope\n    \"\"\"\n    name: String!\n    \"\"\"\n    Description of the level of access to an Atlassian product that an app can request\n    \"\"\"\n    capability: String!\n}\n\n\"\"\"\nPayment model for integrating an app with an Atlassian product.\n\"\"\"\nenum MarketplaceAppPaymentModel {\n    FREE, PAID_VIA_PARTNER, PAID_VIA_ATLASSIAN\n}\n\n\"\"\"\nLicense type for an app version\n\"\"\"\ntype MarketplaceAppVersionLicenseType {\n    \"\"\"\n    Unique ID for the license type.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Display name for the license type.\n    \"\"\"\n    name: String!\n    \"\"\"\n    A URL where customers can see the license terms.\n    \"\"\"\n    link: URL\n}\n\n\"\"\"\nSummary of the reviews for an app\n\"\"\"\ntype MarketplaceAppReviewSummary {\n    \"\"\"\n    Review score of the app\n    \"\"\"\n    score: Float @deprecated(reason: \"Use field `rating`\")\n    \"\"\"\n    Rating of the app\n    \"\"\"\n    rating: Float\n    \"\"\"\n    Number of reviews for app\n    \"\"\"\n    count: Int\n}\n\n\"\"\"\nMarketplace app's distribution information\n\"\"\"\ntype MarketplaceAppDistribution {\n    \"\"\"\n    Number of app downloads\n    \"\"\"\n    downloadCount: Int,\n    \"\"\"\n    Number of app installations\n    \"\"\"\n    installationCount: Int\n    \"\"\"\n    Tells whether the app is preinstalled on Server and Data Center\n    \"\"\"\n    isPreinstalledInServerDC: Boolean!\n    \"\"\"\n    Tells whether the app is preinstalled on Cloud\n    \"\"\"\n    isPreinstalledInCloud: Boolean!\n}\n\n\"\"\"\nInformation of watchers of a Marketplace app\n\"\"\"\ntype MarketplaceAppWatchersInfo {\n    \"\"\"\n    Tells if the user is subscribed to the app updates\n    \"\"\"\n    isUserWatchingApp: Boolean!\n    \"\"\"\n    Number of users watching the app\n    \"\"\"\n    watchersCount: Int!\n}\n\ntype WatchMarketplaceAppPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype UnwatchMarketplaceAppPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n\"\"\"\nAtlassian Product for which apps are available in Marketplace\n\"\"\"\ntype MarketplaceSupportedAtlassianProduct {\n    \"\"\"\n    Unique id of Atlassian product entity in marketplace system\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Name of Atlassian product\n    \"\"\"\n    name: String!\n    \"\"\"\n    Hosting options where the product is available\n    \"\"\"\n    hostingOptions: [AtlassianProductHostingType!]!\n}\n\n\"\"\"\nCategory associated with an app\n\"\"\"\ntype MarketplaceAppCategory {\n    \"\"\"\n    Name of the category\n    \"\"\"\n    name: String!\n}\n\nextend type App {\n    marketplaceApp: MarketplaceApp\n    @hydrated(service: \"marketplace_app_catalog\" field: \"marketplaceAppByCloudAppId\" arguments : [\n        { name : \"cloudAppId\", value : \"$source.id\"}] identifiedBy : \"id\"\n    )\n}\n\n\"\"\"\nOption parameters to fetch pricing plan for a marketplace entity\n\"\"\"\ninput MarketplacePricingPlanOptions {\n    \"\"\"\n    Period for which Pricing Plan is to be fetched. Defaults to MONTHLY\n    \"\"\"\n    billingCycle: MarketplaceBillingCycle\n    \"\"\"\n    Fetch pricing plan with status: LIVE, PENDING, DRAFT. Unless, pricing plan will be fetched based on user access\n    \"\"\"\n    planStatus: MarketplacePricingPlanStatus\n    \"\"\"\n    Currency code (ISO 4217) to return the amount in pricing items. Either of currencyCode and countryCode is needed. If currency code is not present, fallback to country code to fetch currency\n    \"\"\"\n    currencyCode: String\n    \"\"\"\n    Country code (ISO 3166-1 alpha-2) of the client. Either of currencyCode and countryCode is needed. If both are not present, fallback to default currency - USD\n    \"\"\"\n    countryCode: String\n}\n\n\"\"\"\nPricing plan for a marketplace entity\n\"\"\"\ntype MarketplacePricingPlan {\n    \"\"\"\n    Billing cycle of the marketplace entity\n    \"\"\"\n    billingCycle: MarketplaceBillingCycle!\n    \"\"\"\n    Currency code for all items in the pricing plan. Defaults to USD\n    \"\"\"\n    currency: String!\n    \"\"\"\n    Status of the plan : LIVE, PENDING or DRAFT\n    \"\"\"\n    status: MarketplacePricingPlanStatus!\n    \"\"\"\n    Tiered Pricing for the plan\n    \"\"\"\n    tieredPricing: MarketplaceTieredPricing!\n}\n\n\"\"\"\nTiered pricing object for pricing plan\n\"\"\"\ntype MarketplaceTieredPricing {\n    \"\"\"\n    Type of the tier\n    \"\"\"\n    tierType: MarketplacePricingTierType!\n    \"\"\"\n    Mode of the tier : GRADUATED (progressive PUP), VOLUME (constant for all users)\n    \"\"\"\n    tiersMode: MarketplacePricingTierMode!\n    \"\"\"\n    List of pricing items\n    \"\"\"\n    items: [MarketplacePricingItem!]!\n}\n\n\"\"\"\nPricing items based on tiers\n\"\"\"\ntype MarketplacePricingItem {\n    \"\"\"\n    The lower limit for unit count (number of users of Jira, remote agents in Bamboo) defining this pricing tier\n    \"\"\"\n    floor: Int!\n    \"\"\"\n    The upper limit for unit count (number of users of Jira, remote agents in Bamboo) defining this pricing tier. Null in case of highest tier\n    \"\"\"\n    ceiling: Int\n    \"\"\"\n    The amount that a customer pays for a license at this tier\n    \"\"\"\n    amount: Float!\n    \"\"\"\n    Policy of the tier : BLOCK (FLAT) or PER_UNIT (PUP)\n    \"\"\"\n    policy: MarketplacePricingTierPolicy!\n}\n\n\"\"\"\nMode of the tier : GRADUATED (progressive PUP), VOLUME (constant for all users)\n\"\"\"\nenum  MarketplacePricingTierMode {\n    GRADUATED, VOLUME\n}\n\n\"\"\"\nPolicy of the tier : BLOCK (FLAT) or PER_UNIT (PUP)\n\"\"\"\nenum MarketplacePricingTierPolicy {\n    BLOCK, PER_UNIT\n}\n\n\"\"\"\nType of the tier\n\"\"\"\nenum MarketplacePricingTierType {\n    USER_TIERED,\n    REMOTE_AGENT_TIERED\n}\n\n\"\"\"\nBilling cycle for which pricing plan applies\n\"\"\"\nenum MarketplaceBillingCycle {\n    ANNUAL,\n    MONTHLY\n}\n\n\"\"\"\nStatus of the plan : LIVE, PENDING or DRAFT\n\"\"\"\nenum MarketplacePricingPlanStatus {\n    LIVE,\n    PENDING,\n    DRAFT\n}\n\n\"\"\"\nAtlassian Marketplace User\n\"\"\"\ntype MarketplaceUser {\n    \"\"\"\n    The accountId of the user.\n    \"\"\"\n    id: ID!\n    \"\"\"\n    Permissions that a MarketplaceUser can have on MarketplaceApps\n    \"\"\"\n    appPermissions(appId: ID!): [MarketplaceAppPermission!]!\n}\n\n\"\"\"\nPermissions that a MarketplaceUser can have on MarketplaceApps\n\"\"\"\nenum MarketplaceAppPermission {\n    MANAGE_APP_DETAILS\n}\n\n","dvcs":"type Query {\n    dvcs: DvcsQuery @namespaced\n}\n\ntype DvcsQuery {\n    \"\"\"\n    Return the Bitbucket workspaces linked to this site.  User must\n    have access to Jira on this site.\n    *** This function will be deprecated in the near future. ***\n    \"\"\"\n    bitbucketWorkspacesLinkedToSite(\n        cloudId: ID! @CloudID\n        first: Int = 20\n        after: String\n    ): DvcsBitbucketWorkspaceConnection\n}\n\ntype DvcsBitbucketWorkspaceConnection {\n    edges: [DvcsBitbucketWorkspaceEdge]\n    nodes: [BitbucketWorkspace]  @hydrated(service: \"bitbucket\" field: \"bitbucket.bitbucketWorkspace\" arguments : [{ name:\"id\" value:\"$source.edges.node\"}] identifiedBy : \"id\")\n    pageInfo: PageInfo!\n}\n\ntype DvcsBitbucketWorkspaceEdge {\n    cursor: String!\n    \"\"\"\n    The Bitbucket workspace.\n    \"\"\"\n    node: BitbucketWorkspace @hydrated(service: \"bitbucket\" field: \"bitbucket.bitbucketWorkspace\" arguments : [{ name:\"id\" value:\"$source.node\"}] identifiedBy : \"id\")\n}\n\n\n","polaris":"\n\n\n\ntype PolarisDelegationToken {\n    url: String!\n    token: String!\n    expires: String!\n}\n\ninput PolarisGroupValueInput {\n     label: String      # a label value (which has no identity besides its string value)\n     id: String         # a Jira entity object id\n}\n\n\ntype PolarisGroupValue {\n     label: String      # a label value (which has no identity besides its string value)\n     id: String         # a Jira entity object id\n}\n\ninput PolarisFilterInput {\n    jql: String\n}\n\nenum PolarisVisualizationType {\n    TABLE\n    BOARD\n    TWOXTWO\n    MATRIX\n    TIMELINE\n}\n\nenum PolarisSortOrder {\n    ASC\n    DESC\n}\n\nenum PolarisValueOperator {\n    GT\n    LT\n    GTE\n    LTE\n    EQ\n}\n\ntype PolarisValueRule {\n    value: String!\n    operator: PolarisValueOperator!\n}\n\ntype PolarisDecoration {\n    id: ID!\n\n    \"\"\"\n    The decoration can be applied when a value matches all rules in this array.\n    \"\"\"\n    valueRules: [PolarisValueRule!]!\n\n    \"\"\"\n    The decoration to apply to a matched value.\n    \"\"\"\n    valueDecoration: PolarisValueDecoration!\n}\n\ntype PolarisValueDecoration {\n    emoji: String\n    backgroundColor: String\n    highlightContainer: Boolean\n}\n\n\ntype Mutation {\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisTermsConsent(input: UpdatePolarisTermsConsentInput!): UpdatePolarisTermsConsentPayload @beta(name: \"polaris-v0\")\n\n}\n\ntype UpdatePolarisTermsConsentPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype PolarisTermsConsent {\n    consented: Boolean!\n    requiresMarketingConsent: Boolean!\n    locale: String!\n}\n\ninput UpdatePolarisTermsConsentInput {\n    \"\"\"\n    Cloud ID where the terms were displayed to the user\n    \"\"\"\n    cloudID: String! @CloudID\n\n    \"\"\"\n    URL visited by user when terms of service were accepted\n    \"\"\"\n    url: URL!\n\n    \"\"\"\n    The text accepted by user as terms of service\n    \"\"\"\n    displayedText: String!\n\n    \"\"\"\n    Has the user granted general marketing consent\n    \"\"\"\n    marketingConsent: Boolean!\n\n    \"\"\"\n    Country code for the user locale\n    \"\"\"\n    locale: String!\n}\n\ninput AddPolarisColumnInput {\n    \"\"\"\n    The column to insert this column before.  If not specified,\n    the new column is added to the right of all columns.\n    \"\"\"\n    before: ID\n\n    \"\"\"\n    The id of the field to add\n    \"\"\"\n    field: ID!\n\n    \"\"\"\n    The format to use for the rendering the field's data\n    \"\"\"\n    format: String\n\n    \"\"\"\n    The width to configure on the column\n    \"\"\"\n    width: Int\n\n    \"\"\"\n    An override for the column heading; if not specified,\n    the field label should be used.\n    \"\"\"\n    heading: String\n}\n\ninput RemovePolarisColumnInput {\n    \"\"\"\n    The column position to be removed\n    \"\"\"\n    column: ID!\n}\n\n\n\n#==============================================================================================\n#    _                                                       __     ___     _ _\n#   / \\   _ __   ___  _ __  _   _ _ __ ___   ___  _   _ ___  \\ \\   / (_)___(_) |_ ___  _ __\n#  / _ \\ | '_ \\ / _ \\| '_ \\| | | | '_ ` _ \\ / _ \\| | | / __|  \\ \\ / /| / __| | __/ _ \\| '__|\n# / ___ \\| | | | (_) | | | | |_| | | | | | | (_) | |_| \\__ \\   \\ V / | \\__ \\ | || (_) | |\n#/_/   \\_\\_| |_|\\___/|_| |_|\\__, |_| |_| |_|\\___/ \\__,_|___/    \\_/  |_|___/_|\\__\\___/|_|\n#                           |___/\n#\n# Mutations\n\nextend type Mutation {\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisAnonymousVisitorHash(id: ID!): CreatePolarisAnonymousVisitorHashPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    deletePolarisAnonymousVisitorHash(hash: String!): DeletePolarisAnonymousVisitorHashPayload @beta(name: \"polaris-v0\")\n\n}\n\n## Types\n\ntype PolarisAnonymousVisitorViewHash {\n    cloudId: String!\n    projectId: Int!\n    projectKey: String!\n    viewId: Int!\n    hash: String!\n}\n\nunion PolarisAnonymousVisitorHash = PolarisAnonymousVisitorViewHash\n\ntype CreatePolarisAnonymousVisitorHashPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisAnonymousVisitorHash\n}\n\ntype DeletePolarisAnonymousVisitorHashPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n#===============================\n#        _\n#       / \\   _ __  _ __  ___\n#      / _ \\ | '_ \\| '_ \\/ __|\n#     / ___ \\| |_) | |_) \\__ \\\n#    /_/   \\_\\ .__/| .__/|___/\n#            |_|   |_|\n#\n# Mutations\n\nextend type Mutation {\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    resolvePolarisObject(input: ResolvePolarisObjectInput!): ResolvePolarisObjectPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    invokePolarisObject(input: InvokePolarisObjectInput!): InvokePolarisObjectPayload @beta(name: \"polaris-v0\")\n\n}\n\n## Types\n\nenum PolarisResolvedObjectAuthType {\n    OAUTH2\n    API_KEY\n}\n\ntype ResolvedPolarisObjectExternalAuth {\n    key: String!\n    displayName: String!\n    url: String!\n}\n\ntype ResolvedPolarisObjectAuth {\n    hint: String\n    type: PolarisResolvedObjectAuthType!\n}\n\ntype ResolvedPolarisObject {\n    statusCode: Int!\n    externalAuth: [ResolvedPolarisObjectExternalAuth!]\n    auth: ResolvedPolarisObjectAuth\n    oauthClientId: String\n    body: JSON\n}\n\ntype PolarisConnectApp {\n    \"\"\"\n    the oauthClientId, which functions as the unique identifier id of CaaS app\n    for our purposes\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    name of CaaS app\n    \"\"\"\n    name: String!\n\n    \"\"\"\n    avatarUrl of CaaS app\n    \"\"\"\n    avatarUrl: String!\n\n    \"\"\"\n    oauthClientId of CaaS app\n    \"\"\"\n    oauthClientId: String!\n\n    \"\"\"\n    appId is the CaaS app id.  Note that a single app may have\n    multiple oauth client ids, notably when deployed in different\n    environments such as staging and production\n    \"\"\"\n    appId: String\n}\n\ninput ResolvePolarisObjectInput {\n    \"\"\"\n    Project ARI\n    \"\"\"\n    project: ID!\n\n    \"\"\"\n    Issue ARI\n    \"\"\"\n    issue: ID!\n\n    \"\"\"\n    Resource url that will be used to unfurl data\n    \"\"\"\n    resourceUrl: String!\n\n    \"\"\"\n    Custom auth token that will be used in unfurl request and saved if request was successful\n    \"\"\"\n    authToken: String\n}\n\ninput InvokePolarisObjectInput {\n    \"\"\"\n    Project ARI\n    \"\"\"\n    project: ID!\n\n    \"\"\"\n    Issue ARI\n    \"\"\"\n    issue: ID!\n\n    \"\"\"\n    OauthClientId of CaaS app\n    \"\"\"\n    oauthClientId: String!\n\n    \"\"\"\n    Snippet data\n    \"\"\"\n    data: JSON!\n\n    \"\"\"\n    Snippet action\n    \"\"\"\n    action: JSON!\n\n    \"\"\"\n    Resource url that will be used to unfurl data\n    \"\"\"\n    resourceUrl: String!\n\n    \"\"\"\n    Custom auth token that will be used in unfurl request and saved if request was successful\n    \"\"\"\n    authToken: String\n}\n\ntype ResolvePolarisObjectPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    response: ResolvedPolarisObject\n}\n\ntype InvokePolarisObjectPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    response: ResolvedPolarisObject\n}\n\n#=========================================================\n#      ____                                     _\n#     / ___|___  _ __ ___  _ __ ___   ___ _ __ | |_ ___\n#    | |   / _ \\| '_ ` _ \\| '_ ` _ \\ / _ \\ '_ \\| __/ __|\n#    | |__| (_) | | | | | | | | | | |  __/ | | | |_\\__ \\\n#     \\____\\___/|_| |_| |_|_| |_| |_|\\___|_| |_|\\__|___/\n#\n# Mutations\n\nextend type Mutation {\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisComment(input: CreatePolarisCommentInput!): CreatePolarisCommentPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisComment(input: UpdatePolarisCommentInput!): UpdatePolarisCommentPayload @beta(name: \"polaris-v0\")\n\n}\n\n## Types\nenum PolarisCommentKind {\n    VIEW\n    PLAY_CONTRIBUTION\n}\n\ninput CreatePolarisCommentInput {\n    kind: PolarisCommentKind\n    subject: ID\n    content: JSON\n}\n\ninput UpdatePolarisCommentInput {\n    id: ID!\n    delete: Boolean\n    content: JSON\n}\n\ntype PolarisComment {\n    id: ID!\n    kind: PolarisCommentKind!\n    subject: ID!\n    updated: String!\n    created: String!\n    aaid: String!\n    content: JSON!\naccount: User  => hydrated from identity.users(accountIds: $source.aaid) object identified by accountId, batch size 90,\n}\n\n##### Payload #####\ntype UpdatePolarisCommentPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisComment\n}\n\ntype CreatePolarisCommentPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisComment\n}\n\n#=================================\n#     _____ _      _     _\n#    |  ___(_) ___| | __| |___\n#    | |_  | |/ _ \\ |/ _` / __|\n#    |  _| | |  __/ | (_| \\__ \\\n#    |_|   |_|\\___|_|\\__,_|___/\n#\n#Mutations\n\nextend type Mutation {\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisStandardField(input: CreatePolarisStandardFieldInput!): CreatePolarisStandardFieldPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisCalculatedField(input: CreatePolarisCalculatedField!): CreatePolarisCalculatedFieldPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisCalculatedField(input: UpdatePolarisCalculatedFieldInput!): UpdatePolarisCalculatedFieldPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisFieldDescription(input: UpdatePolarisFieldDescriptionInput!): UpdatePolarisFieldDescriptionPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisFieldEmoji(input: UpdatePolarisFieldEmojiInput!): UpdatePolarisFieldEmojiPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    deletePolarisField(id: ID!): DeletePolarisFieldPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisFieldOptionWeight(input: UpdatePolarisFieldOptionWeightInput!): UpdatePolarisFieldOptionWeightPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    deletePolarisFieldOption(input: DeletePolarisFieldOptionInput!): DeletePolarisFieldOptionPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisDecoration(input: CreatePolarisDecorationInput!): CreatePolarisDecorationPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisDecoration(id: ID!, update: UpdatePolarisDecorationInput, delete: DeletePolarisDecorationInput): UpdatePolarisDecorationPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    deletePolarisDecoration(id: ID!, ): DeletePolarisDecorationPayload @beta(name: \"polaris-v0\")\n\n}\n\n## Types\n\nenum PolarisFieldType {\n    PolarisIdeaStringField\n    PolarisIdeaDateTimeField\n    PolarisIdeaDateField\n    PolarisIdeaUserField\n    PolarisIdeaUsersField\n    PolarisIdeaOptionField\n    PolarisIdeaOptionsField\n    PolarisIdeaLabelsField\n    PolarisIdeaNumberField\n}\n\nenum BuiltinPolarisIdeaField {\n  # Jira fields\n  ASSIGNEE\n  CREATED\n  CREATOR\n  DESCRIPTION\n  ISSUE_ID\n  ISSUE_TYPE\n  KEY\n  LABELS\n  REPORTER\n  STATUS\n  SUMMARY\n  UPDATED\n  VOTES\n\n  # Jira Product Discovery fields\n  ARCHIVED\n  ARCHIVED_BY\n  ARCHIVED_ON\n  DELIVERY_PROGRESS\n  DELIVERY_STATUS\n  ISSUE_COMMENTS\n  LINKED_ISSUES\n  NUM_DATA_POINTS\n}\n\ntype PolarisPresentation {\n    \"\"\"\n    The type of presentation.  Intended to select the UI control for this\n    field.\n    \"\"\"\n    type: String!\n    parameters: JSON\n}\n\n\"\"\"\nAn PolarisIdeaField is a unit of information that can be instantiated\nfor an PolarisIdea.\n\"\"\"\ninterface PolarisIdeaField {\n    \"\"\"\n    The fully qualified globally unique id (ARI) for this field\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    The key of this field in the `fields` structure if it is a Jira\n    field.  Not set for things that don't appear in the fields section\n    of a Jira issue object, such as \"key\"\n    \"\"\"\n    jiraFieldKey: String\n\n    \"\"\"\n    A short identifier suitable for at least within this project,\n    but only supplied for fields that are returned via an PolarisIdea's fields\n    attribute.  If not present, this field represents a builtin field\n    on PolarisIdea.\n    \"\"\"\n    fieldId: Int        @deprecated\n\n    \"\"\"\n    The name of the field built in to PolarisIdea, if this field represents\n    a builtin field.\n    \"\"\"\n    fieldName: String        @deprecated\n\n    label: String!\n\n    \"\"\"\n    Are values in this field directly editable?  Some integrations\n    might bring in data that is not directly editable.\n    \"\"\"\n    editable: Boolean!\n\n    \"\"\"\n    Can rows be sorted by this field?  Some fields are not commensurate\n    and hence can't be sorted.\n    \"\"\"\n    sortable: Boolean!\n\n    \"\"\"\n    Is this field suitable for grouping operations like Board view?\n    (i.e., may it appear in the groupBy field in a view?)\n    \"\"\"\n    groupable: Boolean!\n\n    \"\"\"\n    Is this field suitable for linear operations like plotting on an axis?\n    (i.e., may it appear in the x or y field in a view?)\n    \"\"\"\n    linearizable: Boolean!\n\n    \"\"\"\n    What is the default sort order?  This is the order you get on\n    \"first click\" of the column, and also the semantics of \"ORDER BY\"\n    without an ASC or DESC qualifier.\n    \"\"\"\n    defaultSortOrder: PolarisSortOrder\n\n    \"\"\"\n    Values stored in this field can be decorated with visual elements\n    (emojis, colors, backgrounds) for distinction. For discrete types\n    such as Single/Multi select these will typically be exact matches\n    on the static values allowed by the field. For orderable types\n    such as strings, dates, numbers, etc decorations will more\n    commonly be applied using ranges.\n    \"\"\"\n    decorations: [PolarisDecoration!]\n\n    \"\"\"\n    Refines how we should present the field.  For example, a number\n    field might be presented with a Rating picker.\n    \"\"\"\n    presentation: PolarisPresentation\n\n    \"\"\"\n    The formula for calculated fields; null for regular (stored) fields\n    \"\"\"\n    formula: JSON\n\n    \"\"\"\n    Description\n    \"\"\"\n    description: String\n\n    \"\"\"\n    Field emoji\n    \"\"\"\n    emoji: String\n\n    \"\"\"\n    An identifier for fields built in to Jira or Polaris.  For example, \"Key\" and\n    \"Delivery progress\" are builtin fields.\n    \"\"\"\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaStringField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaDocumentField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaDateField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaDateTimeField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaStatusField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    linearizable: Boolean!\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaKeyField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    linearizable: Boolean!\n    jiraFieldKey: String  # null, since the key field is not a jira field\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaArchivedField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    archivedOption: PolarisIdeaFieldOption!\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaArchivedByField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaArchivedOnField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaIssueIdField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    linearizable: Boolean!\n    jiraFieldKey: String  # null, since the issueid is not a jira field\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaIssueTypeField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    linearizable: Boolean!\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaVotesField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    linearizable: Boolean!\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaNumberField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaLabelsField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaUserField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaUsersField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaOptionField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    options: [PolarisIdeaFieldOption!]\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaOptionsField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    options: [PolarisIdeaFieldOption!]\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaFieldOption {\n    id: ID!\n    label: String!\n    weight: Int!\n}\n\ntype PolarisIdeaLinkedIssuesField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaLinkedIssuesProgressField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype PolarisIdeaIssueCommentsField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\n# this is obsolete, but needs to be removed in the opposite order of\n# being added (i.e., from JFE first, then AGG, and finally here)\n\ntype PolarisIdeaSpecialField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    linearizable: Boolean!\n    specialType: String\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON\n    presentation: PolarisPresentation\n    description: String\n    emoji: String\n    builtin: BuiltinPolarisIdeaField\n}\n\ntype CreatePolarisDecorationPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisDecoration\n}\n\ntype UpdatePolarisDecorationPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisDecoration\n}\n\ntype DeletePolarisDecorationPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ninput CreatePolarisStandardFieldInput {\n  project: ID!\n  ideaType: ID!\n  name: String!\n  fieldType: PolarisFieldType!\n  presentation: PolarisPresentationInput\n}\n\ninput PolarisPresentationInput {\n  type: String!\n  parameters: JSON\n}\n\ninput CreatePolarisCalculatedField {\n  project: ID!\n  label: String!\n  formula: JSON!\n  presentation: PolarisPresentationInput\n}\n\ninput UpdatePolarisCalculatedFieldInput {\n  project: ID!\n  field: ID!\n  label: String!\n  formula: JSON!\n  presentation: PolarisPresentationInput\n}\n\ninput UpdatePolarisFieldDescriptionInput {\n  field: ID!\n  ideaType: ID!\n  description: String!\n}\n\ninput UpdatePolarisFieldEmojiInput {\n  field: ID!\n  ideaType: ID!\n  emoji: String\n}\n\ninput UpdatePolarisFieldOptionWeightInput {\n  project: ID!\n  field: ID!\n  option: ID!\n  weight: Int!\n}\n\ninput DeletePolarisFieldOptionInput {\n  project: ID!\n  field: ID!\n  ideaType: ID!\n  option: ID!\n}\n\ninput PolarisSortFieldInput {\n    field: ID!\n    order: PolarisSortOrder\n}\n\ntype CreatePolarisStandardFieldPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisIdeaField\n}\n\ntype CreatePolarisCalculatedFieldPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisIdeaField\n}\n\ntype UpdatePolarisCalculatedFieldPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisIdeaField\n}\n\ntype UpdatePolarisFieldDescriptionPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisIdeaField\n}\n\ntype UpdatePolarisFieldEmojiPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisIdeaField\n}\n\ntype UpdatePolarisFieldOptionWeightPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype DeletePolarisFieldOptionPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype DeletePolarisFieldPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype PolarisSortField {\n    field: PolarisIdeaField!\n    order: PolarisSortOrder\n}\n\ninput PolarisValueDecorationInput {\n  emoji: String\n  backgroundColor: String\n  highlightContainer: Boolean\n}\n\ninput PolarisValueRuleInput {\n  value: String!\n  operator: PolarisValueOperator!\n}\n\ninput UpdatePolarisDecorationInput {\n  \"\"\"\n  The decoration can be applied when a value matches all rules in this array.\n  \"\"\"\n  valueRules: [PolarisValueRuleInput!]!\n\n  \"\"\"\n  The decoration to apply to a matched value.\n  \"\"\"\n  valueDecoration: PolarisValueDecorationInput!\n}\n\ninput DeletePolarisDecorationInput {\n  emoji: Boolean\n  backgroundColor: Boolean\n  highlightContainer: Boolean\n}\n\ninput CreatePolarisDecorationInput {\n  field: ID!\n  update: UpdatePolarisDecorationInput!\n}\n\ntype PolarisDecorationScheme {\n    id: ID!\n    fields: [PolarisIdeaField!]!\n}\n\n#===============================\n#     ___    _\n#    |_ _|__| | ___  __ _ ___\n#     | |/ _` |/ _ \\/ _` / __|\n#     | | (_| |  __/ (_| \\__ \\\n#    |___\\__,_|\\___|\\__,_|___/\n#\n# Mutations\n\n extend type Mutation {\n     \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisIdea(project: ID!, idea: ID!, update: UpdatePolarisIdeaInput!): UpdatePolarisIdeaPayload @beta(name: \"polaris-v0\")\n\n }\n\n ## Types\n\ntype PolarisIdea {\n     id: ID!\n     archived: Boolean\n     lastCommentsViewedTimestamp: String\n     lastInsightsViewedTimestamp: String\n}\n\ninput UpdatePolarisIdeaInput {\n    archived: Boolean\n    lastCommentsViewedTimestamp: String\n    lastInsightsViewedTimestamp: String\n}\n\ntype UpdatePolarisIdeaPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisIdea\n}\n\ntype PolarisIdeaType {\n     id: ID!\n     name: String!\n     iconUrl: String\n     description: String\n}\n\n type PolarisIdeas {\n    total: Int!\n    ideas: [PolarisRestIdea!]\n}\n\ntype PolarisRestIdea {\n    id: String!\n    key: String!\n    fields: JSON!\n}\n\n#============================================\n#     ___           _       _     _\n#    |_ _|_ __  ___(_) __ _| |__ | |_ ___\n#     | || '_ \\/ __| |/ _` | '_ \\| __/ __|\n#     | || | | \\__ \\ | (_| | | | | |_\\__ \\\n#    |___|_| |_|___/_|\\__, |_| |_|\\__|___/\n#                     |___/\n#\n# Mutations\n\nextend type Mutation {\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisInsight(input: CreatePolarisInsightInput!): CreatePolarisInsightPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisInsight(id: ID!, update: UpdatePolarisInsightInput!): UpdatePolarisInsightPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    deletePolarisInsight(id: ID!): DeletePolarisInsightPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    copyPolarisInsights(input: CopyPolarisInsightsInput!): CopyPolarisInsightsPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    archivePolarisInsights(project: ID!, containers: [ID!]): ArchivePolarisInsightsPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    unarchivePolarisInsights(project: ID!, containers: [ID!]): UnarchivePolarisInsightsPayload @beta(name: \"polaris-v0\")\n\n}\n\n## Types\n\ntype PolarisInsight {\n    \"\"\"\n    ARI of the insight, for example:\n\n       `ari:cloud:cebeacbd-f85e-483c-96ac-fd432a12ad1c:polaris-insight/10004`\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    The ID of the object within the project which contains this data\n    point (nee insight), if any.  In the usual case, if not null, this\n    is an idea (issue) ARI\n    \"\"\"\n    container: ID\n\n    \"\"\"\n    AAID of the user who owns the insight\n    \"\"\"\n    aaid: String!\n\n    \"\"\"\n    Description in ADF format.  See\n    https://developer.atlassian.com/platform/atlassian-document-format/\n    \"\"\"\n    description: JSON\n\n    \"\"\"\n    Array of snippets attached to this data point.\n    \"\"\"\n    snippets: [PolarisSnippet!]!\n\n    \"\"\"\n    Creation time of data point in RFC3339 format\n    \"\"\"\n    created: String!\n\n    \"\"\"\n    Updated time of data point in RFC3339 format\n    \"\"\"\n    updated: String!\n\naccount: User  => hydrated from identity.users(accountIds: $source.aaid) object identified by accountId, batch size 90,\n}\n\ninput CreatePolarisInsightInput {\n    \"\"\"\n    The cloudID in which we are adding insight\n    \"\"\"\n    cloudID: String!\n    \"\"\"\n    The projectID in which we are adding insight\n    \"\"\"\n    projectID: Int!\n    \"\"\"\n    The issueID in which we are adding insight, cloud be empty for adding insight on project level\n    \"\"\"\n    issueID: Int\n\n    \"\"\"\n    DEPRECATED, DO NOT USE\n    Array of datas in JSON format. It will be validated with JSON schema of Polaris Insights Data format.\n    \"\"\"\n    data: [JSON!]\n\n    \"\"\"\n    Array of snippets\n    \"\"\"\n    snippets: [CreatePolarisSnippetInput!]\n    \"\"\"\n    Description in ADF format https://developer.atlassian.com/platform/atlassian-document-format/\n    \"\"\"\n    description: JSON\n}\n\ninput CopyPolarisInsightsContainerInput {\n    \"\"\"\n    The project ARI which contains container\n    \"\"\"\n    project: ID!\n    \"\"\"\n    The container ARI which contains insights\n    \"\"\"\n    container: ID\n}\n\ninput CopyPolarisInsightsInput {\n    \"\"\"\n    Source container to copy insgihts\n    \"\"\"\n    source: CopyPolarisInsightsContainerInput!\n    \"\"\"\n    Destination container to copy insgihts\n    \"\"\"\n    destination: CopyPolarisInsightsContainerInput!\n    \"\"\"\n    Insight ARI's list that should be copied. Leave it empty to copy all insights from source to destination\n    \"\"\"\n    insights: [String!]\n}\n\ninput UpdatePolarisInsightInput {\n    description: JSON\n    snippets: [UpdatePolarisSnippetInput!]\n}\n\ntype ArchivePolarisInsightsPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype UnarchivePolarisInsightsPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype CreatePolarisInsightPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisInsight\n}\n\ntype UpdatePolarisInsightPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisInsight\n}\n\ntype CopyPolarisInsightsPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    copiedInsights: [PolarisInsight!]\n}\n\ntype DeletePolarisInsightPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n#==================================\n#     ____  _\n#    |  _ \\| | __ _ _   _ ___\n#    | |_) | |/ _` | | | / __|\n#    |  __/| | (_| | |_| \\__ \\\n#    |_|   |_|\\__,_|\\__, |___/\n#                   |___/\n#\n## Mutations\n\nextend type Mutation {\n    \"\"\"\n    Creates a new play.  A play will manifest as a field, and play\n    contributions will manifest as insights (data points) with\n    snippets associated with the play.\n\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisPlay(input: CreatePolarisPlayInput!): CreatePolarisPlayPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n\n    Creates or updates a contribution to a play.  The contribution\n    will manifest as an insight.  Returns an error if the contribution\n    is not acceptable to the parameters of the play, such as spending\n    more than the max amount in a BudgetAllocation (\"$10 Game\") play\n\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisPlayContribution(input: CreatePolarisPlayContribution!): CreatePolarisPlayContributionPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    Updates an existing contribution to a play.\n\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisPlayContribution(id: ID!, input: UpdatePolarisPlayContribution!): UpdatePolarisPlayContributionPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    Deletes an existing contribution to a play.\n\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    deletePolarisPlayContribution(id: ID!): DeletePolarisPlayContributionPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    Creates a new data point from a play contribution\n\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisInsightFromPlayContribution(input: CreatePolarisInsightFromPlayContributionInput): CreatePolarisInsightPayload @beta(name: \"polaris-v0\")\n}\n\n## Types\n\nextend type PolarisProject {\n    plays: [PolarisPlay!]\n    play(id: ID!): PolarisPlay\n}\n\nextend type PolarisInsight {\n    play: PolarisPlay           # if an insight is from a play, a link to the play\n    contribs: [PolarisPlayContribution!]        # if an insight is from a play, the associated contributions\n}\n\ninput CreatePolarisPlayContribution {\n    play: ID!       # the play being contributed to\n    subject: ID!    # the issue (idea) to which this contribution is being made\n    amount: Int     # the extent of the contribution (null=drop value)\n    comment: JSON   # the comment (null=drop value)\n}\n\ninput UpdatePolarisPlayContribution {\n    amount: Int     # the extent of the contribution (null=drop value)\n    comment: ID     # the comment (null=drop value, which is not permitted; delete the contribution if needed)\n    content: JSON   # optional comment content to update\n}\n\ntype CreatePolarisPlayContributionPayload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisPlayContribution\n}\n\ntype UpdatePolarisPlayContributionPayload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisPlayContribution\n}\n\ntype DeletePolarisPlayContributionPayload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\nextend enum PolarisFieldType {\n    PolarisIdeaPlayField\n}\n\ntype PolarisIdeaPlayField implements PolarisIdeaField {\n    id: ID!\n    fieldId: Int\n    fieldName: String\n    label: String!\n    editable: Boolean!\n    sortable: Boolean!\n    groupable: Boolean!\n    linearizable: Boolean!\n    defaultSortOrder: PolarisSortOrder\n    jiraFieldKey: String\n    decorations: [PolarisDecoration!]\n    formula: JSON                       # no formula support for now\n    presentation: PolarisPresentation   # probably nothing here for now\n    description: String\n    emoji: String\n    play: PolarisPlay                   # the associated play\n    aspect: String                      # the aspect of the play does this field represent (null=default)\n    builtin: BuiltinPolarisIdeaField\n}\n\ninput CreatePolarisPlayInput {\n    project: ID!\n    kind: PolarisPlayKind!\n    label: String!                      # the label for the play field, and the \"short\" name of the play\n    summary: String\n    parameters: JSON\n    fromView: ID                        # the view from which the play is created\n    description: JSON\n}\n\nenum PolarisPlayKind {\n     PolarisBudgetAllocationPlay        # each participant gets a budget to spend on ideas\n}\n\ntype CreatePolarisPlayPayload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisPlay\n}\n\ntype PolarisPlay {\n    id: ID!\n    label: String!                      # the label for the play\n    kind: PolarisPlayKind!              # the kind of play this is\n    view: PolarisView                   # if there is a specific view for this play\n    fields: [PolarisIdeaPlayField!]     # if there are fields for this play\n    parameters: JSON                    # the parameters used to define the play\n    contributions: [PolarisPlayContribution!]\n    contribution(id: ID!): PolarisPlayContribution\n}\n\nextend type PolarisConnectApp {\n    play: PolarisPlay                   # the play for this \"connect app\" (i.e., oauth client id) if it is one\n}\n\ntype PolarisPlayContribution {\n    id: ID!\n    play: PolarisPlay!                  # the play that contains the contribution\n    subject: ID!                        # the item to which the contribution applies (the idea)\n    aaid: String!                       # the author of the contribution\n    comment: PolarisComment\n    amount: Int\n    created: String!                    # when this contribution was created\n    updated: String!                    # when this contribution was last updated\n    appearsIn: PolarisInsight           # the insight that this contribution appears in\n}\n\ninput CreatePolarisInsightFromPlayContributionInput {\n    \"\"\"\n    The ARI of the play contribution\n    \"\"\"\n    contribution: ID!\n\n    \"\"\"\n    The ARI of the idea to add the insight to.  If null, then the insight\n    is added to the idea that the contribution is for.\n    \"\"\"\n    subject: ID\n}\n\n#================================== (END OF PLAYS) ================\n\n#====================================================\n#     ____            _           _\n#    |  _ \\ _ __ ___ (_) ___  ___| |_ ___\n#    | |_) | '__/ _ \\| |/ _ \\/ __| __/ __|\n#    |  __/| | | (_) | |  __/ (__| |_\\__ \\\n#    |_|   |_|  \\___// |\\___|\\___|\\__|___/\n#                  |__/\n#\n# Mutations\n\nextend type Mutation {\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    configurePolarisRefresh(input: ConfigurePolarisRefreshInput!): ConfigurePolarisRefreshPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    applyPolarisProjectTemplate(input: ApplyPolarisProjectTemplateInput!): ApplyPolarisProjectTemplatePayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    setPolarisProjectOnboarded(input: SetPolarisProjectOnboardedInput!): SetPolarisProjectOnboardedPayload @beta(name: \"polaris-v0\")\n\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    setPolarisSelectedDeliveryProject(input: SetPolarisSelectedDeliveryProjectInput!): SetPolarisSelectedDeliveryProjectPayload @beta(name: \"polaris-v0\")\n\n}\n\n## Types\n\ninput CreatePolarisProjectInput {\n    tenant: ID!\n    key: String!\n    name: String!\n}\n\ninput ScanPolarisProjectInput {\n    project: ID!\n    refresh: Boolean\n}\n\n\n\ntype PolarisRefreshJob {\n     progress: PolarisRefreshJobProgress\n\n     \"\"\"\n     If this is a synchronous refresh, we can return the newly refreshed snippets\n     directly.\n     \"\"\"\n     refreshedSnippets: [PolarisSnippet!]\n}\n\ntype PolarisRefreshJobProgress {\n     pendingCount: Int!\n     errorCount: Int!\n}\n\ntype PolarisRefreshInfo {\n    error: String                       # an error message\n    errorCode: Int                      # an error code\n    errorType: PolarisRefreshError      # enum version of errorCode\n    queued: String                      # (timestamp) when it was queued\n    last: String                        # (timestamp) when was last refreshed\n    next: String                        # (timestamp) when will next be refreshed\n    autoSeconds: Int                    # auto refresh interval in seconds\n    timeToLiveSeconds: Int              # semi-auto interval (time to live) in seconds\n}\n\nenum PolarisRefreshError {\n    NEED_AUTH\n    INVALID_SNIPPET\n    NOT_FOUND\n    INTERNAL_ERROR\n}\n\n\n\ntype ProjectAvatars {\n    x16: URL!\n    x24: URL!\n    x32: URL!\n    x48: URL!\n}\n\ntype PolarisProject {\n    \"\"\"\n    ARI of the project which is a polaris project, for example:\n\n       `ari:cloud:cebeacbd-f85e-483c-96ac-fd432a12ad1c:project/10004`\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    Jira activation ID\n    \"\"\"\n    activationId: String\n\n    \"\"\"\n    Every Jira project has a name\n    \"\"\"\n    name: String!\n\n    \"\"\"\n    Every Jira project has a key\n    \"\"\"\n    key: String!\n\n    \"\"\"\n    Project avatar URL\n    \"\"\"\n    avatarUrls: ProjectAvatars!\n\n    \"\"\"\n    The view sets associated with this project\n    \"\"\"\n    viewsets: [PolarisViewSet!]\n\n    views: [PolarisView!]!\n\n    rankField: ID\n\n    fields: [PolarisIdeaField!]!\n\n    \"\"\"\n    Initially only expect to have one idea type per project.  Defining\n    as a list here for future expandability.\n    \"\"\"\n    ideaTypes: [PolarisIdeaType!]!\n\n    insights: [PolarisInsight!]\n\n    \"\"\"\n    OAuth clients (and potentially other data providers) that have access\n    to this project.\n    \"\"\"\n    snippetProviders: [PolarisSnippetProvider!]\n\n    refreshing: PolarisRefreshStatus!\n\n    onboarded: Boolean!\n\n    template: PolarisProjectTemplate\n\n    selectedDeliveryProject: ID\n\n    ideas: [PolarisIdea!]!\n\n    issueLinkType: PolarisIssueLinkType!\n\n    statusCategories: [PolarisStatusCategory!]\n\n    arjConfiguration:  ArjConfiguration!\n\n    arjHierarchyConfiguration:  [ArjHierarchyConfigurationLevel!]\n}\n\ntype ArjHierarchyConfigurationLevel {\n    issueTypes: [String!]\n    title: String!\n}\n\ntype ArjConfiguration {\n    parentCustomFieldId: String\n    epicLinkCustomFieldId: String\n}\n\ntype PolarisIssueLinkType {\n    delivery: Int!\n    merge: Int!\n    datapoint: Int!\n}\n\ntype PolarisStatusCategory {\n    id:       Int!\n\tname:     String!\n\tkey:       String!\n\tcolorName: String!\n}\n\ntype PolarisRefreshStatus {\n     count: Int!\n     pending: Int!\n     errors: Int!\n     last: String       # (timestamp) when the most recent refresh completed, if any\n}\n\ntype LabelUsage {\n    label: String!\n    count: Int!\n}\n\ninput ConfigurePolarisRefreshInput {\n    project: ID!\n    subject: ID  # either an issue, an insight, or a snippet\n    disable: Boolean\n    timeToLiveSeconds: Int\n    autoRefreshTimeSeconds: Int\n    clearError: Boolean\n    setError: PolarisRefreshError\n}\n\ninput SetPolarisProjectOnboardedInput {\n    projectId: ID!\n    value: Boolean!\n}\n\ninput SetPolarisSelectedDeliveryProjectInput {\n    projectId: ID!\n    selectedDeliveryProjectId: ID!\n}\n\ntype ConfigurePolarisRefreshPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: Int   # number of snippets affected\n}\n\ntype PolarisProjectTemplate {\n   ideas: JSON\n}\n\ninput ApplyPolarisProjectTemplateInput {\n    project: ID!\n    ideaType: ID!\n    template: ID!\n}\n\ntype ApplyPolarisProjectTemplatePayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype SetPolarisProjectOnboardedPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype SetPolarisSelectedDeliveryProjectPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n\ntype Query {\n\n    \"\"\"\n    THIS QUERY IS IN BETA\n    \"\"\"\n    polarisProject(id: ID!, skipRefresh: Boolean): PolarisProject @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS QUERY IS IN BETA\n    \"\"\"\n    polarisView(id: ID!): PolarisView @beta(name: \"polaris-v0\")\n\n    polarisAPIVersion: String\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisInsights(project: ID!, container: ID): [PolarisInsight!] @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisInsight(id: ID!): PolarisInsight @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisInsightsWithErrors(project: ID!): [PolarisInsight!] @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisConnectAppByClientID(oauthClientID: ID!): PolarisConnectApp @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisLabels(projectID: ID!) : [LabelUsage!] @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisTermsConsent(cloudID: ID!): PolarisTermsConsent @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisSnippetPropertiesConfig(project: ID!, oauthClientId: String!, groupId: String!): PolarisSnippetPropertiesConfig @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisIdeas(project: ID!, fieldKeys: [String!], expand: [String!], jql: String): PolarisIdeas @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisAnonymousVisitorHash(hash: String!): PolarisAnonymousVisitorHash @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisCollabToken(viewID: ID!): PolarisDelegationToken @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisAnonymousVisitorHashByID(id: ID!): PolarisAnonymousVisitorHash @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    polarisLinkedDeliveryTickets(project: ID!, issueIds: [Int!]): [JSON] @beta(name: \"polaris-v0\")\n}\n\n#===============================================\n#     ____        _                  _\n#    / ___| _ __ (_)_ __  _ __   ___| |_ ___\n#    \\___ \\| '_ \\| | '_ \\| '_ \\ / _ \\ __/ __|\n#     ___) | | | | | |_) | |_) |  __/ |_\\__ \\\n#    |____/|_| |_|_| .__/| .__/ \\___|\\__|___/\n#                  |_|   |_|\n#\n# Mutations\n\nextend type Mutation {\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    refreshPolarisSnippets(input: RefreshPolarisSnippetsInput!): RefreshPolarisSnippetsPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    setPolarisSnippetPropertiesConfig(input: SetPolarisSnippetPropertiesConfigInput!): SetPolarisSnippetPropertiesConfigPayload @beta(name: \"polaris-v0\")\n\n}\n\n## Types\n\ntype PolarisSnippet {\n    \"\"\"\n    ARI of the snippet, for example:\n\n       `ari:cloud:cebeacbd-f85e-483c-96ac-fd432a12ad1c:polaris-snippet/10004`\n    \"\"\"\n    id: ID!\n\n    \"\"\"\n    Data in JSON format\n\n    \"\"\"\n    data: JSON\n    \"\"\"\n    Snippet url that is source of data\n\n    \"\"\"\n    url: String\n\n    \"\"\"\n    OauthClientId of CaaS app\n    \"\"\"\n    oauthClientId: String!\n\n    appInfo: PolarisConnectApp\n\n    \"\"\"\n    Snippet-level properties in JSON format.\n    \"\"\"\n    properties: JSON\n\n    \"\"\"\n    Timestamp of when the snippet was last updated\n    \"\"\"\n    updated: String!\n\n    \"\"\"\n    Information about the refreshing of this snippet.  Null if the snippet\n    is not refreshable.\n    \"\"\"\n    refresh: PolarisRefreshInfo\n}\n\ntype PolarisSnippetProvider {\n     id: ID!\n     app: PolarisConnectApp\n     properties: [PolarisSnippetPropertyDecl!]\n     groups: [PolarisSnippetGroupDecl!]\n}\n\ntype PolarisSnippetGroupDecl {\n     id: ID!\n     key: String!   # must be unique per PolarisSnippetProvider\n     label: String\n     properties: [PolarisSnippetPropertyDecl!]\n}\n\ntype PolarisSnippetPropertyDecl {\n     id: ID!\n     key: String!   # must be unique per PolarisSnippetProvider\n     label: String\n     kind: PolarisSnippetPropertyKind\n}\n\nenum PolarisSnippetPropertyKind {\n     NUMBER    # generic number\n     RATING    # 1-5 integer rating\n     LABELS    # array of strings\n}\n\ntype PolarisSnippetPropertiesConfig {\n    config: JSON!\n}\n\ntype SetPolarisSnippetPropertiesConfigPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ninput CreatePolarisSnippetInput {\n    \"\"\"\n    OauthClientId of CaaS app\n    \"\"\"\n    oauthClientId: String!\n    \"\"\"\n    Data in JSON format. It will be validated with JSON schema of Polaris Insights Data format.\n    \"\"\"\n    data: JSON\n    \"\"\"\n    Snippet url that is source of data\n    \"\"\"\n    url: String\n    \"\"\"\n    DEPRECATED, DO NOT USE\n    Snippet-level properties in JSON format.\n    \"\"\"\n    properties: JSON\n}\n\n\n\ninput UpdatePolarisSnippetInput {\n    \"\"\"\n    The client can specify either a specific snippet id, or an\n    oauthClientId.  In the latter case, we will create a snippet on\n    this data point (nee insight) if one doesn't exist already, and it\n    is an error for there to be more than one snippet with the same\n    oauthClientId.\n    \"\"\"\n    id: ID\n\n    \"\"\"\n    OauthClientId of CaaS app\n    \"\"\"\n    oauthClientId: String\n\n    \"\"\"\n    Snippet url that is source of data\n    \"\"\"\n    url: String\n\n    \"\"\"\n    Data in JSON format. It will be validated with JSON schema of Polaris Insights Data format.\n    \"\"\"\n    data: JSON\n\n    setProperties: JSON\n\n    deleteProperties: [String!]\n}\n\ninput SetPolarisSnippetPropertiesConfigInput {\n    \"\"\"\n    project ARI\n    \"\"\"\n    project: ID!\n\n    \"\"\"\n    OauthClientId of CaaS app\n    \"\"\"\n    oauthClientId: String!\n\n    \"\"\"\n    Snippet group id\n    \"\"\"\n    groupId: String!\n\n    \"\"\"\n    Config\n    \"\"\"\n    config: JSON\n}\n\ninput RefreshPolarisSnippetsInput {\n    project: ID!\n\n    \"\"\"\n    Specifies a set of snippets to be refreshed for finer-grain control than\n    at the project level (a required property for this API).  This field\n    is optional, and if specified must refer to either an issue, an\n    insight, or a snippet.\n    \"\"\"\n    subject: ID\n\n    \"\"\"\n    An optional flag indicating whether or not the refresh should be performed\n    synchronously.  By default (if this flag is not included, or if its value\n    is false), the refresh is performed asynchronously.\n    \"\"\"\n    synchronous: Boolean\n}\n\ntype RefreshPolarisSnippetsPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisRefreshJob\n}\n\n#======================================\n#    __     ___\n#    \\ \\   / (_) _____      _____\n#     \\ \\ / /| |/ _ \\ \\ /\\ / / __|\n#      \\ V / | |  __/\\ V  V /\\__ \\\n#       \\_/  |_|\\___| \\_/\\_/ |___/\n#\n# Mutations\n\nextend type Mutation {\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisView(input: CreatePolarisViewInput!): CreatePolarisViewPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisView(id: ID!, input: UpdatePolarisViewInput!): UpdatePolarisViewPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisViewRankV2(id: ID!, input: UpdatePolarisViewRankInput!): UpdatePolarisViewRankV2Payload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    deletePolarisView(id: ID!): DeletePolarisViewPayload @beta(name: \"polaris-v0\")\n\n    updatePolarisViewLastViewedTimestamp(viewId: ID!, timestampInput: String): UpdatePolarisViewTimestampPayload @beta(name: \"polaris-v0\")\n}\n\n## Types\n\nenum PolarisViewFilterKind {\n    FIELD_IDENTITY      # a field being matched by identity\n    FIELD_NUMERIC       # a field being matched by numeric comparison\n    TEXT\n}\n\nenum PolarisViewFilterOperator {\n    LT\n    LTE\n    GT\n    GTE\n    EQ\n    NEQ\n}\n\nenum PolarisTimelineMode {\n    MONTHS\n    QUARTERS\n    YEARS\n}\n\ntype PolarisTimelineConfig {\n    startDateField: PolarisIdeaField\n    dueDateField: PolarisIdeaField\n    mode: PolarisTimelineMode!\n}\n\ntype PolarisMatrixAxis {\n    dimension: String!\n    field: PolarisIdeaField!\n    # anything regarding axis configuration will lie here\n}\n\ntype PolarisMatrixConfig {\n    axes: [PolarisMatrixAxis!]\n    # anything regarding view config other than axes will lie here,   \n}\n\ntype PolarisView {\n    \"\"\"\n    ARI of the polaris view itself.  For example,\n\n       `ari:cloud:cebeacbd-f85e-483c-96ac-fd432a12ad1c:polaris-view/10003`\n    \"\"\"\n    id: ID!\n    name: String!\n    emoji: String\n    description: JSON\n    projectId: Int!\n    viewSetId: ID!\n\n    tableColumnSizes: [PolarisViewTableColumnSize!] # table column sizes per field\n\n    fields: [PolarisIdeaField!]!\n\n    \"\"\"\n    The JQL that would produce the same set of issues as are returned by\n    the ideas connection\n    \"\"\"\n    jql(filter: PolarisFilterInput): String\n\n    \"\"\"\n    Can the view be changed in-place?  Immutable views can be the\n    source of a clone operation, but it is an error to try to update\n    one.\n    \"\"\"\n    immutable: Boolean\n\n    # this is being flattened out from the visualization substructure;\n    # these view attributes are all modelled as optional, and their\n    # significance depends on the selected visualizationType\n\n    visualizationType: PolarisVisualizationType!\n    groupBy: PolarisIdeaField\n    verticalGroupBy: PolarisIdeaField\n    groupValues: [PolarisGroupValue!]\n    verticalGroupValues: [PolarisGroupValue!]\n    sort: [PolarisSortField!]\n    hidden: [PolarisIdeaField!]\n    timelineConfig: PolarisTimelineConfig\n    matrixConfig: PolarisMatrixConfig\n\n    \"\"\"\n    The user-supplied part of a JQL filter\n    \"\"\"\n    userJql: String\n\n    filter: [PolarisViewFilter!]\n\n    \"\"\"\n    view rank / position\n    \"\"\"\n    rank: Int!\n\n    \"\"\"\n    The comment stream\n    \"\"\"\n    comments(limit: Int): [PolarisComment!]\n\n    \"\"\"\n    View contains archived ideas\n    \"\"\"\n    containsArchived: Boolean!\n\n    lastViewed: [PolarisViewLastViewed]\n\n    lastCommentsViewedTimestamp: String\n\n    \"\"\"\n    A token for talking to pf-collab-service\n    \"\"\"\n    collabServiceDelegation: PolarisDelegationToken\n}\n\ntype PolarisViewTableColumnSize {\n    field: PolarisIdeaField! # polaris field\n    size: Int! # size of table column\n}\n\ninput PolarisViewTableColumnSizeInput {\n    field: ID! # polaris field ID\n    size: Int! # size of table column\n}\n\ntype PolarisViewLastViewed {\n    timestamp: String!\n    aaid: String!\n\naccount: User  => hydrated from identity.users(accountIds: $source.aaid) object identified by accountId, batch size 90,\n}\n\ninput CreatePolarisViewInput {\n    container: ID!\n    visualizationType: PolarisVisualizationType   # the type of viz to create\n    copyView: ID                                  # view to copy configuration from\n    update: UpdatePolarisViewInput                # override stuff from copy\n}\n\ninput UpdatePolarisViewInput {\n    view: ID             # view to update, if this is an UPDATE operation\n    name: String         # the name of the view\n    emoji: String        # view emoji\n    description: JSON    # description of the view\n    jql: String          # the JQL (sets filter and sorting)\n    userJql: String      # just the user filtering part of the JQL\n    tableColumnSizes: [PolarisViewTableColumnSizeInput!] # table column sizes per field\n    fields: [ID!]        # the table columns list of fields (table viz) or fields to show\n    groupBy: ID          # what field to group by (board viz)\n    groupValues: [PolarisGroupValueInput!] # what are the (ordered) grouping values\n    verticalGroupBy: ID  # what field to vertical group by (board viz)\n    verticalGroupValues: [PolarisGroupValueInput!] # what are the (ordered) vertical grouping values\n    sort: [PolarisSortFieldInput!] # a field to sort by\n    filter: [PolarisViewFilterInput!] # view filter congfiguration\n    hidden: [ID!]        # fields that are included in view but hidden\n    lastViewedTimestamp: String\n    lastCommentsViewedTimestamp: String\n    timelineConfig: UpdatePolarisTimelineConfig\n    matrixConfig: UpdatePolarisMatrixConfig\n}\n\ninput UpdatePolarisMatrixConfig {\n    axes: [UpdatePolarisMatrixAxis!]\n}\n\ninput UpdatePolarisTimelineConfig {\n    startDateField: ID\n    dueDateField: ID\n    mode: PolarisTimelineMode\n}\n\ninput UpdatePolarisMatrixAxis {\n    dimension: String!\n    field: ID!\n}\n\ninput UpdatePolarisViewRankInput {\n    container: ID         # new container if needed\n    rank: Int!            # new position of the view\n}\n\ntype CreatePolarisViewPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisView\n}\n\ntype UpdatePolarisViewPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisView\n}\n\ntype UpdatePolarisViewTimestampPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype UpdatePolarisViewRankV2Payload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisViewSet\n}\n\ntype DeletePolarisViewPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype PolarisViewFilterValue {\n    stringValue: String\n    numericValue: Float\n    operator: PolarisViewFilterOperator\n}\n\ntype PolarisViewFilter {\n    kind: PolarisViewFilterKind!\n    field: PolarisIdeaField\n    values: [PolarisViewFilterValue!]!\n}\n\ninput PolarisViewFilterValueInput {\n    text: String\n    value: Float\n    operator: PolarisViewFilterOperator\n}\n\ninput PolarisViewFilterInput {\n    kind: PolarisViewFilterKind!\n    field: ID\n    values: [PolarisViewFilterValueInput!]!\n}\n\n#=========================================\n#__     ___                        _\n#\\ \\   / (_) _____      _____  ___| |_\n# \\ \\ / /| |/ _ \\ \\ /\\ / / __|/ _ \\ __|\n#  \\ V / | |  __/\\ V  V /\\__ \\  __/ |_\n#   \\_/  |_|\\___| \\_/\\_/ |___/\\___|\\__|\n#\n# Mutations\n\nextend type Mutation {\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    createPolarisViewSet(input: CreatePolarisViewSetInput!): CreatePolarisViewSetPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    updatePolarisViewSet(input: UpdatePolarisViewSetInput!): UpdatePolarisViewSetPayload @beta(name: \"polaris-v0\")\n\n    \"\"\"\n    THIS OPERATION IS IN BETA\n    \"\"\"\n    deletePolarisViewSet(id: ID!): DeletePolarisViewSetPayload @beta(name: \"polaris-v0\")\n\n}\n\n## Types\n\nenum PolarisViewSetType {\n    CAPTURE\n    PRIORITIZE\n    DELIVER\n    SYSTEM\n    CUSTOM\n    SINGLE     # for views that are used to manage the display of single ideas (e.g., Idea views)\n    SECTION\n}\n\ntype PolarisViewSet {\n    \"\"\"\n    ARI of the polaris viewSet itself.  For example,\n\n       `ari:cloud:cebeacbd-f85e-483c-96ac-fd432a12ad1c:viewset/10001`\n    \"\"\"\n    id: ID!\n    name: String!\n    type: PolarisViewSetType\n    views: [PolarisView!]!\n    viewsets: [PolarisViewSet!]!\n\n    \"\"\"\n    view rank / position\n    \"\"\"\n    rank: Int!\n}\n\ninput CreatePolarisViewSetInput {\n    container: ID!\n    name: String!\n}\n\ninput UpdatePolarisViewSetInput {\n    viewSet: ID!\n    name: String\n}\n\ntype CreatePolarisViewSetPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisViewSet\n}\n\ntype UpdatePolarisViewSetPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n    node: PolarisViewSet\n}\n\n\n\ntype DeletePolarisViewSetPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n","xen_invocation_service":"type AppTunnelDefinitions {\n    \"\"\"\n    The URL to tunnel FaaS calls to\n    \"\"\"\n    faasTunnelUrl: URL\n\n    customUI: [CustomUITunnelDefinition]\n}\n\ntype CustomUITunnelDefinition {\n    resourceKey: String\n    tunnelUrl: URL\n}\n\ninput TunnelDefinitionsInput {\n    \"The URL to tunnel FaaS calls to\"\n    faasTunnelUrl: URL\n\n    customUI: [CustomUITunnelDefinitionInput]\n}\n\ninput CustomUITunnelDefinitionInput {\n    resourceKey: String\n    tunnelUrl: URL\n}\n\n\"Payload to invoke an AUX Effect\"\ninput AuxEffectsInvocationPayload {\n    \"The current state of the AUX extension\"\n    state: JSON!\n\n    \"The effects to action inside the function\"\n    effects: [JSON!]!\n\n    \"Environment information about where the effects are dispatched from\"\n    context: JSON!\n\n    \"A signed token representing the context information of the extension\"\n    contextToken: String\n\n    \"Configuration arguments for the instance of the AUX extension\"\n    config: JSON\n}\n\n\"A response to an aux invocation\"\ntype AuxEffectsResult {\n    \"\"\"\n    The list of effects in response to an aux effects invocation.\n\n    Render effects should return valid rendering effects to the invoker,\n    to allow the front-end to render the required content. These are kept as\n    generic JSON blobs since consumers of this API are responsible for defining\n    what these effects look like.\n    \"\"\"\n    effects: [JSON!]!\n}\n\n\"\"\"\nEstablish tunnels for a specific environment of an app.\n\nThis will redirect all function calls to the provided faas url. This URL must implement the same\ninvocation contract that is used elsewhere in Xen.\n\nThis will also be used to redirect Custom UI product rendering to the custom ui urls. We separate\nthem by extension key.\n\"\"\"\ninput CreateAppTunnelsInput {\n    \"The app to setup a tunnel for\"\n    appId: ID!\n\n    \"The environment key\"\n    environmentKey: String!\n\n    \"The tunnel definitions\"\n    tunnelDefinitions: TunnelDefinitionsInput!\n\n    \"Should existing tunnels be overwritten\"\n    force: Boolean\n}\n\n\"A response to a tunnel creation request\"\ntype CreateAppTunnelResponse implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"\"\"\n    The recommended keep-alive time (in milliseconds) by which the forge CLI (or\n    other clients) should re-establish the forge tunnel.\n    This is guaranteed to be less than the expiry of the forge tunnel.\n    \"\"\"\n    keepAlive: String\n\n    \"\"\"\n    The actual expiry time (in milliseconds) of the created forge tunnel. Once the\n    tunnel expires, Forge apps will display the deployed version even\n    if the local development server is still active.\n    \"\"\"\n    expiry: String\n}\n\ninput DeleteAppTunnelInput {\n    \"The app to setup a tunnel for\"\n    appId: ID!\n\n    \"The environment key\"\n    environmentKey: String!\n}\n\n\"\"\"\nDetails about an extension.\n\nThis information is used to look up the extension within CaaS so that the\ncorrect function can be resolved.\n\nThis will eventually be superseded by an Id.\n\"\"\"\ninput ExtensionDetailsInput {\n    \"The definition identifier as provided by CaaS\"\n    definitionId: ID!\n\n    \"The extension key as provided by CaaS\"\n    extensionKey: String!\n}\n\ntype ExternalAuthProvider {\n    key: String!\n    displayName: String!\n    url: URL!\n}\n\n# WARNING: This ErrorDetails is shared with \"xen_lifecycle_service\". This should not be,\n# but it was on oversight.\ntype ErrorDetails {\n    \"Specific code used to make difference between errors to handle them differently\"\n    code: String!\n\n    \"Addition error data\"\n    fields: JSON\n\n    \"Copy of top-level message\"\n    message: String!\n}\n\n\"The data returned from a function invocation\"\ntype InvocationResponsePayload {\n    \"The body of the function response\"\n    body: JSON!\n}\n\n\"Input payload for the invoke aux mutation\"\ninput InvokeAuxEffectsInput {\n    \"\"\"\n    The list of applicable context Ids\n    Context Ids are used within the ecosystem platform to identify product\n    controlled areas into which apps can be installed. Host products should\n    determine how this list of contexts is constructed.\n\n    *Important:* this should start with the most specific context as the\n    most specific extension will be the selected extension.\n    \"\"\"\n    contextIds: [ID!]!\n\n    \"\"\"\n    Information needed to look up an extension\n\n    Note: Either `extensionDetails` or `extensionId` must be provided\n    \"\"\"\n    extensionDetails: ExtensionDetailsInput\n\n    \"\"\"\n    An identifier for the extension to invoke\n\n    Note: Either `extensionDetails` or `extensionId` must be provided\n    \"\"\"\n    extensionId: ID\n\n    \"\"\"\n    An identifier for an alternative entry point function to invoke\n    \"\"\"\n    entryPoint: String\n\n    \"The payload to invoke an AUX Effect\"\n    payload: AuxEffectsInvocationPayload!\n}\n\n\"The response from an AUX effects invocation\"\ntype InvokeAuxEffectsResponse implements MutationResponse & Payload {\n    statusCode: Int! @deprecated\n    message: String! @deprecated\n    errorDetails: ErrorDetails @deprecated\n    success: Boolean!\n    errors: [MutationError!]\n\n    result: AuxEffectsResult\n}\n\n\"Input payload for the invoke mutation\"\ninput InvokeExtensionInput {\n    \"\"\"\n    The list of applicable context Ids\n    Context Ids are used within the ecosystem platform to identify product\n    controlled areas into which apps can be installed. Host products should\n    determine how this list of contexts is constructed.\n\n    *Important:* this should start with the most specific context as the\n    most specific extension will be the selected extension.\n    \"\"\"\n    contextIds: [ID!]!\n\n    \"\"\"\n    Information needed to look up an extension\n\n    Note: Either `extensionDetails` or `extensionId` must be provided\n    \"\"\"\n    extensionDetails: ExtensionDetailsInput\n\n    \"\"\"\n    An identifier for the extension to invoke\n\n    Note: Either `extensionDetails` or `extensionId` must be provided\n    \"\"\"\n    extensionId: ID\n\n    \"The payload to send as part of the invocation\"\n    payload: JSON!\n\n    \"\"\"\n    An identifier for an alternative entry point function to invoke\n    \"\"\"\n    entryPoint: String\n\n    \"\"\"\n    An identifier for a schema to validate the response against\n    \"\"\"\n    schema: String\n}\n\ntype InvokeExtensionPayloadErrorExtension implements MutationErrorExtension {\n  errorType: String\n  statusCode: Int\n  fields: InvokeExtensionPayloadErrorExtensionFields\n}\n\ntype InvokeExtensionPayloadErrorExtensionFields {\n  authInfoUrl: String\n}\n\n\"The response from a function invocation\"\ntype InvokeExtensionResponse implements MutationResponse & Payload {\n    statusCode: Int! @deprecated\n    message: String! @deprecated\n    errorDetails: ErrorDetails @deprecated\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"The invocation response\"\n    response: InvocationResponsePayload\n\n    \"\"\"\n    Details about the external auth for this service, if any exists.\n\n    This is typically used for directing the user to a consent screen.\n    \"\"\"\n    externalAuth: [ExternalAuthProvider]\n}\n\ntype Mutation {\n    \"\"\"\n    Create multiple tunnels for an app\n\n    This will allow api calls for this app to be tunnelled to a locally running\n    server to help with writing and debugging functions.\n\n    This call covers both the FaaS tunnel as well as registering multiple Custom UI tunnels\n    that can then be used in the products instead of serving the usual CDN url.\n\n    This call will fail if a tunnel already exists, unless the 'force' flag is set.\n\n    Tunnels automatically expire after 30 minutes\n    \"\"\"\n    createAppTunnels(input: CreateAppTunnelsInput!): CreateAppTunnelResponse\n\n    \"\"\"\n    Delete tunnels for an app\n\n    All FaaS traffic for this app will return to invoking the deployed function\n    instead of the tunnel url.\n\n    Same will be done for the Custom UI tunnels, where the normal CDN url will be\n    used instead of the tunnel url.\n    \"\"\"\n    deleteAppTunnels(input: DeleteAppTunnelInput!): GenericMutationResponse\n\n    \"\"\"\n    Invoke a function associated with a specific extension.\n\n    This is intended to be the main way to interact with extension functions\n    created for apps\n    \"\"\"\n    invokeExtension(input: InvokeExtensionInput!): InvokeExtensionResponse\n\n    \"\"\"\n    Invoke a function using the aux effects handling pipeline\n\n    This includes some additional processing over normal invocations, including\n    validation and transformation, and expects functions to return payloads that\n    match the AUX effects spec.\n    \"\"\"\n    invokeAuxEffects(input: InvokeAuxEffectsInput!): InvokeAuxEffectsResponse\n    userAuthTokenForExtension(input: UserAuthTokenForExtensionInput!): UserAuthTokenForExtensionResponse!\n}\n\ninput UserAuthTokenForExtensionInput {\n  extensionId: ID!\n}\n\ntype AuthToken {\n    token: String!\n    ttl: Int!\n}\n\ntype UserAuthTokenForExtensionResponse implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n\n    authToken: AuthToken\n}\n\ntype Query {\n    \"\"\"\n    Returns the list of active tunnels for a given app-id and environment-key.\n\n    The tunnels are active for 30min by default, if not requested to be terminated.\n    \"\"\"\n    appActiveTunnels(appId: ID!, environmentId: ID!): AppTunnelDefinitions\n}\n","opsgenie":"type Query {\n    opsgenie: OpsgenieQuery @namespaced\n}\n\ntype OpsgenieQuery {\n    opsgenieTeam(id: ID!): OpsgenieTeam\n\n    \"\"\"\n    for hydration batching, restricted to 25.\n    \"\"\"\n    opsgenieTeams(ids: [ID!]!): [OpsgenieTeam]\n    allOpsgenieTeams(cloudId: ID! @CloudID, first: Int, after: String, last: Int, before: String): OpsgenieTeamConnection\n    myOpsgenieSchedules(cloudId: ID! @CloudID): [OpsgenieSchedule]\n    opsgenieTeamsWithServiceModificationPermissions(cloudId: ID! @CloudID, first: Int, after: String, last: Int, before: String): OpsgenieTeamConnection\n}\n\ntype OpsgenieTeam implements Node {\n    id: ID! # ARI\n    name: String\n    description: String\n    createdAt: DateTime\n    updatedAt: DateTime\n    url: String\n    members(first: Int, after: String, last: Int, before: String): OpsgenieTeamMemberConnection\n    schedules: [OpsgenieSchedule]\n    alertCounts(startTime: DateTime!, endTime: DateTime!, timezone: String, tags: [String!]): [OpsgenieAlertCountByPriority]\n}\n\ntype OpsgenieTeamMemberConnection {\n    pageInfo: PageInfo!\n    edges: [OpsgenieTeamMemberEdge]\n}\n\ntype OpsgenieTeamMemberEdge {\n    node: OpsgenieTeamMember\n    cursor: String!\n}\n\ntype OpsgenieTeamMember {\n    user: User  @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.userId\"}] identifiedBy : \"accountId\" batchSize: 90)\n}\n\ntype OpsgenieSchedule {\n    id: ID!\n    name: String\n    enabled: Boolean\n    timezone: String\n    finalTimeline(startTime: DateTime!, endTime: DateTime!): OpsgenieScheduleTimeline\n}\n\ntype OpsgenieScheduleTimeline {\n    startDate: DateTime\n    endDate: DateTime\n    rotations: [OpsgenieScheduleRotation]\n\n}\n\ntype OpsgenieScheduleRotation {\n    id: ID\n    name: String\n    order: Int\n    periods: [OpsgenieSchedulePeriod]\n\n}\n\ntype OpsgenieSchedulePeriod {\n    startDate: DateTime\n    endDate: DateTime\n    type: String # Enum?\n    recipient: OpsgenieSchedulePeriodRecipient\n}\n\ntype OpsgenieSchedulePeriodRecipient {\n    id: ID,\n    type: String,\n    user: User  @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.accountId\"}] identifiedBy : \"accountId\" batchSize: 90)\n}\n\ntype OpsgenieAlertCountByPriority {\n    priority: String\n    countPerDay: [OpsgenieAlertCountPerDay]\n}\n\n\ntype OpsgenieAlertCountPerDay {\n    day: String\n    count: Int\n}\n\ntype OpsgenieTeamConnection {\n    pageInfo: PageInfo!\n    edges: [OpsgenieTeamEdge]\n    totalCount: Int\n}\n\ntype OpsgenieTeamEdge {\n    node: OpsgenieTeam\n    cursor: String!\n}\n\n","confluence":"union ConfluenceInlineTaskContainer = ConfluenceBlogPost | ConfluencePage\n\ntype ConfluenceInlineTask {\n  \"\"\"\n  UserInfo of the user who has been assigned the Task\n  \"\"\"\n  assignedTo: ConfluenceUserInfo\n  \"\"\"\n  Body of the Task.\n  \"\"\"\n  body: ConfluenceContentBody\n\n  \"\"\"\n  UserInfo of the user who has completed the Task\n  \"\"\"\n  completedBy: ConfluenceUserInfo\n\n  \"\"\"\n  Container where Task belongs to.\n  \"\"\"\n  container: ConfluenceInlineTaskContainer\n\n  \"\"\"\n  UserInfo of the user who created the Task\n  \"\"\"\n  createdBy: ConfluenceUserInfo\n\n  \"\"\"\n  Created date of the Task.\n  \"\"\"\n  createdOn: String\n\n  \"\"\"\n  Due date of the Task.\n  \"\"\"\n  dueOn: String\n\n  \"\"\"\n  Global ID of the Task.\n  \"\"\"\n  globalId: ID\n\n  \"\"\"\n  The ARI of the Task, ConfluenceTaskARI format.\n  \"\"\"\n  id: ID @ARI(type: \"task\", owner: \"confluence\")\n\n  \"\"\"\n  Status of the Task.\n  \"\"\"\n  status: ConfluenceInlineTaskStatus\n\n  \"\"\"\n  ID of the Task.\n  \"\"\"\n  taskId: ID\n\n  \"\"\"\n  Update date of the Task.\n  \"\"\"\n  updatedOn: String\n}\n\nenum ConfluenceInlineTaskStatus {\n  COMPLETE\n  INCOMPLETE\n}interface ConfluenceAbstractPage {\n  \"\"\"\n  ARI of the Page or BlogPost, ConfluencePageARI format.\n  \"\"\"\n  id: ID\n\n  \"\"\"\n  Metadata of the Page or BlogPost\n  \"\"\"\n  metadata: ConfluenceContentMetadata\n\n  \"\"\"\n  Space that contains the Page or BlogPost.\n  \"\"\"\n  space: ConfluenceSpace\n\n  \"\"\"\n  Content status of the Page or BlogPost.\n  \"\"\"\n  status: ConfluenceContentStatus\n\n  \"\"\"\n  Title of the Page or BlogPost.\n  \"\"\"\n  title: String\n\n  \"\"\"\n  Content type of the entity. Can be \\\"PAGE\\\" or \\\"BLOG_POST\\\"\n  \"\"\"\n  type: ConfluenceContentType\n}\n\ntype ConfluenceBlogPost implements ConfluenceAbstractPage {\n  \"\"\"\n  Content ID of the BlogPost.\n  \"\"\"\n  blogPostId: ID! \n\n  \"\"\"\n  ARI of the BlogPost, ConfluencePageARI format.\n  \"\"\"\n  id: ID @ARI(type: \"page\", owner: \"confluence\")\n\n  \"\"\"\n  Links associated with the BlogPost.\n  \"\"\"\n  links: ConfluenceBlogPostLinks\n\n  \"\"\"\n  Metadata of the BlogPost\n  \"\"\"\n  metadata: ConfluenceContentMetadata\n\n  \"\"\"\n  Space that contains the BlogPost.\n  \"\"\"\n  space: ConfluenceSpace\n\n  \"\"\"\n  Content status of the BlogPost.\n  \"\"\"\n  status: ConfluenceContentStatus\n\n  \"\"\"\n  Title of the BlogPost.\n  \"\"\"\n  title: String\n\n  \"\"\"\n  Content type of the page. Will always be \\\"BLOG_POST\\\".\n  \"\"\"\n  type: ConfluenceContentType\n\n}\n\ntype ConfluenceBlogPostLinks {\n  \"\"\"\n  The base URL of the site.\n  \"\"\"\n  base: String\n\n  \"\"\"\n  The web UI URL associated with the BlogPost.\n  \"\"\"\n  webUi: String\n}\n\ntype ConfluenceContentMetadata {\n  \"\"\"\n  Emoji metadata associated with draft Content\n  \"\"\"\n  titleEmojiDraft: ConfluenceContentTitleEmoji\n\n  \"\"\"\n  Emoji metadata associated with published Content\n  \"\"\"\n  titleEmojiPublished: ConfluenceContentTitleEmoji\n}\n\ntype ConfluenceContentTitleEmoji {\n  \"\"\"\n  It is ID of the emoji property\n  \"\"\"\n  id: String\n\n  \"\"\"\n  It is Key of the emoji property\n  \"\"\"\n  key: String\n\n  \"\"\"\n  It is Value of the emoji property\n  \"\"\"\n  value: String\n}\n\ntype ConfluencePage implements ConfluenceAbstractPage {\n  \"\"\"\n  ARI of the Page, ConfluencePageARI format.\n  \"\"\"\n  id: ID @ARI(type: \"page\", owner: \"confluence\")\n\n  \"\"\"\n  Links associated with the Page.\n  \"\"\"\n  links: ConfluencePageLinks\n\n  \"\"\"\n  Metadata of the Page\n  \"\"\"\n  metadata: ConfluenceContentMetadata\n\n  \"\"\"\n  Content ID of the Page.\n  \"\"\"\n  pageId: ID!\n\n  \"\"\"\n  Space that contains the Page.\n  \"\"\"\n  space: ConfluenceSpace\n\n  \"\"\"\n  Content status of the Page.\n  \"\"\"\n  status: ConfluenceContentStatus\n\n  \"\"\"\n  Title of the Page.\n  \"\"\"\n  title: String\n\n  \"\"\"\n  Content type of the page. Will always be \\\"PAGE\\\".\n  \"\"\"\n  type: ConfluenceContentType\n}\n\ntype ConfluencePageLinks {\n  \"\"\"\n  The base URL of the site.\n  \"\"\"\n  base: String\n\n  \"\"\"\n  The web UI URL path associated with the Page.\n  \"\"\"\n  webUi: String\n}\n\ntype Query {\n    confluence: ConfluenceQueryApi @namespaced @beta(name: \"confluence-agg-beta\")\n}\n\ntype ConfluenceQueryApi {\n  \"\"\"\n  Fetch a Confluence Comment by its ARI.\n  \"\"\"\n  confluenceComment(id: ID! @ARI(type: \"comment\", owner: \"confluence\")): ConfluenceComment\n\n  \"\"\"\n  Fetch Confluence Comments by their ARIs.\n  \"\"\"\n  confluenceComments(ids: [ID]! @ARI(type: \"comment\", owner: \"confluence\")): [ConfluenceComment]\n\n  \"\"\"\n  Fetch a task by its global Id.\n  \"\"\"\n  confluenceInlineTask(id: ID! @ARI(type: \"task\", owner: \"confluence\")): ConfluenceInlineTask\n\n  \"\"\"\n  Fetch a Confluence Page by its ARI\n  \"\"\"\n  confluencePage(id: ID! @ARI(type: \"page\", owner: \"confluence\")): ConfluenceAbstractPage\n\n  \"\"\"\n  Fetch a Confluence Page by its ARI, applying optional filters\n  \"\"\"\n  confluencePageWithFilters(id: ID! @ARI(type: \"page\", owner: \"confluence\"), statuses: [ConfluenceContentStatus]): ConfluenceAbstractPage\n\n  \"\"\"\n  Fetch Confluence Pages by their ARIs\n  \"\"\"\n  confluencePages(ids: [ID]! @ARI(type: \"page\", owner: \"confluence\")): [ConfluenceAbstractPage]\n  \n  \"\"\"\n  Fetch Confluence Pages by their ARIs, applying optional filters\n  \"\"\"\n  confluencePagesWithFilters(ids: [ID]! @ARI(type: \"page\", owner: \"confluence\"), statuses: [ConfluenceContentStatus]): [ConfluenceAbstractPage]\n\n  \"\"\"\n  Fetch a Confluence Space by its ARI.\n  \"\"\"\n  confluenceSpace(id: ID! @ARI(type: \"space\", owner: \"confluence\")): ConfluenceSpace\n\n  \"\"\"\n  Fetch Confluence Spaces by their ARIs.\n  \"\"\"\n  confluenceSpaces(ids: [ID]! @ARI(type: \"space\", owner: \"confluence\")): [ConfluenceSpace]\n}type ConfluenceUserInfo {\n  \"ARI of the User, IdentityUserARI format.\"\n  user: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.identityUserARI\"}], identifiedBy : \"accountId\", batchSize : 90 )\n  \"Personal space of the User.\"\n  personalSpace: ConfluenceSpace\n}type ConfluenceLabel {\n  id: ID\n  label: String\n  prefix: String\n}\n\ntype ConfluenceOperationCheck {\n  operation: ConfluenceOperationName\n  target: ConfluenceOperationTarget\n}\n\ntype ConfluenceSpace {\n  \"\"\"\n  The description of the Space.\n  \"\"\"\n  description: ConfluenceSpaceDescription\n\n  \"\"\"\n  The history of the Space.\n  \"\"\"\n  history: ConfluenceSpaceHistory\n\n  \"\"\"\n  The homepage of the Space.\n  \"\"\"\n  homepage: ConfluenceAbstractPage\n\n  \"\"\"\n  The icon associated with the Space.\n  \"\"\"\n  icon: ConfluenceSpaceIcon\n\n  \"\"\"\n  The ARI of the Space, ConfluenceSpaceARI format.\n  \"\"\"\n  id: ID @ARI(type: \"space\", owner: \"confluence\")\n\n  \"\"\"\n  Key of the Space.\n  \"\"\"\n  key: String\n\n  \"\"\"\n  Links associated with the Space.\n  \"\"\"\n  links: ConfluenceSpaceLinks\n\n  \"\"\"\n  The metadata of the Space.\n  \"\"\"\n  metadata: ConfluenceSpaceMetadata\n\n  \"\"\"\n  Name of the Space.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The operations allowed on the Space.\n  \"\"\"\n  operations: [ConfluenceOperationCheck]\n\n  \"\"\"\n  ID of the Space.\n  \"\"\"\n  spaceId: ID\n\n  \"\"\"\n  Status of the Space.\n  \"\"\"\n  status: ConfluenceSpaceStatus\n\n  \"\"\"\n  Type of the Space. Can be \\\"GLOBAL\\\" or \\\"PERSONAL\\\".\n  \"\"\"\n  type: ConfluenceSpaceType\n}\n\ntype ConfluenceSpaceDescription {\n  plain: String\n  view: String\n}\n\ntype ConfluenceSpaceHistory {\n  createdBy: ConfluenceUserInfo\n  createdDate: String\n}\n\ntype ConfluenceSpaceIcon {\n  height: Int\n  isDefault: Boolean\n  path: String\n  width: Int\n}\n\ntype ConfluenceSpaceLinks {\n  \"\"\"\n  The base URL of the site.\n  \"\"\"\n  base: String\n\n  \"\"\"\n  The web UI URL associated with the Space.\n  \"\"\"\n  webUi: String\n}\n\ntype ConfluenceSpaceMetadata {\n  \"\"\"\n  A collection of Labels on the Space.\n  \"\"\"\n  labels: [ConfluenceLabel]\n\n  \"\"\"\n  A collection of the recent commenters within the Space.\n  \"\"\"\n  recentCommenters: [ConfluenceUserInfo]\n\n  \"\"\"\n  A collection of the recent watchers of the Space.\n  \"\"\"\n  recentWatchers: [ConfluenceUserInfo]\n\n  \"\"\"\n  The total number of commenters in the Space.\n  \"\"\"\n  totalCommenters: Int\n\n  \"\"\"\n  The total number of current pages in the Space.\n  \"\"\"\n  totalCurrentPages: Int\n\n  \"\"\"\n  The total number of watchers of the Space.\n  \"\"\"\n  totalWatchers: Int\n}\n\ntype ConfluenceCreateSpacePayload implements Payload {\n  confluenceSpace: ConfluenceSpace\n  errors: [MutationError!]\n  success: Boolean!\n}\n\ntype ConfluenceUpdateSpacePayload implements Payload {\n  confluenceSpace: ConfluenceSpace\n  errors: [MutationError!]\n  success: Boolean!\n}\n\nenum ConfluenceOperationName {\n  ADMINISTER\n  ARCHIVE\n  COPY\n  CREATE\n  CREATE_SPACE\n  DELETE\n  EXPORT\n  MOVE\n  PURGE\n  PURGE_VERSION\n  READ\n  RESTORE\n  RESTRICT_CONTENT\n  UPDATE\n  USE\n}\n\n\nenum ConfluenceOperationTarget {\n  APPLICATION\n  ATTACHMENT\n  BLOG_POST\n  COMMENT\n  PAGE\n  SPACE\n  USER_PROFILE\n}\n\nenum ConfluenceSpaceStatus {\n  ARCHIVED\n  CURRENT\n}\n\nenum ConfluenceSpaceType {\n  GLOBAL\n  PERSONAL\n}\n\ninput ConfluenceCreateSpaceInput {\n  key: String!\n  name: String!\n  type: ConfluenceSpaceType\n}\n\ninput ConfluenceUpdateSpaceInput {\n  id: ID! @ARI(type: \"space\", owner: \"confluence\")\n  name: String\n}type ConfluenceComment {\n  \"\"\"\n  UserInfo of the author of the Comment.\n  \"\"\"\n  author: ConfluenceUserInfo\n\n  \"\"\"\n  Content ID of the Comment.\n  \"\"\"\n  commentId: ID\n\n  \"\"\"\n  Confluence Page or Blogpost this is Comment is associated with.\n  \"\"\"\n  container: ConfluenceAbstractPage\n\n  \"\"\"\n  ARI of the Comment, ConfluenceCommentARI format.\n  \"\"\"\n  id: ID @ARI(type: \"comment\", owner: \"confluence\")\n\n  \"\"\"\n  Links associated with the Comment.\n  \"\"\"\n  links: ConfluenceCommentLinks\n\n  \"\"\"\n  Title of the Comment.\n  \"\"\"\n  name: String\n}\n\n\ntype ConfluenceCommentLinks {\n  \"\"\"\n  The base URL of the site.\n  \"\"\"\n  base: String\n\n  \"\"\"\n  The web UI URL associated with the Comment.\n  \"\"\"\n  webUi: String\n}type Mutation {\n    confluence: ConfluenceMutationApi\n}\n\ntype ConfluenceMutationApi {\n    confluenceCreateSpace(input: ConfluenceCreateSpaceInput!): ConfluenceCreateSpacePayload\n    confluenceUpdateSpace(input: ConfluenceUpdateSpaceInput!): ConfluenceUpdateSpacePayload\n}type ConfluenceContentBody {\n  \"\"\"\n  Body content in ADF format\n  \"\"\"\n  adf: String\n\n  \"\"\"\n  Body content in editor format\n  \"\"\"\n  editor: String\n\n  \"\"\"\n  Body content in editor_2 format\n  \"\"\"\n  editor2: String\n\n  \"\"\"\n  Body content in export view format\n  \"\"\"\n  exportView: String\n\n  \"\"\"\n  Body content in storage format\n  \"\"\"\n  storage: String\n\n  \"\"\"\n  Body content in styled view format\n  \"\"\"\n  styledView: String\n\n  \"\"\"\n  Body content in view format\n  \"\"\"\n  view: String\n}\n\nenum ConfluenceContentStatus {\n  ARCHIVED\n  CURRENT\n  DELETED\n  DRAFT\n  HISTORICAL\n  TRASHED\n}\n\nenum ConfluenceContentType {\n  ATTACHMENT\n  BLOG_POST\n  COMMENT\n  PAGE\n}","cs_installations":"extend type ExtensionContext {\n    installations(first: Int, last: Int, before: String, after: String, filter: AppInstallationsFilter): AppInstallationConnection @hydrated(\n        service: \"cs_installations\", field: \"appInstallations\", arguments : [\n            { name:\"context\", value:\"$source.id\"},\n            { name:\"first\", value:\"$argument.first\"},\n            { name:\"last\", value:\"$argument.last\"},\n            { name:\"before\", value:\"$argument.before\"},\n            { name:\"after\", value:\"$argument.after\"},\n            { name:\"filter\", value:\"$argument.filter\"}\n        ])\n}\n\nenum AppTaskState {\n    PENDING\n    RUNNING\n    COMPLETE\n    FAILED\n}\n\nenum LicenseOverrideState {\n    ACTIVE\n    INACTIVE\n    TRIAL\n}\n\ninterface AppInstallationTask {\n    id: ID!\n    appId: ID!\n    appEnvironmentId: ID\n    state: AppTaskState!\n    errors: [MutationError!]\n}\n\ntype AppInstallationCreationTask implements AppInstallationTask {\n    id: ID!\n    appId: ID!\n    appEnvironmentId: ID\n    appVersionId: ID\n    context: ID!\n    state: AppTaskState!\n    errors: [MutationError!]\n}\n\ntype AppInstallationDeletionTask implements AppInstallationTask {\n    id: ID!\n    appId: ID!\n    appEnvironmentId: ID\n    context: ID!\n    state: AppTaskState!\n    errors: [MutationError!]\n}\n\ntype AppInstallationUpgradeTask implements AppInstallationTask {\n    id: ID!\n    appId: ID!\n    appEnvironmentId: ID\n    appVersionId: ID\n    context: ID!\n    state: AppTaskState!\n    errors: [MutationError!]\n}\n\ntype AppInstallationSubscribeTask implements AppInstallationTask {\n    id: ID!\n    appId: ID!\n    appEnvironmentId: ID\n    context: ID!\n    state: AppTaskState!\n    errors: [MutationError!]\n}\n\ntype AppInstallationUnsubscribeTask implements AppInstallationTask {\n    id: ID!\n    appId: ID!\n    appEnvironmentId: ID\n    context: ID!\n    state: AppTaskState!\n    errors: [MutationError!]\n}\n\n\"\"\"Input payload for the app environment install mutation\"\"\"\ninput AppInstallationInput {\n    \"\"\"\n    A unique Id representing the context into which the app is being installed\n    \"\"\"\n    installationContext: ID!\n\n    \"\"\"A unique Id representing the app\"\"\"\n    appId: ID!\n\n    \"\"\"A unique Id representing a specific version of an app\"\"\"\n    versionId: ID\n\n    \"\"\"The key of the app's environment to be used for installation\"\"\"\n    environmentKey: String!\n\n    \"\"\"Whether the installation will be done asynchronously\"\"\"\n    async: Boolean\n\n    \"\"\"Bypass licensing flow if licenseOverride is set\"\"\"\n    licenseOverride: LicenseOverrideState\n}\n\n\"\"\"The response from the installation of an app environment\"\"\"\ntype AppInstallationResponse implements Payload {\n    installationId: ID\n    taskId: ID\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n\"\"\"Input payload for the app environment uninstall mutation\"\"\"\ninput AppUninstallationInput {\n    \"\"\"\n    A unique Id representing the context into which the app is being uninstalled\n    \"\"\"\n    installationContext: ID\n\n    \"\"\"\n    A unique Id representing the installationId\"\n      \"\"\"\n    installationId: ID\n\n    \"\"\"A unique Id representing the app\"\"\"\n    appId: ID!\n\n    \"\"\"The key of the app's environment to be used for uninstallation\"\"\"\n    environmentKey: String!\n\n    \"\"\"Whether the installation will be done asynchronously\"\"\"\n    async: Boolean\n\n    \"\"\"Bypass licensing flow if licenseOverride is set\"\"\"\n    licenseOverride: LicenseOverrideState\n}\n\n\"\"\"Input payload for the app environment upgrade mutation\"\"\"\ninput AppInstallationUpgradeInput {\n    \"\"\"\n    A unique Id representing the context into which the app is being upgraded\n    \"\"\"\n    installationContext: ID!\n\n    \"\"\"A unique Id representing the app\"\"\"\n    appId: ID!\n\n    \"\"\"A unique Id representing a specific major version of the app\"\"\"\n    versionId: ID\n\n    \"\"\"The key of the app's environment to be used for installation upgrade\"\"\"\n    environmentKey: String!\n\n    \"\"\"Whether the installation upgrade will be done asynchronously\"\"\"\n    async: Boolean\n}\n\ninput AppInstallationsFilter {\n    appId: ID!\n    environmentType: AppEnvironmentType\n}\n\n\"\"\"The response from the uninstallation of an app environment\"\"\"\ntype AppUninstallationResponse implements Payload {\n    taskId: ID\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n\"\"\"The response from the installation upgrade of an app environment\"\"\"\ntype AppInstallationUpgradeResponse implements Payload {\n    installationId: ID\n    taskId: ID\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype Query {\n    appInstallationTask(id: ID!): AppInstallationTask @apiGroup(name: CAAS)\n    ecosystem: EcosystemQuery @namespaced @apiGroup(name: CAAS)\n}\n\ntype AppInstallationConnection {\n    edges: [AppInstallationEdge]\n    nodes: [AppInstallation]\n    pageInfo: PageInfo!\n}\n\ntype AppInstallationEdge {\n    cursor: String!\n    node: AppInstallation\n}\n\ntype Mutation {\n    \"\"\"\n    Installs a given app + environment pair into a given installation context.\n    \"\"\"\n    installApp(input: AppInstallationInput!): AppInstallationResponse @apiGroup(name: CAAS)\n\n    \"\"\"\n    Uninstalls a given app + environment pair into a given installation context.\n    \"\"\"\n    uninstallApp(input: AppUninstallationInput!): AppUninstallationResponse @apiGroup(name: CAAS)\n\n    \"\"\"\n    Upgrades a given app + environment pair into a given installation context.\n    \"\"\"\n    upgradeApp(input: AppInstallationUpgradeInput!): AppInstallationUpgradeResponse @apiGroup(name: CAAS)\n\n    subscribeToApp(input: AppSubscribeInput!): AppSubscribePayload @apiGroup(name: CAAS)\n\n    unsubscribeFromApp(input: AppUnsubscribeInput!): AppUnsubscribePayload @apiGroup(name: CAAS)\n}\n\ntype AppInstallation {\n    \"A unique Id representing installation the app into a context in the environment\"\n    id: ID!\n\n    \"A unique Id representing the context into which the app is being installed\"\n    installationContext: ID!\n\n    \"\"\"\n    Time when the app was installed\n    \"\"\"\n    createdAt: String!\n\n    \"\"\"\n    An object that refers to the account that installed the app\n    \"\"\"\n    createdBy: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.installerAaid\"}], identifiedBy : \"accountId\", batchSize : 90 )\n\n    \"An object that refers to the version of the installation\"\n    version: AppVersion\n\n    \"An object that refers to the installed app\"\n    app: App @hydrated(service: \"cs_apps\", field: \"installedApps\", arguments : [{ name:\"appViewIds\", value:\"$source.appViewId\"}], indexed:true, batchSize : 50 )\n\n    \"An object that refers to the installed app environment version\"\n    appEnvironmentVersion: AppEnvironmentVersion @hydrated(service: \"cs_apps\", field: \"installedAppEnvironmentsVersions\", arguments : [{ name:\"appViewIds\", value:\"$source.appViewId\"}], indexed:true, batchSize : 50 )\n\n    \"An object that refers to the installed app environment\"\n    appEnvironment: AppEnvironment @hydrated(service: \"cs_apps\", field: \"installedAppEnvironments\", arguments : [{ name:\"appViewIds\", value:\"$source.appViewId\"}], indexed:true, batchSize : 50 )\n}\n\ntype AppVersion {\n    isLatest: Boolean!\n}\n\ninput AppSubscribeInput {\n    installationContext: ID!\n    appId: ID!\n    envKey: String!\n}\n\ninput AppUnsubscribeInput {\n    installationContext: ID!\n    appId: ID!\n    envKey: String!\n}\n\n\"\"\"\nThe input arguments for checking if a user can authorise an app by OauthID\n\"\"\"\ninput CheckConsentPermissionByOAuthClientIdInput {\n  \"\"\"Cloud id where app is trying to be installed\"\"\"\n  cloudId: ID!\n\n  \"\"\"\n  The User's Atlassian account ID to verify their permissions on the target site\n  \"\"\"\n  userId: ID!\n\n  \"\"\"App's oauthClientId which will be checked against the DB if it's valid\"\"\"\n  oauthClientId: ID!\n\n  \"\"\"The requested scopes of the app connection.\"\"\"\n  scopes: [String!]!\n}\n\ntype AppSubscribePayload implements Payload {\n    taskId: ID\n    installation: AppInstallation\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype AppUnsubscribePayload implements Payload {\n    taskId: ID\n    installation: AppInstallation\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype EcosystemQuery {\n  userGrants(first: Int, last: Int, before: String, after: String): UserGrantConnection\n  checkConsentPermissionByOAuthClientId(input: CheckConsentPermissionByOAuthClientIdInput!): PermissionToConsentByOauthId\n}\n\nextend type EcosystemMutation {\n  deleteUserGrant(input: DeleteUserGrantInput!): DeleteUserGrantPayload\n}\n\ntype UserGrant {\n  id: ID!\n  accountId: ID!\n  oauthClientId: ID!\n  appId: ID\n  appDetails: UserGrantAppDetails\n  scopes: [AppHostServiceScope]! @hydrated(service: \"cs_apps\", field: \"appHostServiceScopes\", arguments: [{ name:\"keys\", value:\"$source.scopes\"}], identifiedBy: \"key\", batchSize: 50 )\n}\n\ntype UserGrantAppDetails {\n  name: String!\n  description: String!\n  avatarUrl: String\n  vendorName: String\n  contactLink: String\n  privacyPolicyLink: String\n  termsOfServiceLink: String\n}\n\ntype UserGrantConnection {\n  edges: [UserGrantEdge]\n  nodes: [UserGrant]\n  pageInfo: UserGrantPageInfo!\n}\n\ntype UserGrantEdge {\n  cursor: String!\n  node: UserGrant\n}\n\ntype UserGrantPageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ninput DeleteUserGrantInput {\n  oauthClientId: ID!\n}\n\ntype DeleteUserGrantPayload implements Payload {\n  success: Boolean!\n  errors: [MutationError!]\n}\n\ntype PermissionToConsentByOauthId {\n  isAllowed: Boolean!\n  isSiteAdmin: Boolean!\n}","teams":"extend enum RateLimitingCurrency {\n    TEAMS_CURRENCY\n    TEAM_MEMBERS_CURRENCY\n}\n\ntype Query {\n    team: TeamQuery @apiGroup(name: TEAMS) @namespaced \n}\n\n\"\"\"\n    Returns the team with the given ARI\n\"\"\"\ntype TeamQuery {\n    \"\"\"\n    Returns the team with the given ARI\n    \"\"\"\n    team(id: ID! @ARI(type: \"team\", owner: \"identity\")): Team @rateLimit(cost: 250, currency: TEAMS_CURRENCY) @beta(name: \"teams-beta\")\n}\n\n\"\"\"\n    Returns the details of the queried team\n\"\"\"\ntype Team implements Node {\n    \"\"\"\n    ID of the team\n    \"\"\"\n    id: ID! @ARI(type: \"team\", owner: \"identity\")\n\n    \"\"\"\n    Organisation ID of the team\n    \"\"\"\n    organizationId: String\n\n    \"\"\"\n    The details of the member who created the team\n    \"\"\"\n    creator: User @hydrated(service: \"identity\", field: \"users\", arguments : [{name:\"accountIds\", value:\"$source.creatorId\"}], identifiedBy : \"accountId\", batchSize : 90)\n\n    \"\"\"\n    The state of the team, enum of one of the following: ACTIVE, DISBANDED, PURGED\n    \"\"\"\n    state: TeamState\n\n    \"\"\"\n    Display name of the team\n    \"\"\"\n    displayName: String\n    \"\"\"\n    Description of the team\n    \"\"\"\n    description: String\n\n    \"\"\"\n    How members are able to be added to the team, enum of one of the following: OPEN, MEMBER_INVITE, ADMIN_INVITE\n    \"\"\"\n    membershipSetting: MembershipSetting\n\n    \"\"\"\n    URL to the small size image of the team header image\n    \"\"\"\n    smallHeaderImageUrl: String\n    \"\"\"\n    URL to the large size image of the team header image\n    \"\"\"\n    largeHeaderImageUrl: String\n    \"\"\"\n    URL to the small size image of the team avatar image\n    \"\"\"\n    smallAvatarImageUrl: String\n    \"\"\"\n    URL to the large size image of the team avatar image\n    \"\"\"\n    largeAvatarImageUrl: String\n\n    \"\"\"\n    Returns member data for the 'first' number of members after a cursor denoted by 'after' with membership state 'state'\n    If 'after' is null, member data will return from the top of the list of members.\n    \"\"\"\n    members(after: String, first: Int! = 100, state: [MembershipState!]! = [FULL_MEMBER]): TeamMemberConnection @rateLimit(cost: 500, currency: TEAM_MEMBERS_CURRENCY) @beta(name: \"team-members-beta\")\n} \n\ntype TeamMemberConnection {\n    edges: [TeamMemberEdge]\n    nodes: [TeamMember]\n    pageInfo: PageInfo!\n}\n\ntype TeamMemberEdge {\n    node: TeamMember\n    cursor: String!\n}\n\"\"\"\n    Returns the details of the team member and details about their membership within a team\n\"\"\"\ntype TeamMember {\n    \"\"\"\n    Returns details of the team member\n    \"\"\"\n    member: User @hydrated(service: \"identity\", field: \"users\", arguments : [{name:\"accountIds\", value:\"$source.memberId\"}], identifiedBy : \"accountId\", batchSize : 90)\n    \"\"\"\n    Membership state, enum of one of the following: FULL_MEMBER, ALUMNI, INVITED, REQUESTING_TO_JOIN\n    \"\"\"\n    state: MembershipState\n    \"\"\"\n    Member's role in the team, enum of one of the following: REGULAR, ADMIN\n    \"\"\"\n    role: MembershipRole\n}\n\n\"\"\"\nThe states that a team can have\n\"\"\"\nenum TeamState {\n    \"\"\"\n    The team is currently active\n    \"\"\"\n    ACTIVE,\n    \"\"\"\n    The team has been disbanded and is currently inactive\n    \"\"\"\n    DISBANDED,\n    \"\"\"\n    All members of the team have been deleted \n    \"\"\"\n    PURGED\n}\n\n\"\"\"\nThe settings which a team can have describing how members are added to the team\n\"\"\"\nenum MembershipSetting {\n    \"\"\"\n    Anyone may join\n    \"\"\"\n    OPEN,\n    \"\"\"\n    Members may invite others to join the team\n    \"\"\"\n    MEMBER_INVITE,\n    \"\"\"\n    Only admins may invite others to join the team\n    \"\"\"\n    ADMIN_INVITE\n}\n\n\"\"\"\nThe states that a member can have within a team\n\"\"\"\nenum MembershipState {\n    \"\"\"\n    A full member of the team\n    \"\"\"\n    FULL_MEMBER,\n    \"\"\"\n    A member who has been invited to the team but has not yet joined\n    \"\"\"\n    INVITED,\n    \"\"\"\n    A member who was previously a full member of the team, but has been removed or has left the team\n    \"\"\"\n    ALUMNI,\n    \"\"\"\n    A member who has requested to join the team and is pending approval\n    \"\"\"\n    REQUESTING_TO_JOIN\n}\n\n\"\"\"\nThe roles that a member can have within a team\n\"\"\"\nenum MembershipRole {\n    \"\"\"\n    A regular team member\n    \"\"\"\n    REGULAR,\n    \"\"\"\n    A team member with administrative permissions\n    \"\"\"\n    ADMIN\n}\n","compass":"    \"Indicates that the user should specify one and only one field from the input object\"\n    directive @oneOf on INPUT_OBJECT\n\n    extend enum RateLimitingCurrency {\n        COMPASS_INSERT_METRIC_VALUE_CURRENCY\n    }\n\n    \"\"\"\n    Top level wrapper for Compass Query API\n    \"\"\"\n    type CompassCatalogQueryApi {\n        \"Retrieves a single component by its internal ID.\"\n        component(id: ID! @ARI(type: \"component\", owner: \"compass\")): CompassComponentResult @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Retrieves a single component by its external alias.\"\n        componentByExternalAlias(cloudId: ID! @CloudID, externalSource: ID, externalID: ID!): CompassComponentResult @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Retrieves field definitions by component type.\"\n        fieldDefinitionsByComponentType(cloudId: ID! @CloudID, input: CompassComponentType!): CompassFieldDefinitionsResult\n\n        \"Searches for Compass components.\"\n        searchComponents(cloudId: String! @CloudID, query: CompassSearchComponentQuery): CompassComponentQueryResult @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n\n        \"\"\"\n        Searches for all component labels within Compass.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        searchComponentLabels(cloudId: String!, query: CompassSearchComponentLabelsQuery): CompassComponentLabelsQueryResult @beta(name : \"compass-prototype\")\n\n        \"Retrieves a scorecard by its unique identifier (ID).\"\n        scorecard(id: ID! @ARI(type: \"scorecard\", owner: \"compass\")): CompassScorecardResult @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n\n        \"Retrieves available scorecards.\"\n        scorecards(cloudId: ID! @CloudID, query: CompassScorecardsQuery): CompassScorecardsQueryResult @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n\n        \"Retrieve all starred components based on the user id.\"\n        starredComponents(cloudId: ID! @CloudID, query: CompassStarredComponentQuery): CompassStarredComponentQueryResult @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n\n        \"\"\"\n        A collection of checkins posted by a team; sorted by most recent.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        teamCheckins(input: CompassTeamCheckinsInput!): [CompassTeamCheckin!] @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        A collection of metric definitions on a Compass site. A metric definition provides details for a metric source.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        metricDefinitions(query: CompassMetricDefinitionsQuery!): CompassMetricDefinitionsQueryResult @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Retrieves a single metric definition by its internal ID.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        metricDefinition(cloudId: ID!, metricDefinitionId: ID!): CompassMetricDefinitionResult @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Retrieves the list of built in metric definitions provided by Compass.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        builtinMetricDefinitions: [CompassMetricDefinition!]! @beta(name : \"compass-prototype\")\n    }\n\n    union CompassComponentResult = CompassComponent | QueryError\n    union CompassComponentQueryResult = CompassSearchComponentConnection | QueryError\n    union CompassComponentLabelsQueryResult = CompassSearchComponentLabelsConnection | QueryError\n    union CompassFieldDefinitionsResult = CompassFieldDefinitions | QueryError\n    union CompassScorecardResult = CompassScorecard | QueryError\n    union CompassScorecardsQueryResult = CompassScorecardConnection | QueryError\n    union CompassEventsQueryResult = CompassEventConnection | QueryError\n    union CompassStarredComponentQueryResult = CompassStarredComponentConnection | QueryError\n    union CompassMetricDefinitionResult = CompassMetricDefinition | QueryError\n\n\n    \"\"\"\n    The top level wrapper for the Compass Mutations API.\n    \"\"\"\n    type CompassCatalogMutationApi {\n        \"Creates a new component.\"\n        createComponent(cloudId: ID! @CloudID, input: CreateCompassComponentInput!): CreateCompassComponentPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Updates an existing component.\"\n        updateComponent(input: UpdateCompassComponentInput!): UpdateCompassComponentPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Deletes an existing component.\"\n        deleteComponent(input: DeleteCompassComponentInput!): DeleteCompassComponentPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Creates a link for a component.\"\n        createComponentLink(input: CreateCompassComponentLinkInput!): CreateCompassComponentLinkPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Updates a link from a component.\"\n        updateComponentLink(input: UpdateCompassComponentLinkInput!): UpdateCompassComponentLinkPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Deletes an existing link from a component.\"\n        deleteComponentLink(input: DeleteCompassComponentLinkInput!): DeleteCompassComponentLinkPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Attach a data manager to a component.\"\n        attachComponentDataManager(input: AttachCompassComponentDataManagerInput!): AttachCompassComponentDataManagerPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Detach a data manager from a component.\"\n        detachComponentDataManager(input: DetachCompassComponentDataManagerInput!): DetachCompassComponentDataManagerPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Update a data manager of a component.\"\n        updateComponentDataManagerMetadata(input: UpdateCompassComponentDataManagerMetadataInput!): UpdateCompassComponentDataManagerMetadataPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Creates an external alias for a component.\"\n        createComponentExternalAlias(input: CreateCompassComponentExternalAliasInput!): CreateCompassComponentExternalAliasPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Deletes an existing external alias from a component.\"\n        deleteComponentExternalAlias(input: DeleteCompassComponentExternalAliasInput!): DeleteCompassComponentExternalAliasPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Clean external aliases and data managers pertaining to an externalSource\"\n        unlinkExternalSource(input: UnlinkExternalSourceInput!): UnlinkExternalSourcePayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Creates a new relationship between two components.\"\n        createRelationship(input: CreateCompassRelationshipInput!): CreateCompassRelationshipPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Deletes an existing relationship between two components.\"\n        deleteRelationship(input: DeleteCompassRelationshipInput!): DeleteCompassRelationshipPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Adds a collection of labels to a component.\"\n        addComponentLabels(input: AddCompassComponentLabelsInput!): AddCompassComponentLabelsPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Removes a collection of existing labels from a component.\"\n        removeComponentLabels(input: RemoveCompassComponentLabelsInput!): RemoveCompassComponentLabelsPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Creates a scorecard.\"\n        createScorecard(cloudId: ID! @CloudID, input: CreateCompassScorecardInput!): CreateCompassScorecardPayload @scopes(required: [WRITE_COMPASS_SCORECARD], product: COMPASS)\n\n        \"Updates a scorecard.\"\n        updateScorecard(scorecardId: ID! @ARI(type: \"scorecard\", owner: \"compass\"), input: UpdateCompassScorecardInput!): UpdateCompassScorecardPayload @scopes(required: [WRITE_COMPASS_SCORECARD], product: COMPASS)\n\n        \"Deletes a scorecard.\"\n        deleteScorecard(scorecardId: ID! @ARI(type: \"scorecard\", owner: \"compass\")): DeleteCompassScorecardPayload @scopes(required: [WRITE_COMPASS_SCORECARD], product: COMPASS)\n\n        \"Applies a scorecard to a component.\"\n        applyScorecardToComponent(scorecardId: ID! @ARI(type: \"scorecard\", owner: \"compass\"), componentId: ID! @ARI(type: \"component\", owner: \"compass\")): ApplyCompassScorecardToComponentPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Removes a scorecard from a component.\"\n        removeScorecardFromComponent(scorecardId: ID! @ARI(type: \"scorecard\", owner: \"compass\"), componentId: ID! @ARI(type: \"component\", owner: \"compass\")): RemoveCompassScorecardFromComponentPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Adds criteria to a scorecard.\"\n        createScorecardCriterias(scorecardId: ID! @ARI(type: \"scorecard\", owner: \"compass\"), input: CreateCompassScorecardCriteriasInput!): CreateCompassScorecardCriteriasPayload @scopes(required: [WRITE_COMPASS_SCORECARD], product: COMPASS)\n\n        \"Updates criteria on a scorecard.\"\n        updateScorecardCriterias(scorecardId: ID! @ARI(type: \"scorecard\", owner: \"compass\"), input: UpdateCompassScorecardCriteriasInput!): UpdateCompassScorecardCriteriasPayload @scopes(required: [WRITE_COMPASS_SCORECARD], product: COMPASS)\n\n        \"Deletes criteria from a scorecard.\"\n        deleteScorecardCriterias(scorecardId: ID! @ARI(type: \"scorecard\", owner: \"compass\"), input: DeleteCompassScorecardCriteriasInput!): DeleteCompassScorecardCriteriasPayload @scopes(required: [WRITE_COMPASS_SCORECARD], product: COMPASS)\n\n        \"\"\"\n        Creates an announcement for a component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        createAnnouncement(input: CompassCreateAnnouncementInput!): CompassCreateAnnouncementPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS) @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Updates an announcement from a component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        updateAnnouncement(input: CompassUpdateAnnouncementInput!): CompassUpdateAnnouncementPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS) @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Deletes an existing announcement from a component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        deleteAnnouncement(input: CompassDeleteAnnouncementInput!): CompassDeleteAnnouncementPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS) @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Acknowledges an announcement on behalf of a component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        acknowledgeAnnouncement(input: CompassAcknowledgeAnnouncementInput!): CompassAcknowledgeAnnouncementPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS) @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Creates an event source.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        createEventSource(input: CreateEventSourceInput!) : CreateEventSourcePayload @beta(name : \"compass-prototype\") \n\n        \"\"\"\n        Deletes an event source.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        deleteEventSource(input: DeleteEventSourceInput!) : DeleteEventSourcePayload @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Creates a deployment event.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        createDeploymentEvent(input: CreateDeploymentEventInput!) : CreateDeploymentEventsPayload @scopes(required: [WRITE_COMPASS_EVENT], product: COMPASS) @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Creates a compass event.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        createCompassEvent(input: CompassEventInput!) : CompassCreateEventsPayload @scopes(required: [WRITE_COMPASS_EVENT], product: COMPASS) @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Attaches an event source to a component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        attachEventSource(input: AttachEventSourceInput!) : AttachEventSourcePayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS) @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Detaches an event source from a component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        detachEventSource(input: DetachEventSourceInput!) : DetachEventSourcePayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS) @beta(name : \"compass-prototype\")\n\n        \"Creates a starred relationship between a user and a component.\"\n        createStarredComponent(cloudId: ID! @CloudID, input: CreateCompassStarredComponentInput!) : CreateCompassStarredComponentPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Deletes a starred relationship between a user and a component.\"\n        deleteStarredComponent(cloudId: ID! @CloudID, input: DeleteCompassStarredComponentInput!) : DeleteCompassStarredComponentPayload @scopes(required: [WRITE_COMPASS_COMPONENT], product: COMPASS)\n\n        \"\"\"\n        Creates a checkin for a team.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        createTeamCheckin(input: CompassCreateTeamCheckinInput!): CompassCreateTeamCheckinPayload @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Updates a checkin for a team.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        updateTeamCheckin(input: CompassUpdateTeamCheckinInput!): CompassUpdateTeamCheckinPayload @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Deletes a checkin from a team.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        deleteTeamCheckin(input: CompassDeleteTeamCheckinInput!): CompassDeleteTeamCheckinPayload @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Creates a metric definition on a Compass site. A metric definition provides details for a metric source.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        createMetricDefinition(input: CompassCreateMetricDefinitionInput!): CompassCreateMetricDefinitionPayload @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Updates a metric definition on a Compass site.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        updateMetricDefinition(input: CompassUpdateMetricDefinitionInput!): CompassUpdateMetricDefinitionPayload @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Deletes a metric definition including the metric sources it defines from a Compass site. Metric sources contain values providing numerical data about a component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        deleteMetricDefinition(input: CompassDeleteMetricDefinitionInput!): CompassDeleteMetricDefinitionPayload @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Creates a metric source for a component. A metric source contains values providing numerical data about a component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        createMetricSource(input: CompassCreateMetricSourceInput!): CompassCreateMetricSourcePayload @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Deletes a metric source including the metric values it contains.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        deleteMetricSource(input: CompassDeleteMetricSourceInput!): CompassDeleteMetricSourcePayload @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        Inserts a metric value in a metric source for a component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        insertMetricValue(input: CompassInsertMetricValueInput!): CompassInsertMetricValuePayload @rateLimit(cost: 100, currency: COMPASS_INSERT_METRIC_VALUE_CURRENCY) @beta(name : \"compass-prototype\")\n    }\n\n    extend type Query {\n        \"\"\"This API is currently in BETA. You must provide \"X-ExperimentalApi:compass-beta\" in your request header\"\"\"\n        compass: CompassCatalogQueryApi @beta(name : \"compass-beta\") @apiGroup(name: COMPASS) @namespaced\n    }\n\n    extend type Mutation {\n        \"\"\"This API is currently in BETA. You must provide \"X-ExperimentalApi:compass-beta\" in your request header\"\"\"\n        compass: CompassCatalogMutationApi @beta(name : \"compass-beta\") @apiGroup(name: COMPASS) @namespaced\n    }\n\n    \"Metadata about who created or updated the object and when.\"\n    type CompassChangeMetadata {\n        \"The date and time when the object was created.\"\n        createdAt: DateTime\n\n        \"The user who created the object.\"\n        createdBy: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.createdBy.id\"}], identifiedBy : \"accountId\", batchSize : 90 )\n\n        \"The date and time when the object was last updated.\"\n        lastUserModificationAt: DateTime\n\n        \"The user who last updated the object.\"\n        lastUserModificationBy: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.lastUserModificationBy.id\"}], identifiedBy : \"accountId\", batchSize : 90 )\n    }\n\n    \"A component represents a software development artifact tracked in Compass.\"\n    type CompassComponent implements Node {\n\n        \"The unique identifier (ID) of the component.\"\n        id: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The type of component.\"\n        type: CompassComponentType!\n\n        \"The name of the component.\"\n        name: String!\n\n        \"The description of the component.\"\n        description: String\n\n        \"The unique identifier (ID) of the team that owns the component.\"\n        ownerId: ID\n\n        \"The external integration that manages data for this component.\"\n        dataManager: CompassComponentDataManager\n\n        \"Metadata about who created the component and when.\"\n        changeMetadata: CompassChangeMetadata!\n\n        \"A collection of fields for storing data about the component.\"\n        fields: [CompassField!]\n\n        \"A collection of links to other entities on the internet.\"\n        links: [CompassLink!]\n\n        \"A collection of relationships between the component and other entities in Compass.\"\n        relationships(query: CompassRelationshipQuery): CompassRelationshipConnectionResult\n\n        \"A collection of aliases that represent the component in external systems.\"\n        externalAliases: [CompassExternalAlias!]\n\n        \"A collection of labels that provide additional contextual information about the component.\"\n        labels: [CompassComponentLabel!]\n\n        \"A collection of scorecards applied to a component.\"\n        scorecards: [CompassScorecard!] @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n\n        \"A collection of scorecard scores applied to a component.\"\n        scorecardScores: [CompassScorecardScore!] @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n\n        \"A collection of scorecards applicable to a component.\"\n        applicableScorecards: [CompassScorecard!] @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n\n        \"\"\"\n        A collection of announcements posted by the component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        announcements: [CompassAnnouncement!] @beta(name : \"compass-prototype\")\n\n        \"\"\"\n        The events associated to the component.\n        Note that the 'X-ExperimentalApi: compass-prototype' HTTP header below is required in addition to the 'X-ExperimentalApi: compass-beta' HTTP header. Set both the headers for this field.\n        \"\"\"\n        events(query: CompassEventsQuery): CompassEventsQueryResult @scopes(required: [READ_COMPASS_EVENT], product: COMPASS) @beta(name : \"compass-prototype\")\n\n        \"The event sources associated to the component.\"\n        eventSources: [EventSource!] @beta(name : \"compass-prototype\")\n\n        \"Returns the calculated total score for a given scorecard applied to this component.\"\n        scorecardScore(query: CompassComponentScorecardScoreQuery): CompassScorecardScore\n\n        \"A collection of metric sources, which contain values providing numerical data about the component.\"\n        metricSources(query: CompassComponentMetricSourcesQuery): CompassComponentMetricSourcesQueryResult @beta(name : \"compass-prototype\")\n    }\n\n    \"Identifies the type of component.\"\n    enum CompassComponentType {\n\n        \"A standalone software artifact that is directly consumable by an end-user.\"\n        APPLICATION\n\n        \"A standalone software artifact that provides some functionality for other software via embedding.\"\n        LIBRARY\n\n        \"A software artifact that provides some functionality for other software over the network.\"\n        SERVICE\n\n        \"A software artifact that does not fit into the pre-defined categories.\"\n        OTHER\n    }\n\n    \"Accepts input for creating a new component.\"\n    input CreateCompassComponentInput {\n        \"The name of the component.\"\n        name: String!\n\n        \"The description of the component.\"\n        description: String\n\n        \"The type of the component.\"\n        type: CompassComponentType!\n\n        \"The unique identifier (ID) of the team that owns the component.\"\n        ownerId: ID\n\n        \"A collection of fields for storing data about the component.\"\n        fields: [CreateCompassFieldInput!]\n    }\n\n    \"The payload returned from creating a new component.\"\n    type CreateCompassComponentPayload implements Payload {\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"Accepts input for updating an existing component.\"\n    input UpdateCompassComponentInput {\n\n        \"The ID of the component being updated.\"\n        id: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The name of the component.\"\n        name: String\n\n        \"The description of the component.\"\n        description: String\n\n        \"The unique identifier (ID) of the team that owns the component.\"\n        ownerId: ID\n\n        \"A collection of fields for storing data about the component.\"\n        fields: [UpdateCompassFieldInput!]\n    }\n\n    \"The payload returned from updating an existing component.\"\n    type UpdateCompassComponentPayload implements Payload {\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"Accepts input for deleting an existing component.\"\n    input DeleteCompassComponentInput {\n\n        \"The ID of the component to be deleted.\"\n        id: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    \"The payload returned from deleting an existing component.\"\n    type DeleteCompassComponentPayload implements Payload {\n\n        \"The ID of the component that was deleted.\"\n        deletedComponentId: ID\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    \"An alias of the component in an external system.\"\n    type CompassExternalAlias {\n\n        \"The external system hosting the component.\"\n        externalSource: ID\n\n        \"The ID of the component in an external system.\"\n        externalAliasId: ID!\n    }\n\n    \"Accepts input to create an external alias of a component.\"\n    input CreateCompassComponentExternalAliasInput {\n\n        \"The ID of the component to which you add the alias.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"An alias of the component identifier in external sources.\"\n        externalAlias: CompassExternalAliasInput!\n    }\n\n    \"The payload returned from creating an external alias of a component.\"\n    type CreateCompassComponentExternalAliasPayload implements Payload {\n        \"Created Compass External Alias\"\n        createdCompassExternalAlias: CompassExternalAlias\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"Accepts input to delete an external alias.\"\n    input DeleteCompassComponentExternalAliasInput {\n\n        \"The ID of the component to which you add the external alias.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The alias of the component identifier in external sources.\"\n        externalAlias: CompassExternalAliasInput!\n    }\n\n    input CompassExternalAliasInput {\n        \"The ID of the component in the external source\"\n        externalId: ID!\n\n        \"The external system hosting the component\"\n        externalSource: ID\n    }\n\n    \"The payload returned from deleting the external alias of a component.\"\n    type DeleteCompassComponentExternalAliasPayload implements Payload {\n        \"Deleted Compass External Alias\"\n        deletedCompassExternalAlias: CompassExternalAlias\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"Handles detaching a dataManager from a Component\"\n    input UnlinkExternalSourceInput {\n        cloudId: ID! @CloudID\n\n        \"The ID of the Forge App being uninstalled\"\n        ecosystemAppId: ID!\n\n        \"The external source name of any ExternalAliases to be removed\"\n        externalSource: String!\n    }\n\n    type UnlinkExternalSourcePayload implements Payload {\n\n        \"Whether the mutation succeeded or not\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation\"\n        errors: [MutationError!]\n    }\n\n    \"Accepts input to create a field.\"\n    input CreateCompassFieldInput {\n\n        \"The ID of the field definition.\"\n        definition: ID!\n\n        \"The value of the field.\"\n        value: CompassFieldValueInput!\n    }\n\n    input CompassEnumFieldValueInput {\n        value: [String!]\n    }\n\n    input CompassFieldValueInput @oneOf {\n        enum: CompassEnumFieldValueInput\n    }\n\n    \"Accepts input to update a field.\"\n    input UpdateCompassFieldInput {\n\n        \"The ID of the field definition.\"\n        definition: ID!\n\n        \"The value of the field.\"\n        value: CompassFieldValueInput!\n    }\n\n    \"A field represents data about a component.\"\n    interface CompassField {\n\n        \"The definition of the field.\"\n        definition: CompassFieldDefinition\n    }\n\n    type CompassEnumField implements CompassField {\n\n        \"The definition of the field.\"\n        definition: CompassFieldDefinition\n\n        \"The value of the field.\"\n        value: [String!]\n    }\n\n    \"The schema of a field.\"\n    type CompassFieldDefinition {\n\n        \"The unique identifier (ID) of the field definition.\"\n        id: ID!\n\n        \"The name of the field.\"\n        name: String!\n\n        \"The options for the field definition.\"\n        options: CompassFieldDefinitionOptions!\n\n        \"The description of the field.\"\n        description: String!\n\n        \"The type of field.\"\n        type: CompassFieldType!\n    }\n\n    type CompassFieldDefinitions {\n        definitions: [CompassFieldDefinition!]!\n    }\n\n    type CompassEnumFieldDefinitionOptions {\n\n        \"Possible values of the field definition.\"\n        values: [String!]\n\n        \"The default option for field definition. If null, the field is not required.\"\n        default: [String!]\n    }\n\n    union CompassFieldDefinitionOptions = CompassEnumFieldDefinitionOptions\n\n    \"Specifies the type of value for a field.\"\n    enum CompassFieldType {\n        TEXT\n        NUMBER\n        DATE\n        ENUM\n    }\n\n    \"A label provides additional contextual information about a component.\"\n    type CompassComponentLabel {\n        \"The name of the label.\"\n        name: String\n    }\n\n    \"Accepts input for adding labels to a component.\"\n    input AddCompassComponentLabelsInput {\n        \"The ID of the component to add the labels to.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The collection of labels to add to the component.\"\n        labelNames: [String!]!\n    }\n\n    \"Accepts input for removing labels from a component.\"\n    input RemoveCompassComponentLabelsInput {\n        \"The ID of the component to remove the labels from.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The collection of labels to remove from the component.\"\n        labelNames: [String!]!\n    }\n\n    \"The payload returned after adding labels to a component.\"\n    type AddCompassComponentLabelsPayload implements Payload {\n        \"The collection of labels that were added to the component.\"\n        addedLabels: [CompassComponentLabel!]\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent\n    }\n\n    \"The payload returned after removing labels from a component.\"\n    type RemoveCompassComponentLabelsPayload implements Payload {\n        \"The collection of labels that were removed from the component.\"\n        removedLabelNames: [String!]\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent\n    }\n\n    \"A link to an entity or resource on the internet.\"\n    type CompassLink {\n        \"The unique identifier (ID) of the link.\"\n        id: ID!\n\n        \"The type of link.\"\n        type: CompassLinkType!\n\n        \"An URL to the entity or resource on the internet.\"\n        url: URL!\n\n        \"An user-provided name of the link.\"\n        name: String\n    }\n\n    \"The types used to identify the intent of the link.\"\n    enum CompassLinkType {\n\n        \"A link to the documentation of the component.\"\n        DOCUMENT\n\n        \"Chat Channels for contacting the owners/support of the component\"\n        CHAT_CHANNEL\n\n        \"A link to the source code repository of the component.\"\n        REPOSITORY\n\n        \"A link to the Jira or third-party project of the component.\"\n        PROJECT\n\n        \"A link to the dashboard of the component.\"\n        DASHBOARD\n\n        \"A link to the on-call schedule of the component.\"\n        ON_CALL\n\n        \"Other link for a Component.\"\n        OTHER_LINK\n    }\n\n    \"Accepts input to add links for a component.\"\n    input CreateCompassComponentLinkInput {\n\n        \"The ID of the component to add the link.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The link to be added for the component.\"\n        link: CreateCompassLinkInput!\n    }\n\n    \"Accepts details of the link to add to a component.\"\n    input CreateCompassLinkInput {\n\n        \"The name of the link.\"\n        name: String\n\n        \"The type of the link.\"\n        type: CompassLinkType!\n\n        \"The URL of the link.\"\n        url: URL!\n    }\n\n        \"The payload returned after adding a link for a component.\"\n    type CreateCompassComponentLinkPayload implements Payload {\n        \"The newly created component link.\"\n        createdComponentLink: CompassLink\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"Accepts input for updating a component link.\"\n    input UpdateCompassComponentLinkInput {\n\n        \"The ID for the component to update the link.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The link to be updated for the component.\"\n        link: UpdateCompassLinkInput!\n    }\n\n    \"Accepts details of the link to be updated.\"\n    input UpdateCompassLinkInput {\n        \"The unique identifier (ID) of the link.\"\n        id: ID!\n\n        \"The name of the link.\"\n        name: String\n\n        \"The type of the link.\"\n        type: CompassLinkType\n\n        \"The URL of the link.\"\n        url: URL\n    }\n\n    \"The payload returned after updating a component link.\"\n    type UpdateCompassComponentLinkPayload implements Payload {\n        \"The newly updated component link.\"\n        updatedComponentLink: CompassLink\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"Accepts input to delete a component link.\"\n    input DeleteCompassComponentLinkInput {\n\n        \"The ID for the component to delete a link.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The component link to be deleted.\"\n        link: ID!\n    }\n\n    \"The payload retuned after deleting a component link.\"\n    type DeleteCompassComponentLinkPayload implements Payload {\n        \"The ID of the deleted component link.\"\n        deletedCompassLinkId: ID\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"A relationship between two components.\"\n    type CompassRelationship {\n        \"The type of relationship.\"\n        type: CompassRelationshipType!\n\n        \"The starting node of the relationship.\"\n        startNode: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n\n        \"The ending node of the relationship.\"\n        endNode: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n\n        changeMetadata: CompassChangeMetadata\n    }\n\n    \"Defines the relationship types. A relationship must be one of these types.\"\n    enum CompassRelationshipType {\n        DEPENDS_ON\n    }\n\n    \"Defines the possible relationship directions between components.\"\n    enum CompassRelationshipDirection {\n        \"Going from the other component to this component.\"\n        INWARD\n\n        \"Going from this component to the other component.\"\n        OUTWARD\n    }\n\n    \"Accepts input for finding component relationships.\"\n    input CompassRelationshipQuery {\n        \"The number of relationships to return in the query.\"\n        first: Int\n\n        \"The relationships to be returned after the specified cursor position.\"\n        after: String\n\n        \"The direction of relationships to be searched for.\"\n        direction: CompassRelationshipDirection! = OUTWARD\n\n        \"The filters for the relationships to be searched for.\"\n        filters: CompassRelationshipQueryFilters\n    }\n\n    input CompassRelationshipQueryFilters {\n        \"OR'd set of relationship types.\"\n        types: [CompassRelationshipType!]\n    }\n\n    union CompassRelationshipConnectionResult = CompassRelationshipConnection | QueryError\n\n    type CompassRelationshipConnection {\n        edges: [CompassRelationshipEdge!]\n        nodes: [CompassRelationship!]\n        pageInfo: PageInfo!\n    }\n\n    type CompassRelationshipEdge {\n        cursor: String!\n        node: CompassRelationship\n    }\n\n    \"Accepts input for creating a new relationship.\"\n    input CreateCompassRelationshipInput {\n        \"The type of the relationship.\"\n        type: CompassRelationshipType!\n\n        \"The unique identifier (ID) of the component at the starting node.\"\n        startNodeId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The unique identifier (ID) of the component at the ending node.\"\n        endNodeId: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    \"The payload returned from creating a new relationship.\"\n    type CreateCompassRelationshipPayload implements Payload {\n        \"The newly created relationship between two components.\"\n        createdCompassRelationship: CompassRelationship\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    \"Accepts input for deleting an existing relationship between two components.\"\n    input DeleteCompassRelationshipInput {\n        \"The type of the relationship.\"\n        type: CompassRelationshipType!\n\n        \"The unique identifier (ID) of the component at the starting node.\"\n        startNodeId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The unique identifier (ID) of the component at the ending node.\"\n        endNodeId: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    \"The payload returned from deleting an existing component.\"\n    type DeleteCompassRelationshipPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    # COMPASS ANNOUNCEMENTS\n\n    \"An announcement communicates news or updates relating to a component.\"\n    type CompassAnnouncement {\n        \"The ID of the announcement.\"\n        id: ID!\n\n        \"The component that posted the announcement.\"\n        component: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n\n        \"The title of the announcement.\"\n        title: String\n\n        \"The description of the announcement.\"\n        description: String\n\n        \"The date on which the updates in the announcement will take effect.\"\n        targetDate: DateTime\n\n        \"The list of acknowledgements that are required for this announcement.\"\n        acknowledgements: [CompassAnnouncementAcknowledgement!]\n    }\n\n    \"Tracks whether or not a component has acknowledged an announcement.\"\n    type CompassAnnouncementAcknowledgement {\n        \"The component that needs to acknowledge.\"\n        component: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Whether the component has acknowledged the announcement or not.\"\n        hasAcknowledged: Boolean\n    }\n\n    \"Accepts input for creating a component announcement.\"\n    input CompassCreateAnnouncementInput {\n        \"The ID of the component to create an announcement for.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The title of the announcement.\"\n        title: String!\n\n        \"The description of the announcement.\"\n        description: String\n\n        \"The date on which the changes in the announcement will take effect.\"\n        targetDate: DateTime!\n    }\n\n    \"The payload returned after creating a component announcement.\"\n    type CompassCreateAnnouncementPayload implements Payload {\n        \"The created announcement.\"\n        createdAnnouncement: CompassAnnouncement\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    \"Accepts input for updating a component announcement.\"\n    input CompassUpdateAnnouncementInput {\n        \"The cloud ID of the site to update an announcement on.\"\n        cloudId: ID! @CloudID\n\n        \"The ID of the announcement being updated.\"\n        id: ID!\n\n        \"The title of the announcement.\"\n        title: String\n\n        \"The description of the announcement.\"\n        description: String\n\n        \"The date on which the changes in the announcement will take effect.\"\n        targetDate: DateTime\n\n        \"Whether the existing acknowledgements should be reset or not.\"\n        clearAcknowledgements: Boolean\n    }\n\n    \"The payload returned after updating a component announcement.\"\n    type CompassUpdateAnnouncementPayload implements Payload {\n        \"The updated announcement.\"\n        updatedAnnouncement: CompassAnnouncement\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    \"Accepts input for deleting a component announcement.\"\n    input CompassDeleteAnnouncementInput {\n        \"The cloud ID of the site to delete an announcement from.\"\n        cloudId: ID! @CloudID\n\n        \"The ID of the announcement to delete.\"\n        id: ID!\n    }\n\n    \"The payload returned after deleting a component announcement.\"\n    type CompassDeleteAnnouncementPayload implements Payload {\n        \"The ID of the announcement that was deleted.\"\n        deletedAnnouncementId: ID\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    \"Accepts input for acknowledging an announcement.\"\n    input CompassAcknowledgeAnnouncementInput {\n        \"The ID of the announcement being acknowledged.\"\n        announcementId: ID!\n\n        \"The ID of the component that is acknowledging the announcement.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    \"The payload returned after acknowledging an announcement.\"\n    type CompassAcknowledgeAnnouncementPayload implements Payload {\n        \"The announcement acknowledgement.\"\n        acknowledgement: CompassAnnouncementAcknowledgement\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    # COMPONENT DATA MANAGER\n\n    \"An external integration that manages data for a particular component.\"\n    type CompassComponentDataManager {\n\n        \"The unique identifier (ID) of the ecosystem app acting as a component data manager.\"\n        ecosystemAppId: ID!\n\n        \"An URL of the external source.\"\n        externalSourceURL: URL\n\n        \"Details about the last sync event to this component.\"\n        lastSyncEvent: ComponentSyncEvent\n    }\n\n    \"Event data corresponding to a dataManager updating a component.\"\n    type ComponentSyncEvent {\n\n        \"Timestamp when the last sync event occurred.\"\n        time: DateTime!\n\n        \"Status of the last sync event.\"\n        status: ComponentSyncEventStatus!\n\n        \"Error messages explaining why the last sync event may have failed.\"\n        lastSyncErrors: [String!]\n    }\n\n    \"Status types of a data manager sync event.\"\n    enum ComponentSyncEventStatus {\n\n        \"The component updates were successfully synced to Compass.\"\n        SUCCESS\n\n        \"An issue with the calling app or user input prevented the component from syncing to Compass.\"\n        USER_ERROR\n\n        \"A Compass internal server issue prevented the sync from occurring.\"\n        SERVER_ERROR\n    }\n\n    \"Accepts input to attach a data manager to a component.\"\n    input AttachCompassComponentDataManagerInput {\n\n        \"The ID of the component to attach a data manager to.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"An URL of the external source of the component's data.\"\n        externalSourceURL: URL\n    }\n\n    \"The payload returned from attaching a data manager to a component.\"\n    type AttachCompassComponentDataManagerPayload implements Payload {\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"Accepts input to detach a data manager from a component.\"\n    input DetachCompassComponentDataManagerInput {\n\n        \"The ID of the component to detach a data manager from.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    \"The payload returned from detaching a data manager from a component.\"\n    type DetachCompassComponentDataManagerPayload implements Payload {\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"Accepts input to update a data manager on a component.\"\n    input UpdateCompassComponentDataManagerMetadataInput {\n  \n        \"The ID of the component to update a data manager on.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"A URL of the external source of the component's data.\"\n        externalSourceURL: URL\n\n        \"Details about the last sync event to this component.\"\n        lastSyncEvent: ComponentSyncEventInput\n    }\n\n    \"Details on the result of the last component sync.\"\n    input ComponentSyncEventInput {\n\n        \"Status of the last sync event.\"\n        status: ComponentSyncEventStatus!\n\n        \"Error messages explaining why last sync event failed.\"\n        lastSyncErrors: [String!]\n    }\n\n    \"The payload returned from updating a data manager of a component.\"\n    type UpdateCompassComponentDataManagerMetadataPayload implements Payload {\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    # SCORECARD CONFIGURATION\n\n    \"The configuration for a scorecard that can be used by components.\"\n    type CompassScorecard implements Node {\n    \"The unique identifier (ID) of the scorecard.\"\n        id: ID! @ARI(type: \"scorecard\", owner: \"compass\")\n\n        \"The name of the scorecard.\"\n        name: String!\n\n        \"The description of the scorecard.\"\n        description: String\n\n        \"The criteria used for calculating the score.\"\n        criterias: [CompassScorecardCriteria!]\n\n        \"The unique identifier (ID) of the scorecard's owner.\"\n        owner: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.ownerId\"}], identifiedBy : \"accountId\", batchSize : 90 )\n\n        \"The type of component to which this scorecard is restricted.\"\n        componentType: CompassComponentType!\n\n        \"Determines how the scorecard will be applied by default.\"\n        importance: CompassScorecardImportance!\n\n        \"Returns the calculated total score for a given component.\"\n        scorecardScore(query: CompassScorecardScoreQuery): CompassScorecardScore\n\n        \"Returns a list of components to which this scorecard is applied.\"\n        appliedToComponents(query: CompassScorecardAppliedToComponentsQuery): CompassScorecardAppliedToComponentsQueryResult\n\n        \"Contains change metadata for the scorecard.\"\n        changeMetadata: CompassChangeMetadata!\n    }\n\n    \"The types used to identify the importance of the scorecard.\"\n    enum CompassScorecardImportance {\n        \"Automatically applied to all components of the specified type or types and cannot be removed.\"\n        REQUIRED\n\n        \"Recommended to the component's owner when they select a scorecard to apply to their component.\"\n        RECOMMENDED\n\n        \"Custom scorecard, focused on specific use cases within teams or departments.\"\n        USER_DEFINED\n    }\n\n    # SCORECARD SCORE\n\n    \"Scorecard score on a scorecard for a component.\"\n    input CompassScorecardScoreQuery {\n        \"The unique identifier (ID) of the component.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    \"Scorecard score on a component for a scorecard.\"\n    input CompassComponentScorecardScoreQuery {\n        \"The unique identifier (ID) of the scorecard.\"\n        scorecardId: ID! @ARI(type: \"scorecard\", owner: \"compass\")\n    }\n\n    \"Contains the calculated score for a component. Each component has one calculated score per scorecard.\"\n    type CompassScorecardScore {\n        \"The total calculated score value.\"\n        totalScore: Int!\n\n        \"The maximum possible total score value.\"\n        maxTotalScore: Int!\n\n        \"Returns the scores for individual criterion.\"\n        criteriaScores: [CompassScorecardCriteriaScore!]\n    }\n\n    # SCORECARD CRITERIA\n\n    \"The configuration for a scorecard criterion that can be shared across components.\"\n    interface CompassScorecardCriteria {\n        \"The ID of the scorecard criterion.\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int!\n\n        \"Returns the calculated score for a component.\"\n        scorecardCriteriaScore(query: CompassScorecardCriteriaScoreQuery): CompassScorecardCriteriaScore\n    }\n\n    \"The configuration for a scorecard criterion representing the presence of a link, for example, 'Has Repository', or 'Has Documentation'.\"\n    type CompassHasLinkScorecardCriteria implements CompassScorecardCriteria {\n        \"The ID of the scorecard criterion.\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int!\n\n        \"The type of link, for example 'Repository' if 'Has Repository'.\"\n        linkType: CompassLinkType!\n\n        \"Returns the calculated score for a component.\"\n        scorecardCriteriaScore(query: CompassScorecardCriteriaScoreQuery): CompassScorecardCriteriaScore\n    }\n\n    \"The configuration for a scorecard criterion representing the presence of a field, for example, 'Has Tier'.\"\n    type CompassHasFieldScorecardCriteria implements CompassScorecardCriteria {\n        \"The ID of the scorecard criterion.\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int!\n\n        \"The target of a relationship, for example, 'Owner' if 'Has Owner'.\"\n        fieldDefinition: CompassFieldDefinition!\n\n        \"Returns the calculated score for a component.\"\n        scorecardCriteriaScore(query: CompassScorecardCriteriaScoreQuery): CompassScorecardCriteriaScore\n    }\n\n    \"The configuration for a scorecard criterion representing the presence of a description.\"\n    type CompassHasDescriptionScorecardCriteria implements CompassScorecardCriteria {\n        id: ID!\n        weight: Int!\n\n        \"Returns the calculated score for a given component\"\n        scorecardCriteriaScore(query: CompassScorecardCriteriaScoreQuery): CompassScorecardCriteriaScore\n    }\n\n    \"Configuration for a scorecard criteria representing the presence of an owner\"\n    type CompassHasOwnerScorecardCriteria implements CompassScorecardCriteria {\n        \"The ID of the scorecard criterion.\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int!\n\n        \"Returns the calculated score for a component.\"\n        scorecardCriteriaScore(query: CompassScorecardCriteriaScoreQuery): CompassScorecardCriteriaScore\n    }\n\n    \"The configuration for a scorecard criterion checking the value of a specified metric name.\"\n    type CompassHasMetricValueScorecardCriteria implements CompassScorecardCriteria {\n        \"The ID of the scorecard criterion.\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int!\n\n        \"The threshold value that the metric is compared to.\"\n        comparatorValue: Float!\n\n        \"The ID of the component metric to check the value of.\"\n        metricDefinitionId: ID!\n\n        \"The comparison operation to be performed between the metric and comparator value.\"\n        comparator: CompassCriteriaNumberComparatorOptions!\n\n        \"Returns the calculated score for a component.\"\n        scorecardCriteriaScore(query: CompassScorecardCriteriaScoreQuery): CompassScorecardCriteriaScore\n\n        \"Returns the metric definition this criteria uses.\"\n        metricDefinition: CompassMetricDefinition\n    }\n\n    # CRITERIA SCORE\n\n    \"Contains the calculated score for each scorecard criteria that is associated with a specific component.\"\n    type CompassScorecardCriteriaScore {\n        \"The calculated score value for the criterion.\"\n        score: Int!\n\n        \"The maximum score value for the criterion. The value is used in calculating the aggregate score as a percentage.\"\n        maxScore: Int!\n    }\n\n    input CompassScorecardCriteriaScoreQuery {\n        \"The unique identifier (ID) of the component.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    # QUERY TYPES\n\n    \"Accepts input to find available scorecards.\"\n    input CompassScorecardsQuery {\n        \"The first N number of scorecards to return in the query.\"\n        first: Int\n\n        \"Returns the scorecards after the specified cursor position.\"\n        after: String\n    }\n\n    type CompassScorecardConnection {\n        edges: [CompassScorecardEdge!]\n        nodes: [CompassScorecard!]\n        pageInfo: PageInfo!\n    }\n\n    type CompassScorecardEdge {\n        cursor: String!\n        node: CompassScorecard\n    }\n\n    union CompassScorecardAppliedToComponentsQueryResult = CompassScorecardAppliedToComponentsConnection | QueryError\n\n    input CompassScorecardAppliedToComponentsQueryFilter {\n        score: CompassScorecardAppliedToComponentsThresholdFilter!\n    }\n\n    input CompassScorecardAppliedToComponentsThresholdFilter {\n        lt: Int!\n    }\n\n    \"Accepts input to find components a scorecard is applied to and their scores\"\n    input CompassScorecardAppliedToComponentsQuery {\n        \"The first N number of components to return in the query.\"\n        first: Int\n\n        \"Returns the components after the specified cursor position.\"\n        after: String\n\n        \"Returns only components whose attributes match those in the filters specified\"\n        filter: CompassScorecardAppliedToComponentsQueryFilter\n    }\n\n    type CompassScorecardAppliedToComponentsConnection {\n        edges: [CompassScorecardAppliedToComponentsEdge!]\n        nodes: [CompassComponent!]\n        pageInfo: PageInfo!\n    }\n\n    type CompassScorecardAppliedToComponentsEdge {\n        cursor: String!\n        node: CompassComponent\n    }\n\n    # MUTATION INPUTS/PAYLOAD TYPES\n\n    input CreateCompassScorecardInput {\n        name: String!\n        description: String\n        ownerId: ID\n        componentType: CompassComponentType!\n        importance: CompassScorecardImportance!\n        criterias: [CreateCompassScorecardCriteriaInput!]\n    }\n\n    input UpdateCompassScorecardInput {\n        name: String\n        description: String\n        ownerId: ID\n        componentType: CompassComponentType\n        importance: CompassScorecardImportance\n    }\n\n    \"Accepts input to create a scorecard criterion.\"\n    input CreateCompassScorecardCriteriasInput {\n        criterias: [CreateCompassScorecardCriteriaInput!]!\n    }\n\n    \"Accepts input to create a scorecard criterion.\"\n    input CreateCompassScorecardCriteriaInput {\n        hasLink: CreateCompassHasLinkScorecardCriteriaInput\n        hasField: CreateCompassHasFieldScorecardCriteriaInput\n        hasDescription: CreateCompassHasDescriptionScorecardCriteriaInput\n        hasOwner: CreateCompassHasOwnerScorecardCriteriaInput\n        hasMetricValue: CreateCompassHasMetricValueCriteriaInput\n    }\n\n    \"Accepts input to create a scorecard criterion checking the value of a specified metric ID.\"\n    input CreateCompassHasMetricValueCriteriaInput {\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int!\n\n        \"The ID of the component metric to check the value of.\"\n        metricDefinitionId: ID!\n\n        \"The threshold value that the metric is compared to.\"\n        comparatorValue: Float!\n\n        \"The comparison operation to be performed between the metric and comparator value.\"\n        comparator: CompassCriteriaNumberComparatorOptions!\n    }\n\n    enum CompassCriteriaNumberComparatorOptions {\n        EQUALS,\n        GREATER_THAN,\n        LESS_THAN,\n        GREATER_THAN_OR_EQUAL_TO,\n        LESS_THAN_OR_EQUAL_TO\n    }\n\n    \"Accepts input to create a scorecard criterion representing the presence of a link, for example, 'Has Repository' or 'Has Documentation'.\"\n    input CreateCompassHasLinkScorecardCriteriaInput {\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int!\n\n        \"The type of link, for example, 'Repository' if 'Has Repository'.\"\n        linkType: CompassLinkType!\n    }\n\n    \"Accepts input to create a scorecard criterion representing the presence of a field, for example, 'Has Tier'.\"\n    input CreateCompassHasFieldScorecardCriteriaInput {\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int!\n\n        \"The ID for the field definition that is the target of a relationship.\"\n        fieldDefinitionId: ID!\n    }\n\n    \"Accepts input to a create a scorecard criterion representing the presence of a description.\"\n    input CreateCompassHasDescriptionScorecardCriteriaInput {\n        weight: Int!\n    }\n\n    input CreateCompassHasOwnerScorecardCriteriaInput {\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int!\n    }\n\n    input UpdateCompassScorecardCriteriasInput {\n        criterias: [UpdateCompassScorecardCriteriaInput!]!\n    }\n\n    input UpdateCompassScorecardCriteriaInput {\n        hasLink: UpdateCompassHasLinkScorecardCriteriaInput\n        hasField: UpdateCompassHasFieldScorecardCriteriaInput\n        hasDescription: UpdateCompassHasDescriptionScorecardCriteriaInput\n        hasOwner: UpdateCompassHasOwnerScorecardCriteriaInput\n        hasMetricValue: UpdateCompassHasMetricValueCriteriaInput\n    }\n\n    input UpdateCompassHasMetricValueCriteriaInput {\n        \"ID of the scorecard criteria to update\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int\n\n        \"The ID of the component metric to check the value of.\"\n        metricDefinitionId: ID\n\n        \"The threshold value that the metric is compared to.\"\n        comparatorValue: Float\n\n        \"The comparison operation to be performed between the metric and comparator value.\"\n        comparator: CompassCriteriaNumberComparatorOptions\n    }\n\n    input UpdateCompassHasLinkScorecardCriteriaInput {\n        \"ID of the scorecard criteria to update\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int\n\n        \"The type of link, for example, 'Repository' if 'Has Repository'.\"\n        linkType: CompassLinkType\n    }\n\n    input UpdateCompassHasFieldScorecardCriteriaInput {\n        \"ID of the scorecard criteria to update\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int\n\n        \"The ID for the field definition which is the target of a relationship.\"\n        fieldDefinitionId: ID\n    }\n\n    input UpdateCompassHasDescriptionScorecardCriteriaInput {\n        \"The ID of the scorecard criterion to update.\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int\n    }\n\n    input UpdateCompassHasOwnerScorecardCriteriaInput {\n        \"The ID of the scorecard criterion to update.\"\n        id: ID!\n\n        \"The weight that will be used in determining the aggregate score.\"\n        weight: Int\n    }\n\n    input DeleteCompassScorecardCriteriasInput {\n        criterias: [DeleteCompassScorecardCriteriaInput!]!\n    }\n\n    input DeleteCompassScorecardCriteriaInput {\n        \"ID of the scorecard criterion for deletion. The criteria is already applied to a scorecard.\"\n        id: ID!\n    }\n\n    \"The payload returned from creating a scorecard criterion.\"\n    type CreateCompassScorecardPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The scorecard that was mutated.\"\n        scorecardDetails: CompassScorecard @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n    }\n\n    \"The payload returned from updating a scorecard criterion.\"\n    type UpdateCompassScorecardPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The scorecard that was mutated.\"\n        scorecardDetails: CompassScorecard @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n    }\n\n    \"The payload returned from deleting a scorecard criterion.\"\n    type DeleteCompassScorecardPayload implements Payload {\n        \"Whether the mutation was successful or not\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The scorecard that was mutated.\"\n        scorecardId: ID! @ARI(type: \"scorecard\", owner: \"compass\")\n    }\n\n    \"The payload returned from applying a scorecard to a component.\"\n    type ApplyCompassScorecardToComponentPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"The payload returned from removing a scorecard from a component.\"\n    type RemoveCompassScorecardFromComponentPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The details of the component that was mutated.\"\n        componentDetails: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    \"The payload returned from creating a scorecard criterion.\"\n    type CreateCompassScorecardCriteriasPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The scorecard that was mutated.\"\n        scorecard: CompassScorecard @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n    }\n\n    \"The payload returned from updating a scorecard criterion.\"\n    type UpdateCompassScorecardCriteriasPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The scorecard that was mutated.\"\n        scorecard: CompassScorecard @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n    }\n\n    \"The payload returned from deleting a scorecard criterion.\"\n    type DeleteCompassScorecardCriteriasPayload implements Payload {\n        \"Whether the mutation was successful or not\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The scorecard that was mutated.\"\n        scorecard: CompassScorecard @scopes(required: [READ_COMPASS_SCORECARD], product: COMPASS)\n    }\n\n    # COMPASS SEARCH\n    \"Field Filters.\"\n    input CompassQueryFieldFilter {\n        name: String!\n        filter: CompassQueryFilter\n    }\n\n    input CompassQueryFilter {\n        eq: String\n        neq: String\n        in: [String]\n        gt: String\n        lt: String\n    }\n\n    enum CompassQuerySortOrder {\n        ASC\n        DESC\n    }\n\n    input CompassQuerySort {\n        name: String # name of field to sort results by\n        order: CompassQuerySortOrder\n    }\n\n    \"The query to find components.\"\n    input CompassSearchComponentQuery {\n\n        \"Text query to search against.\"\n        query: String\n\n        \"Number of results to return in the query. The default is 25.\"\n        first: Int\n\n        \"Returns results after the specified cursor.\"\n        after: String\n\n        \"Filters on component fields to be searched against.\"\n        fieldFilters: [CompassQueryFieldFilter]\n\n        \"Sorting parameters for the results to be searched for. The default is by ranked results.\"\n        sort: [CompassQuerySort]\n    }\n\n    type CompassSearchComponentConnection {\n        edges: [CompassSearchComponentEdge!]\n        nodes: [CompassSearchComponentResult!]\n        pageInfo: PageInfo!\n    }\n\n    type CompassSearchComponentEdge {\n        cursor: String!\n        node: CompassSearchComponentResult\n    }\n\n    type CompassSearchComponentResult {\n\n        \"The Compass component.\"\n        component: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n\n        \"Link to the component. Search UI can use this link to direct the user to the component page on click.\"\n        link: URL!\n    }\n\n    \"The query to find component labels within Compass.\"\n    input CompassSearchComponentLabelsQuery {\n\n        \"Text query to search against.\"\n        query: String\n\n        \"Number of results to return in the query. The default is 25.\"\n        first: Int\n\n        \"Returns results after the specified cursor.\"\n        after: String\n\n        \"Sorting parameters for the results to be searched for. The default is by ranked results.\"\n        sort: [CompassQuerySort]\n    }\n\n    type CompassSearchComponentLabelsConnection {\n        edges: [CompassSearchComponentLabelsEdge!]\n        nodes: [CompassComponentLabel!]\n        pageInfo: PageInfo!\n    }\n\n    type CompassSearchComponentLabelsEdge {\n        cursor: String!\n        node: CompassComponentLabel\n    }\n\n    # Compass Events\n    type EventSource {\n        \"The ID of the event source.\"\n        id: ID!\n\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"\"\"\n        The Forge App Id used to construct event sources.\n        This is automatically inferred from the HTTP Header of the requesting Forge App.\n        \"\"\"\n        forgeAppId: ID\n    }\n\n    input CompassEventsQuery {\n        \"The list of event types.\"\n        eventTypes: [CompassEventType!]\n\n        \"The first N number of events to return in the query.\"\n        first: Int\n\n        \"Returns the events after the specified cursor position.\"\n        after: String\n\n        \"Returns the events after that match the CompassEventTimeParameters.\"\n        timeParameters: CompassEventTimeParameters\n    }\n\n    type CompassEventConnection {\n        edges: [CompassEventEdge]\n        nodes: [CompassEvent!]\n        pageInfo: PageInfo!\n    }\n\n    type CompassEventEdge {\n        cursor: String!\n        node: CompassEvent\n    }\n\n    type CompassCreateEventsPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    enum CompassEventType {\n        DEPLOYMENT\n        INCIDENT\n        FLAG\n        ALERT\n        LIFECYCLE\n        CUSTOM\n    }\n\n    interface CompassEvent {\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"The sequence number specifying the order of updates of the event.\"\n        updateSequenceNumber: Long!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n    }\n\n    input CompassEventInput @oneOf {\n        deployment: CompassCreateDeploymentEventInput\n        incident: CompassCreateIncidentEventInput\n        flag: CompassCreateFlagEventInput\n        alert: CompassCreateAlertEventInput\n        lifecycle: CompassCreateLifecycleEventInput\n        custom: CompassCreateCustomEventInput\n    }\n\n    input CreateEventSourceInput {\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n\n        \"The type of the event to be created.\"\n        eventType: CompassEventType!\n    }\n\n    type CreateEventSourcePayload implements Payload {\n        \"The source of event data.\"\n        eventSource: EventSource\n\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    input DeleteEventSourceInput {\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n\n        \"The type of event to be deleted.\"\n        eventType: CompassEventType!\n    }\n\n    type DeleteEventSourcePayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    input CompassEventTimeParameters {\n        \"The time to begin querying for event data.\"\n        startFrom: DateTime\n\n        \"The time to end querying for event data.\"\n        endAt: DateTime\n    }\n\n    input AttachEventSourceInput {\n        \"The ID of the event source.\"\n        eventSourceId: ID!\n\n        \"The ID of the component to attach the event source to.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    type AttachEventSourcePayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    input DetachEventSourceInput {\n        \"The ID of the event source.\"\n        eventSourceId: ID!\n\n        \"The ID of the component to detach the event source from.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    type DetachEventSourcePayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    # Compass Deployment Event\n    enum CompassDeploymentEventState {\n        PENDING\n        IN_PROGRESS\n        SUCCESSFUL\n        CANCELLED\n        FAILED\n        ROLLED_BACK\n        UNKNOWN\n    }\n\n    type CompassDeploymentEvent implements CompassEvent {\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"The name of the deployment event.\"\n        displayName: String!\n\n        \"The sequence number for the deployment.\"\n        deploymentSequenceNumber: Long\n\n        \"The sequence number specifying the order of updates of the deployment event.\"\n        updateSequenceNumber: Long!\n\n        \"The URL of the deployment event.\"\n        url: URL\n\n        \"The description of the deployment event.\"\n        description: String\n\n        \"The state of the deployment.\"\n        state: CompassDeploymentEventState\n\n        \"The deployment event pipeline.\"\n        pipeline: CompassDeploymentEventPipeline\n\n        \"The environment where the deployment event has occurred.\"\n        environment: CompassDeploymentEventEnvironment\n    }\n\n    input CreateDeploymentEventInput {\n        \"The cloud ID of the site to create a deployment event for.\"\n        cloudId: ID! @CloudID\n\n        \"The sequence number for the deployment.\"\n        deploymentSequenceNumber: Long!\n\n        \"The sequence number specifying the order of updates of the deployment event.\"\n        updateSequenceNumber: Long!\n\n        \"The name of the deployment event.\"\n        displayName: String!\n\n        \"The URL of the deployment event.\"\n        url: URL!\n\n        \"The description of the deployment event.\"\n        description: String!\n\n        \"The state of the deployment.\"\n        state: CompassDeploymentEventState!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"The deployment event pipeline.\"\n        pipeline: CompassDeploymentEventPipelineInput!\n\n        \"The environment where the deployment event has occurred.\"\n        environment: CompassDeploymentEventEnvironmentInput!\n\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n    }\n\n    type CreateDeploymentEventsPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n    }\n\n    input CompassCreateDeploymentEventInput {\n        \"The cloud ID of the site to create a deployment event for.\"\n        cloudId: ID!\n\n        \"The sequence number for the deployment.\"\n        deploymentSequenceNumber: Long!\n\n        \"The sequence number specifying the order of updates of the deployment event.\"\n        updateSequenceNumber: Long!\n\n        \"The name of the deployment event.\"\n        displayName: String!\n\n        \"The URL of the deployment event.\"\n        url: URL!\n\n        \"The description of the deployment event.\"\n        description: String!\n\n        \"The state of the deployment.\"\n        state: CompassDeploymentEventState!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"The deployment event pipeline.\"\n        pipeline: CompassDeploymentEventPipelineInput!\n\n        \"The environment where the deployment event has occurred.\"\n        environment: CompassDeploymentEventEnvironmentInput!\n\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n    }\n\n    type CompassDeploymentEventPipeline {\n        \"The ID of the deployment event pipeline.\"\n        pipelineId: String\n\n        \"The URL linking to the deployment event pipeline.\"\n        url: String\n\n        \"The name of the deployment event pipeline.\"\n        displayName: String\n    }\n\n    input CompassDeploymentEventPipelineInput {\n        \"The ID of the deployment event pipeline.\"\n        pipelineId: String!\n\n        \"The URL linking to the deployment event pipeline.\"\n        url: String!\n\n        \"The name of the deployment event pipeline.\"\n        displayName: String!\n    }\n\n    enum CompassDeploymentEventEnvironmentCategory {\n        PRODUCTION\n        STAGING\n        TESTING\n        DEVELOPMENT\n        UNMAPPED\n    }\n\n    type CompassDeploymentEventEnvironment {\n        \"The type of environment, where the component deployment event has occurred.\"\n        category: CompassDeploymentEventEnvironmentCategory\n\n        \"The display name of the environment, where the component deployment event has occurred.\"\n        displayName: String\n\n        \"The ID of the environment, where the deployment event has occurred.\"\n        environmentId: String\n    }\n\n    input CompassDeploymentEventEnvironmentInput {\n        \"The type of environment, where the component deployment event has occurred.\"\n        category: CompassDeploymentEventEnvironmentCategory!\n\n        \"The display name of the environment, where the component deployment event has occurred.\"\n        displayName: String!\n\n        \"The ID of the environment, where the deployment event has occurred.\"\n        environmentId: String!\n    }\n\n    # COMPASS STARRED COMPONENT\n\n    \"Accepts input for creating a starred component.\"\n    input CreateCompassStarredComponentInput {\n\n        \"The ID of the component to be starred.\"\n        id: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    \"The payload returned from creating a starred component.\"\n    type CreateCompassStarredComponentPayload implements Payload {\n\n        \"A list of starred components.\"\n        components: CompassStarredComponentConnection\n\n        \"Whether the relationship is created successfully.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during mutation.\"\n        errors: [MutationError!]\n    }\n\n    \"Accepts input for deleting a starred component.\"\n    input DeleteCompassStarredComponentInput {\n\n        \"The ID of the component to be un-starred.\"\n        id: ID! @ARI(type: \"component\", owner: \"compass\")\n    }\n\n    \"Payload returned from deleting a starred component.\"\n    type DeleteCompassStarredComponentPayload implements Payload {\n\n        \"A list of starred components.\"\n        components: CompassStarredComponentConnection\n\n        \"Whether the relationship is deleted successfully\"\n        success: Boolean!\n\n        \"A list of errors that occurred during mutation\"\n        errors: [MutationError!]\n    }\n\n    \"The query fields for finding starred components.\"\n    input CompassStarredComponentQuery {\n\n        \"First N number of starred components to return in the query. The default is 25.\"\n        first: Int\n\n        \"Returns starred components after the specified cursor.\"\n        after: String\n    }\n\n    type CompassStarredComponentConnection {\n        nodes: [CompassComponent!]\n        edges: [CompassStarredComponentEdge!]\n        pageInfo: PageInfo!\n    }\n\n\n    type CompassStarredComponentEdge {\n        cursor: String!\n        node: CompassComponent @scopes(required: [READ_COMPASS_COMPONENT], product: COMPASS)\n    }\n\n    ####################################################################################################################\n    # COMPASS TEAM CHECKINS\n    ####################################################################################################################\n    \"A team checkin communicates checkin for a team.\"\n    type CompassTeamCheckin {\n        \"The unique identifier (ID) of the team that did the checkin.\"\n        teamId: ID\n\n        \"The ID of the team checkin.\"\n        id: ID!\n\n        \"The mood of the team checkin.\"\n        mood: Int\n\n        \"The response to the question 1 of the team checkin.\"\n        response1: String\n\n        \"The response to the question 2 of the team checkin.\"\n        response2: String\n\n        \"The response to the question 3 of the team checkin.\"\n        response3: String\n\n        \"Contains change metadata for the team checkin.\"\n        changeMetadata: CompassChangeMetadata!\n\n        \"A list of actions that are part of the team checkin.\"\n        actions: [CompassTeamCheckinAction!]\n    }\n\n    \"An action item of a team checkin.\"\n    type CompassTeamCheckinAction {\n        \"The unique identifier (ID) of the team checkin action item.\"\n        id: ID!\n\n        \"The text of the team checkin action item.\"\n        actionText: String\n\n        \"Whether the action item is completed or not.\"\n        completed: Boolean\n\n        \"The user who completed this action item.\"\n        completedBy: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.completedBy.id\"}], identifiedBy : \"accountId\", batchSize : 90 )\n\n        \"The date and time when the action item got completed.\"\n        completedAt: DateTime\n\n        \"Contains change metadata for the team checkin action item.\"\n        changeMetadata: CompassChangeMetadata!\n    }\n\n    \"Accepts input for deleting a team checkin.\"\n    input CompassTeamCheckinsInput {\n        \"The cloud ID of the site to update a checkin on.\"\n        cloudId: ID! @CloudID\n\n        \"The unique identifier (ID) of the team that did the checkin.\"\n        teamId: ID!\n    }\n\n    \"Accepts input for creating a checkin.\"\n    input CompassCreateTeamCheckinInput {\n        \"The cloud ID of the site to update a checkin on.\"\n        cloudId: ID! @CloudID\n\n        \"The unique identifier (ID) of the team that did the checkin.\"\n        teamId: ID!\n\n        \"The mood of the checkin.\"\n        mood: Int!\n\n        \"The response to the question 1 of the team checkin.\"\n        response1: String\n\n        \"The response to the question 2 of the team checkin.\"\n        response2: String\n\n        \"The response to the question 3 of the team checkin.\"\n        response3: String\n\n        \"A list of action items to be created with the checkin.\"\n        actions: [CompassCreateTeamCheckinActionInput!]\n    }\n\n    \"The payload returned after creating a component announcement.\"\n    type CompassCreateTeamCheckinPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"Details of the created team checkin.\"\n        createdTeamCheckin: CompassTeamCheckin\n    }\n\n    \"Accepts input for updating a team checkin.\"\n    input CompassUpdateTeamCheckinInput {\n        \"The cloud ID of the site to update a checkin on.\"\n        cloudId: ID! @CloudID\n\n        \"The ID of the team checkin being updated.\"\n        id: ID!\n\n        \"The mood of the team checkin.\"\n        mood: Int!\n\n        \"The response to the question 1 of the team checkin.\"\n        response1: String\n\n        \"The response to the question 2 of the team checkin.\"\n        response2: String\n\n        \"The response to the question 3 of the team checkin.\"\n        response3: String\n\n        \"A list of action items belong to the checkin.\"\n        actions: [CompassTeamCheckinActionInput!]\n    }\n\n    \"The payload returned after updating a team checkin.\"\n    type CompassUpdateTeamCheckinPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"Details of the updated checkin.\"\n        updatedTeamCheckin: CompassTeamCheckin\n    }\n\n    \"Accepts input for deleting a team checkin.\"\n    input CompassDeleteTeamCheckinInput {\n        \"The cloud ID of the site to update a checkin on.\"\n        cloudId: ID! @CloudID\n\n        \"The ID of the team checkin to delete.\"\n        id: ID!\n    }\n\n    \"The payload returned after deleting a team checkin.\"\n    type CompassDeleteTeamCheckinPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"ID of the checkin that was deleted.\"\n        deletedTeamCheckinId: ID\n    }\n\n    \"Accepts input for creating/updating/deleting team checkin's action item.\"\n    input CompassTeamCheckinActionInput @oneOf {\n        create: CompassCreateTeamCheckinActionInput\n        update: CompassUpdateTeamCheckinActionInput\n        delete: CompassDeleteTeamCheckinActionInput\n    }\n\n    \"Accepts input for creating team checkin's action item.\"\n    input CompassCreateTeamCheckinActionInput {\n        \"The text of the team checkin action item.\"\n        actionText: String!\n\n        \"Whether the action is completed or not.\"\n        completed: Boolean\n    }\n\n    \"Accepts input for updating a team checkin action.\"\n    input CompassUpdateTeamCheckinActionInput {\n        \"The ID of the team checkin action item.\"\n        id: ID!\n\n        \"The text of the team checkin action item.\"\n        actionText: String\n\n        \"Whether the action is completed or not.\"\n        completed: Boolean\n    }\n\n    \"Accepts input for deleting a team checkin.\"\n    input CompassDeleteTeamCheckinActionInput {\n        \"The ID of the team checkin item to delete.\"\n        id: ID!\n    }\n\n    ####################################################################################################################\n    # COMPASS METRICS\n    ####################################################################################################################\n\n    \"A metric definition defines a metric across multiple components.\"\n    type CompassMetricDefinition {\n        \"The unique identifier (ID) of the metric definition.\"\n        id: ID!\n\n        \"The name of the metric definition.\"\n        name: String\n\n        \"The description of the metric definition.\"\n        description: String\n\n        \"The format option for applying to the display of metric values.\"\n        format: CompassMetricDefinitionFormat\n        \n        \"The type of the metric definition based on where the definition originated\"\n        type: CompassMetricDefinitionType!\n\n        \"A collection of metrics which contain values that provide numerical data.\"\n        metricSources(query: CompassMetricSourcesQuery): CompassMetricSourcesQueryResult\n    }\n\n    input CompassMetricSourcesQuery {\n        first: Int\n        after: String\n    }\n\n    type CompassMetricSourcesConnection {\n        edges: [CompassMetricSourceEdge!]\n        nodes: [CompassMetricSource!]\n        pageInfo: PageInfo!\n    }\n\n    union CompassMetricSourcesQueryResult = CompassMetricSourcesConnection | QueryError\n\n    \"The query to get the metric definitions on a Compass site.\"\n    input CompassMetricDefinitionsQuery {\n        \"The cloud ID of the site to query for metric definitions on.\"\n        cloudId: ID! @CloudID\n\n        \"The number of results to return in the query. The default is 10.\"\n        first: Int\n\n        \"Returns results after the specified cursor.\"\n        after: String\n    }\n\n    \"A connection that returns a paginated collection of metric definitions.\"\n    type CompassMetricDefinitionsConnection {\n        \"A list of edges which contain a metric definition and a cursor.\"\n        edges: [CompassMetricDefinitionEdge!]\n\n        \"A list of metric definitions.\"\n        nodes: [CompassMetricDefinition!]\n\n        \"Pagination information such as the start and end cursor of this page, and whether there is a next and previous page.\"\n        pageInfo: PageInfo!\n    }\n\n    \"An edge that contains a metric definition and a cursor.\"\n    type CompassMetricDefinitionEdge {\n        \"The cursor of the metric definition.\"\n        cursor: String!\n\n        \"The metric definition.\"\n        node: CompassMetricDefinition\n    }\n\n    union CompassMetricDefinitionsQueryResult = CompassMetricDefinitionsConnection | QueryError\n\n    \"The input for creating a metric definition.\"\n    input CompassCreateMetricDefinitionInput {\n        \"The cloud ID of the Compass site to create a metric definition on.\"\n        cloudId: ID! @CloudID\n\n        \"The name of the metric definition.\"\n        name: String!\n\n        \"The description of the metric definition.\"\n        description: String\n\n        \"The format option for applying to the display of metric values.\"\n        format: CompassMetricDefinitionFormatInput\n    }\n\n    \"The payload returned from creating a metric definition.\"\n    type CompassCreateMetricDefinitionPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The created metric definition.\"\n        createdMetricDefinition: CompassMetricDefinition\n    }\n\n    \"The input to update a metric definition.\"\n    input CompassUpdateMetricDefinitionInput {\n        \"The ID of the metric definition being updated.\"\n        id: ID! @ARI(type: \"metric-definition\", owner: \"compass\")\n\n        \"The updated name of the metric definition.\"\n        name: String\n\n        \"The updated description of the metric definition.\"\n        description: String\n\n        \"The updated format option of the metric definition.\"\n        format: CompassMetricDefinitionFormatInput\n    }\n\n    \"The payload returned from updating a metric definition.\"\n    type CompassUpdateMetricDefinitionPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The updated metric definition.\"\n        updatedMetricDefinition: CompassMetricDefinition\n    }\n\n    \"The input to delete a metric definition.\"\n    input CompassDeleteMetricDefinitionInput {\n        \"The ID of the metric definition to be deleted.\"\n        id: ID! @ARI(type: \"metric-definition\", owner: \"compass\")\n    }\n\n    \"The payload returned from updating a metric definition.\"\n    type CompassDeleteMetricDefinitionPayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The ID of the deleted metric definition.\"\n        deletedMetricDefinitionId: ID\n    }\n\n    union CompassMetricDefinitionFormat = CompassMetricDefinitionFormatSuffix\n\n    \"The format option to append a plain-text suffix to metric values.\"\n    type CompassMetricDefinitionFormatSuffix {\n        \"A plain-text suffix appended to the metric value when displayed, for example, 'MB/s'.\"\n        suffix: String\n    }\n\n    input CompassMetricDefinitionFormatInput @oneOf {\n        \"A plain-text suffix appended to the metric value when displayed, for example, 'MB/s'.\"\n        suffix: CompassMetricDefinitionFormatSuffixInput\n    }\n\n    \"The format option to append a plain-text suffix to metric values.\"\n    input CompassMetricDefinitionFormatSuffixInput {\n        \"A plain-text suffix appended to the metric value when displayed, for example, 'MB/s'.\"\n        suffix: String!\n    }\n\n    \"Used to identify the type for the metric\"\n    enum CompassMetricDefinitionType {\n        \"Predefined metrics built in to Compass\"\n        BUILT_IN\n\n        \"Metrics defined by the individual user\"\n        CUSTOM\n    }\n\n    # Metric sources\n    \"A metric source contains values that provide numerical data about the component.\"\n    type CompassMetricSource {\n        \"The unique identifier (ID) of the metric source on the Compass site.\"\n        id: ID!\n\n        \"The metric definition that defines the metric source.\"\n        metricDefinition: CompassMetricDefinition\n\n        \"The unique identifier (ID) of the metric source that is external to the Compass site, for example, a Bitbucket repository ID.\"\n        externalMetricSourceId: ID\n\n        \"The URL of the metric source.\"\n        url: String\n\n        \"A collection of values which store historical data points about the component.\"\n        values(query: CompassMetricSourceValuesQuery): CompassMetricSourceValuesQueryResult\n\n        \"Compass component associated with this metric source.\"\n        component: CompassComponent\n    }\n\n    \"The input to create a metric source.\"\n    input CompassCreateMetricSourceInput {\n        \"The ID of the component to create a metric source on.\"\n        componentId: ID! @ARI(type: \"component\", owner: \"compass\")\n\n        \"The ID of the metric definition which defines the metric source.\"\n        metricDefinitionId: ID! @ARI(type: \"metric-definition\", owner: \"compass\")\n\n        \"The unique identifier (ID) of the metric source that is external to the Compass site, for example, a Bitbucket repository ID.\"\n        externalMetricSourceId: ID!\n\n        \"The URL of the metric source.\"\n        url: String\n    }\n\n    \"The payload returned from creating a metric source.\"\n    type CompassCreateMetricSourcePayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The metric source that is created.\"\n        createdMetricSource: CompassMetricSource\n    }\n\n    \"The input to delete a metric source.\"\n    input CompassDeleteMetricSourceInput {\n        \"The ID of the metric source to be deleted.\"\n        id: ID! @ARI(type: \"metric-source\", owner: \"compass\")\n    }\n\n    \"The payload returned from deleting a metric source.\"\n    type CompassDeleteMetricSourcePayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The ID of the metric source that is deleted.\"\n        deletedMetricSourceId: ID\n    }\n\n    union CompassComponentMetricSourcesQueryResult = CompassComponentMetricSourcesConnection | QueryError\n\n    \"A connection that returns a paginated collection of metric sources.\"\n    type CompassComponentMetricSourcesConnection {\n        \"A list of edges which contain a metric source and a cursor.\"\n        edges: [CompassMetricSourceEdge!]\n\n        \"A list of metric sources.\"\n        nodes: [CompassMetricSource!]\n\n        \"Pagination information such as the start and end cursor of this page, and whether there is a next and previous page.\"\n        pageInfo: PageInfo!\n    }\n\n    \"An edge that contains a metric source and a cursor.\"\n    type CompassMetricSourceEdge {\n        \"The cursor of the metric source.\"\n        cursor: String!\n\n        \"The metric source.\"\n        node: CompassMetricSource\n    }\n\n    \"The query to get the metric sources of a component.\"\n    input CompassComponentMetricSourcesQuery {\n        \"The number of results to return in the query. The default is 10.\"\n        first: Int\n\n        \"Returns results after the specified cursor.\"\n        after: String\n    }\n\n    # Metric Values\n    \"A metric value stores the numerical data relating to the component.\"\n    type CompassMetricValue {\n        \"The timestamp representing when the metric value was collected.\"\n        timestamp: DateTime\n\n        \"The value of the metric.\"\n        value: Float\n    }\n\n    \"The input to insert a metric value.\"\n    input CompassInsertMetricValueInput {\n        \"The unique identifier (ID) of the metric source to insert the value into.\"\n        metricSourceId: ID! @ARI(type: \"metric-source\", owner: \"compass\")\n\n        \"The metric value to be inserted.\"\n        value: CompassMetricValueInput!\n    }\n\n    \"A metric value to be inserted.\"\n    input CompassMetricValueInput {\n        \"The timestamp representing when the metric value was collected.\"\n        timestamp: DateTime!\n\n        \"The value of the metric.\"\n        value: Float!\n    }\n\n    \"The payload returned from inserting a metric value.\"\n    type CompassInsertMetricValuePayload implements Payload {\n        \"Whether the mutation was successful or not.\"\n        success: Boolean!\n\n        \"A list of errors that occurred during the mutation.\"\n        errors: [MutationError!]\n\n        \"The metric source that the value was inserted into.\"\n        metricSource: CompassMetricSource\n    }\n\n    \"A connection that returns a paginated collection of metric values.\"\n    type CompassMetricSourceValuesConnection {\n        \"A list of edges which contain a metric values and a cursor.\"\n        edges: [CompassMetricValueEdge!]\n\n        \"A list of metric values.\"\n        nodes: [CompassMetricValue!]\n\n        \"Pagination information such as the start and end cursor of this page, and whether there is a next and previous page.\"\n        pageInfo: PageInfo!\n    }\n\n    \"An edge that contains a metric value and a cursor.\"\n    type CompassMetricValueEdge {\n        \"The cursor of the metric value.\"\n        cursor: String!\n\n        \"The metric value.\"\n        node: CompassMetricValue\n    }\n\n    union CompassMetricSourceValuesQueryResult = CompassMetricSourceValuesConnection | QueryError\n\n    \"The query to get the metric values from a component's metric source.\"\n    input CompassMetricSourceValuesQuery {\n        \"The number of results to return in the query. The default is 10.\"\n        first: Int\n\n        \"Returns the values after the specified cursor position.\"\n        after: String\n    }\n\n    ####################################################################################################################\n    # COMPASS ALERT EVENT\n    ####################################################################################################################\n\n    type CompassAlertEvent implements CompassEvent {\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"The sequence number specifying the order of updates of the event.\"\n        updateSequenceNumber: Long!\n\n        \"Alert Id\"\n        alertId: ID!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n    }\n\n    input CompassCreateAlertEventInput {\n        \"The cloud ID of the site to create an alert event for.\"\n        cloudId: ID!\n\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"Alert Id\"\n        alertId: ID!\n\n        \"The sequence number specifying the order of updates of the alert event.\"\n        updateSequenceNumber: Long!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n    }\n\n    ####################################################################################################################\n    # COMPASS CUSTOM EVENT\n    ####################################################################################################################\n\n    type CompassCustomEvent implements CompassEvent {\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"The sequence number specifying the order of updates of the event.\"\n        updateSequenceNumber: Long!\n\n        \"Custom Event Id\"\n        customEventId: ID!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n\n        \"Icon for the Custom Event\"\n        icon: CompassCustomEventIcon\n    }\n\n    input CompassCreateCustomEventInput {\n        \"The cloud ID of the site to create a custom event for.\"\n        cloudId: ID!\n\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"CustomEvent Id\"\n        customEventId: ID!\n\n        \"The sequence number specifying the order of updates of the custom event.\"\n        updateSequenceNumber: Long!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n\n        \"Icon for the Custom Event\"\n        icon: CompassCustomEventIcon\n\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n    }\n\n    enum CompassCustomEventIcon {\n        INFO\n        WARNING\n        CHECKPOINT\n    }\n\n    ####################################################################################################################\n    # COMPASS FLAG EVENT\n    ####################################################################################################################\n\n    type CompassFlagEvent implements CompassEvent {\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"The sequence number specifying the order of updates of the event.\"\n        updateSequenceNumber: Long!\n\n        \"Flag Id\"\n        flagId: ID!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n\n        \"Status of the flag\"\n        status: String\n    }\n\n    input CompassCreateFlagEventInput {\n        \"The cloud ID of the site to create a flag event for.\"\n        cloudId: ID!\n\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"Flag Id\"\n        flagId: ID!\n\n        \"The sequence number specifying the order of updates of the flag event.\"\n        updateSequenceNumber: Long!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n\n        \"Status of the experiement\"\n        status: String\n\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n    }\n\n    ####################################################################################################################\n    # COMPASS INCIDENT EVENT\n    ####################################################################################################################\n\n    type CompassIncidentEvent implements CompassEvent {\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"The sequence number specifying the order of updates of the event.\"\n        updateSequenceNumber: Long!\n\n        \"Incident Id\"\n        incidentId: ID!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n\n        \"State of the Incident\"\n        state: CompassIncidentEventState\n    }\n\n    input CompassCreateIncidentEventInput {\n        \"The cloud ID of the site to create an incident event for.\"\n        cloudId: ID!\n\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"Incident Id\"\n        incidentId: ID!\n\n        \"The sequence number specifying the order of updates of the incident event.\"\n        updateSequenceNumber: Long!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n\n        \"State of the Incident\"\n        state: CompassIncidentEventState\n\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n    }\n\n    enum CompassIncidentEventState {\n        OPEN\n        RESOLVED\n        CLOSED\n        DELETED\n    }\n\n    ####################################################################################################################\n    # COMPASS LIFECYCLE EVENT\n    ####################################################################################################################\n\n    type CompassLifecycleEvent implements CompassEvent {\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"The sequence number specifying the order of updates of the event.\"\n        updateSequenceNumber: Long!\n\n        \"Lifecycle Id\"\n        lifecycleId: ID!\n\n        \"Stage of the lifecycle event\"\n        stage: CompassLifecycleEventStage\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n    }\n\n    input CompassCreateLifecycleEventInput {\n        \"The cloud ID of the site to create a lifecycle event for.\"\n        cloudId: ID!\n\n        \"The type of the event.\"\n        eventType: CompassEventType!\n\n        \"The name of the event.\"\n        displayName: String!\n\n        \"The last time this event was updated.\"\n        lastUpdated: DateTime!\n\n        \"Lifecycle Id\"\n        lifecycle: ID!\n\n        \"The sequence number specifying the order of updates of the lifecycle event.\"\n        updateSequenceNumber: Long!\n\n        \"The description of the event.\"\n        description: String\n\n        \"The URL of the event.\"\n        url: URL\n\n        \"Stage of the lifecycle event\"\n        stage: CompassLifecycleEventStage\n\n        \"The ID of the external event source.\"\n        externalEventSourceId: ID!\n    }\n\n    enum CompassLifecycleEventStage {\n        PRE_RELEASE\n        PRODUCTION\n        DEPRECATION\n        END_OF_LIFE\n    }","cs_extensions":"\"An arbitrary extension definition as defined by the Ecosystem\"\ntype Extension {\n    id: ID!\n    definitionId: ID!\n    environmentId: ID!\n    environmentKey: String!\n    environmentType: String!\n    installationId: String!\n    type: String!\n    key: String!\n    appOwner: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.appOwner\"}], identifiedBy : \"accountId\", batchSize : 90 )\n    appVersion: String\n    properties: JSON!\n    license: AppInstallationLicense\n    egress: [AppNetworkEgressPermissionExtension!]\n    securityPolicies: [AppSecurityPoliciesPermissionExtension!]\n    consentUrl: String\n    currentUserConsent: UserConsentExtension\n    requiresUserConsent: Boolean\n}\n\ntype UserConsentExtension {\n    user: UserConsentExtensionUser!\n    appEnvironmentVersion: UserConsentExtensionAppEnvironmentVersion!\n    consentedAt: DateTime!\n}\n\ntype UserConsentExtensionUser {\n    aaid: ID!\n}\n\ntype UserConsentExtensionAppEnvironmentVersion {\n    id: ID!\n}\n\n\"The context in which an extension exists\"\ntype ExtensionContext {\n    id: ID!\n    extensionsByType(type: String!): [Extension!]!\n        appAuditLogs(first: Int, after: String ) : AppAuditConnection!\n}\n\ntype AppInstallationLicense {\n    active: Boolean!\n    type: String\n    supportEntitlementNumber: String\n    trialEndDate: DateTime\n    subscriptionEndDate: DateTime\n    isEvaluation: Boolean\n      billingPeriod: String\n    }\n\n    type AppAuditConnection {\n      edges: [AuditEventEdge]\n      \"\"\"\n      nodes field allows easy access for the first N data items\n      \"\"\"\n      nodes: [AuditEvent]\n      \"\"\"\n      pageInfo determines whether there are more entries to query.\n      \"\"\"\n      pageInfo: AuditsPageInfo\n    }\n\n    type AuditsPageInfo {\n      hasNextPage: Boolean!\n      hasPreviousPage: Boolean!\n    }\n\n    type AuditEventEdge {\n      cursor: String!\n      node: AuditEvent\n    }\n\n    type AuditEvent {\n      \"\"\"\n      Audit Event Id\n      \"\"\"\n      id: ID!\n\n      \"\"\"\n      The attributes of an audit event\n      \"\"\"\n      attributes: AuditEventAttributes!\n\n      \"\"\"\n      Message with content and format to be displayed\n      \"\"\"\n      message: AuditMessageObject\n    }\n\n    type AuditEventAttributes {\n      \"\"\"\n      The Actor who created the event\n      \"\"\"\n      actor: User => hydrated from identity.users(accountIds: $source.actorId) object identified by accountId, batch size 90\n\n      \"\"\"\n      The action for audit log event\n      \"\"\"\n      action: String!\n\n      \"\"\"\n      The time when the event occurred\n      \"\"\"\n      time: String!\n\n      \"\"\"\n      The Context EventObjects for this event\n      \"\"\"\n      context: [ContextEventObject]!\n\n      \"\"\"\n      The Container EventObjects for this event\n      \"\"\"\n      container: [ContainerEventObject]!\n\n    }\n\n    type AuditMessageObject {\n      content: String\n      format: String\n    }\n\n    type ContextEventObject {\n      id: ID!\n      type: String!\n      attributes: JSON!\n    }\n\n    type ContainerEventObject {\n      id: ID!\n      type: String!\n      attributes: JSON!\n}\n\ntype Query {\n    extensionsEcho(text: String!): String @apiGroup(name: CAAS) @renamed(from : \"echo\")\n    extensionContexts(contextIds: [ID!]!): [ExtensionContext!] @apiGroup(name: CAAS)\n    extensionByKey(contextId: ID!, definitionId: ID!, extensionKey: String!): Extension @apiGroup(name: CAAS)\n}\n\nextend type AppInstallation {\n    license: AppInstallationLicense @hydrated(service: \"cs_extensions\", field: \"licenses\", arguments : [{ name:\"appInstallationLicenseDetails\", value:\"$source.appInstallationLicenseDetails\"}], indexed:true, batchSize : 100 )\n}\n\ntype AppNetworkEgressPermissionExtension {\n    type: AppNetworkPermissionTypeExtension\n    addresses: [String!]\n}\n\ntype AppSecurityPoliciesPermissionExtension {\n    type: AppSecurityPoliciesPermissionTypeExtension\n    policies: [String!]\n}\n\nenum AppNetworkPermissionTypeExtension {\n    NAVIGATION\n    IMAGES\n    MEDIA\n    SCRIPTS\n    STYLES\n    FETCH_BACKEND_SIDE\n    FETCH_CLIENT_SIDE\n    FONTS\n    FRAMES\n}\n\nenum AppSecurityPoliciesPermissionTypeExtension {\n    SCRIPTS\n    STYLES\n}\n","cs_apps":"type Query {\n    apps(first: Int, after: String, last: Int, before: String, filter: AppsFilter): AppConnection @apiGroup(name: CAAS)\n    app(id: ID!): App @apiGroup(name: CAAS)\n    \"Returns information about all the scopes from different Atlassian products\"\n    appHostServices(filter: AppServicesFilter): [AppHostService!] @apiGroup(name: CAAS)\n}\n\ntype Mutation {\n  \"Creates an application in Xen\"\n  createApp(input: CreateAppInput!): CreateAppResponse\n\n  updateAppDetails(input: UpdateAppDetailsInput!): UpdateAppDetailsResponse\n\n  \"Deletes an application from Xen\"\n  deleteApp(input: DeleteAppInput!): DeleteAppResponse\n\n  \"Update Atlassian OAuth Client details\"\n  updateAtlassianOAuthClient(input: UpdateAtlassianOAuthClientInput!) : UpdateAtlassianOAuthClientResponse\n\n  ecosystem: EcosystemMutation  @namespaced\n}\n\ntype EcosystemMutation {\n  \"\"\"Update an app environment and enrol to new scopes\"\"\"\n  updateAppHostServiceScopes(input: UpdateAppHostServiceScopesInput!) : UpdateAppHostServiceScopesResponsePayload\n}\n\ninput DeleteAppInput {\n    appId: ID!\n}\n\n\"Response from deleting an app\"\ntype DeleteAppResponse implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype AppConnection {\n    edges: [AppEdge]\n    nodes: [App]\n    pageInfo: PageInfo!\n    totalCount: Int\n}\n\ntype AppEdge {\n    cursor: String!\n    node: App\n}\ninput AppsFilter {\n    isPublishable: Boolean\n    migrationKey: String\n}\n\ninput AppServicesFilter {\n    name: String!\n}\n\ntype App {\n    id: ID!\n    name: String!\n    description: String!\n    distributionStatus: String!\n    avatarFileId: String\n    createdBy: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.createdByAccountId\"}], identifiedBy : \"accountId\", batchSize : 90 )\n    storesPersonalData: Boolean!\n    privacyPolicy: String\n    termsOfService: String\n    contactLink: String\n    vendorName: String\n    environments: [AppEnvironment!]!\n    environmentByKey(key: String!): AppEnvironment\n    \"\"\"\n    A list of app tags.\n    This is a beta field and can be changes without a notice.\n    \"\"\"\n    tags: [String!] @beta(name: \"AppTags\")\n}\n\nenum AppEnvironmentType {\n    DEVELOPMENT\n    STAGING\n    PRODUCTION\n}\n\ntype AppEnvironment {\n    id: ID!\n    appId: ID!\n    key: String!\n    type: AppEnvironmentType!\n    createdBy: User @hydrated(service: \"identity\", field: \"users\", arguments : [{ name:\"accountIds\", value:\"$source.createdByAccountId\"}], identifiedBy : \"accountId\", batchSize : 90 )\n    createdAt: String!\n    scopes: [String!] @deprecated(reason: \"This has been superseeded by having scopes per version\")\n    \"\"\"The list of major versions for this environment in reverse chronological order (i.e. latest versions first)\"\"\"\n    versions(\n        first: Int\n        last: Int\n\n        \"\"\"Takes a version number for after query\"\"\"\n        after: String\n\n        \"\"\"Takes a version number for before query\"\"\"\n        before: String\n    ): AppEnvironmentVersionConnection\n\n    \"\"\"\n    Primary oauth client for the App to interact with Atlassian Authorisation server\n    \"\"\"\n    oauthClient: AtlassianOAuthClient!\n}\n\ntype RefreshToken {\n    refreshTokenRotation: Boolean!\n}\n\ntype AtlassianOAuthClient {\n    \"Identifier of the client for authentication\"\n    clientID: ID!\n    \"Callback url where the users are redirected once the authentication is complete\"\n    callbacks: [String!]\n    \"Rotating refresh token status for the auth client\"\n    refreshToken: RefreshToken\n}\n\ntype AppEnvironmentVersionConnection {\n    \"\"\"A paginated list of AppEnvironmentVersions\"\"\"\n    edges: [AppEnvironmentVersionEdge]\n\n    \"\"\"nodes field allows easy access for the first N data items\"\"\"\n    nodes: [AppEnvironmentVersion]\n\n    \"\"\"pageInfo determines whether there are more entries to query\"\"\"\n    pageInfo: PageInfo!\n\n    \"\"\"totalCount is the number of records retrieved on a query\"\"\"\n    totalCount: Int\n}\n\ntype AppEnvironmentVersionEdge {\n    cursor: String!\n    node: AppEnvironmentVersion\n}\n\n\"\"\"\nRepresents a major version of an AppEnvironment.\nA major version is one that requires consent from end users before upgrading installations, typically a change in\nthe permissions an App requires.\nOther changes do not trigger a new major version to be created and are instead applied to the latest major version\n\"\"\"\ntype AppEnvironmentVersion {\n    id: ID!\n    \"\"\"\n    The semver for this version (e.g. 2.4.0)\n    \"\"\"\n    version: String!\n\n    \"\"\"\n    a flag which if true indicates this version is the latest major version for this environment\n    \"\"\"\n    isLatest: Boolean!\n\n    \"\"\"\n    A flag which indicates if this version requires a license\n    \"\"\"\n    requiresLicense: Boolean!\n\n    \"\"\"\n    The permissions that this app requires on installation. These must be consented to by the installer\n    \"\"\"\n    permissions: [AppPermission!]!\n\n    \"\"\"\n    A set of migrationKeys for each product corresponding to the Connect App Key\n    \"\"\"\n    migrationKeys: MigrationKeys\n\n    \"\"\"Information about the types of storage being used by the app\"\"\"\n    storage: Storage!\n}\n\n\"\"\"\nPermissions that relate to the App's interaction with supported APIs and supported network egress\n\"\"\"\ntype AppPermission {\n    scopes: [AppHostServiceScope!]!\n    egress: [AppNetworkEgressPermission!]\n    securityPolicies: [AppSecurityPoliciesPermission!]\n}\n\ntype AppHostServiceScope {\n    key: String!\n    name: String!\n    description: String!\n    service: AppHostService!\n}\n\ntype AppHostService {\n    serviceId: ID!,\n    name: String!\n    description: String!\n    scopes: [AppHostServiceScope!]\n}\n\ntype AppNetworkEgressPermission {\n    type: AppNetworkPermissionType\n    addresses: [String!]\n}\n\ntype MigrationKeys {\n  jira: String!\n  confluence: String!\n}\n\ntype AppSecurityPoliciesPermission {\n    type: AppSecurityPoliciesPermissionType\n    policies: [String!]\n}\n\nenum AppNetworkPermissionType @renamed(from : \"NetworkPermissionType\") {\n    NAVIGATION\n    IMAGES\n    MEDIA\n    SCRIPTS\n    STYLES\n    FETCH_BACKEND_SIDE\n    FETCH_CLIENT_SIDE\n    FONTS\n    FRAMES\n}\n\nenum AppSecurityPoliciesPermissionType  @renamed(from : \"SecurityPoliciesPermissionType\") {\n    SCRIPTS\n    STYLES\n}\n\ninput UpdateAppDetailsInput {\n  appId: ID!,\n  name: String!,\n  description: String\n}\n\n\ntype UpdateAppDetailsResponse implements Payload {\n  success: Boolean!\n  errors: [MutationError!]\n  app: App\n}\n\n\"\"\"Response from updating an oauth client\"\"\"\ntype UpdateAtlassianOAuthClientResponse implements Payload {\n  success: Boolean!\n  errors: [MutationError!]\n}\n\ninput RefreshTokenInput {\n  refreshTokenRotation: Boolean!\n}\n\n\"\"\"Input payload for updating an Atlassian OAuth Client mutation\"\"\"\ninput UpdateAtlassianOAuthClientInput {\n  clientID: ID!\n  callbacks: [String!]\n  refreshToken: RefreshTokenInput\n}\n\ninput CreateAppInput {\n    name: String!\n    description: String\n}\n\n\"Response from creating an app\"\ntype CreateAppResponse implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n\n    \"Details about the created app\"\n    app: App @hydrated(service: \"cs_apps\" field: \"app\" arguments : [ { name : \"id\", value : \"$source.appId\"}] identifiedBy : \"id\")\n}\n\n\"\"\"Input payload for enrolling scopes to an app environment\"\"\"\ninput UpdateAppHostServiceScopesInput {\n  \"\"\"A unique Id representing the app\"\"\"\n  appId: ID!\n  \"\"\"The key of the app's environment to enrol the scopes\"\"\"\n  environmentKey: String!\n  \"\"\"The Id of the service for which the scopes belong to\"\"\"\n  serviceId: ID!\n  \"\"\"The scopes this app will be enrolled to after the request succeeds\"\"\"\n  scopes: [String!]\n}\n\n\"\"\"Response from enrolling scopes into an app environment\"\"\"\ntype UpdateAppHostServiceScopesResponsePayload implements Payload {\n  success: Boolean!\n  errors: [MutationError!]\n\n  \"\"\"Details about the app\"\"\"\n  app: App\n  \"\"\"Details about the version of the app\"\"\"\n  appEnvironmentVersion: AppEnvironmentVersion\n}\n\ntype Storage {\n  hosted: HostedStorage\n  remotes: [Remote!]\n}\n\ntype HostedStorage {\n  classifications: [Classification!]\n  locations: [String!]\n}\n\ntype Remote {\n  key: String!\n  baseUrl: String!\n  classifications: [Classification!]\n  locations: [String!]\n}\n\nenum Classification {\n  ugc\n  pii\n  other\n}\n","bitbucket":"type Query {\n\tbitbucket: BitbucketQuery @namespaced\n}\n\ntype BitbucketQuery {\n    \"\"\"\n    Look up the Bitbucket repository by ARI.\n    \"\"\"\n    bitbucketRepository(id: ID! @ARI(type: \"repository\", owner: \"bitbucket\")): BitbucketRepository\n\n    \"\"\"\n    Look up the Bitbucket workspace by ARI.\n    \"\"\"\n    bitbucketWorkspace(id: ID! @ARI(type: \"workspace\", owner: \"bitbucket\")): BitbucketWorkspace\n}\n\ntype BitbucketRepositoryAvatar {\n    \"\"\"\n    URI for retrieving Bitbucket avatar.\n    \"\"\"\n    url: URL!\n}\n\ntype BitbucketRepository implements Node {\n    \"\"\"\n    The ARI of the Bitbucket repository.\n    \"\"\"\n    id: ID! @ARI(type: \"repository\", owner: \"bitbucket\")\n    \"\"\"\n    Name of Bitbucket repository.\n    \"\"\"\n    name: String!\n    \"\"\"\n    URI for accessing Bitbucket repository.\n    \"\"\"\n    webUrl: URL!\n    \"\"\"\n    The Bitbucket avatar.\n    \"\"\"\n    avatar: BitbucketRepositoryAvatar\n    \"\"\"\n    Bitbucket workspace the repository is part of.\n    \"\"\"\n    workspace: BitbucketWorkspace @hydrated(service: \"bitbucket\" field: \"bitbucket.bitbucketWorkspace\" arguments : [{ name:\"id\" value:\"$source.workspaceId\"}] identifiedBy : \"id\")\n}\n\ntype BitbucketWorkspace implements Node {\n    \"\"\"\n    The ARI of the Bitbucket workspace.\n    \"\"\"\n    id: ID! @ARI(type: \"workspace\", owner: \"bitbucket\")\n    \"\"\"\n    Name of the Bitbucket workspace.\n    \"\"\"\n    name: String!\n    \"\"\"\n    List of Bitbucket Repositories belong to the Bitbucket Workspace\n    The returned repositories are filtered based on user permission and role-value specified by permissionFilter argument.\n    If no permissionFilter specified, the list contains all repositories that user can access.\n    \"\"\"\n    repositories(\n        first: Int = 20,\n        after: String,\n        permissionFilter: BitbucketPermission\n    ): BitbucketRepositoryConnection\n}\n\ntype BitbucketRepositoryConnection {\n    edges: [BitbucketRepositoryEdge]\n    nodes: [BitbucketRepository]\n    pageInfo: PageInfo!\n}\n\ntype BitbucketRepositoryEdge {\n    cursor: String!\n    node: BitbucketRepository\n}\n\n\"\"\"Bitbucket Permission Enum\"\"\"\nenum BitbucketPermission {\n    \"\"\"Bitbucket admin permission\"\"\"\n    ADMIN\n}\n","id_org_manager":"type DomainClaim {\n    total: Int\n    verified: Int\n}\n\ntype Member {\n    id: ID!\n    account: User  @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.id\"}] identifiedBy : \"accountId\"   batchSize : 90 )\n}\n\ntype Admins {\n    total: Int!\n    users: [Member!]!\n}\n\ntype Organization {\n    id: ID!\n    name: String!\n    sites: [Site!]!\n    domainClaim: DomainClaim!\n    memberTotal: Int\n    admins: Admins!\n}\n\ntype Query {\n    organization(id: String!): Organization!\n    organizations: [Organization!]!\n}\n\ntype Site {\n    id: ID!\n}\n","devops_container_relationships_jira_project_and_space":"##################### Type Extensions #####################\n\nextend type JiraProject {\n\n    \"\"\"\n    The connection entity for Confluence space relationships for this Jira project, according to the specified\n    pagination, filtering.\n    \"\"\"\n    confluenceSpaceRelationships(\n        first: Int = 20,\n        after: String): JiraProjectAndConfluenceSpaceRelationshipConnection\n    @hydrated(service: \"devops_container_relationships_jira_project_and_space\" field: \"confluenceSpaceRelationshipsForJiraProject\" arguments : [\n        { name:\"id\" value:\"$source.id\"},\n        { name:\"first\" value:\"$argument.first\"},\n        { name:\"after\" value:\"$argument.after\"},\n    ])\n\n}\n\ntype Mutation {\n    \"\"\"Deletes the Confluence space relationship linked to the Jira project with the specified id (Jira project ARI).\"\"\"\n    deleteConfluenceSpaceRelationshipsForJiraProject(input: JiraProjectAndConfluenceSpaceDeleteRelationshipForJiraProjectInput!): JiraProjectAndConfluenceSpaceDeleteRelationshipForJiraProjectPayload\n}\n\ninput JiraProjectAndConfluenceSpaceDeleteRelationshipForJiraProjectInput {\n   id: ID! @ARI(type: \"project\", owner: \"jira\"),\n}\n\ntype JiraProjectAndConfluenceSpaceDeleteRelationshipForJiraProjectPayload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n##################### Top Level Types #####################\n\n\"\"\"\nA relationship between a Jira Project and Confluence space\n\"\"\"\ntype JiraProjectAndConfluenceSpaceRelationship {\n    \"\"\"The Jira project related to the Confluence space.\"\"\"\n    jiraProject: JiraProject\n    @hydrated(service: \"jira_projects\" field: \"jira.jiraProject\" arguments : [\n        { name : \"id\", value : \"$source.jiraProjectId\"}] identifiedBy : \"id\"\n    )\n\n    \"\"\"\n    The Confluence space details related to the Jira Project.\n    \"\"\"\n    confluenceSpace: ConfluenceSpace\n    @hydrated(service: \"confluence\" field: \"confluence.confluenceSpace\" arguments : [\n        { name : \"id\", value : \"$source.confluenceSpaceId\"}] identifiedBy : \"id\"\n    )\n}\n\n##################### Pagination #####################\n\ntype JiraProjectAndConfluenceSpaceRelationshipConnection {\n    edges: [JiraProjectAndConfluenceSpaceRelationshipEdge]\n    nodes: [JiraProjectAndConfluenceSpaceRelationship]\n    pageInfo: PageInfo!\n}\n\ntype JiraProjectAndConfluenceSpaceRelationshipEdge {\n    cursor: String!\n    node: JiraProjectAndConfluenceSpaceRelationship\n}","devops_metrics":"type Query {\n\tdevOpsMetrics: DevOpsMetrics\n}\n\ntype DevOpsMetrics {\n    deploymentFrequency(\n        \"\"\"Criteria for filtering the data used in metric calculation.\"\"\"\n        filter: DevOpsMetricsFilterInput!\n\n        \"\"\"Criteria for filtering the data used in metric calculation.\"\"\"\n        environmentCategory: DevOpsEnvironmentCategory! = PRODUCTION\n\n        \"\"\"How to aggregate the results.\"\"\"\n        rollupType: DevOpsMetricsRollupType! = { type: MEAN }\n    ): DevOpsMetricsDeploymentFrequency\n\n    deploymentSize(\n        \"\"\"Criteria for filtering the data used in metric calculation.\"\"\"\n        filter: DevOpsMetricsFilterInput!\n\n        \"\"\"Criteria for filtering the data used in metric calculation.\"\"\"\n        environmentCategory: DevOpsEnvironmentCategory! = PRODUCTION\n\n        \"\"\"How to aggregate the results.\"\"\"\n        rollupType: DevOpsMetricsRollupType! = { type: MEAN }\n    ): DevOpsMetricsDeploymentSize\n\n    cycleTime(\n        \"\"\"Criteria for filtering the data used in metric calculation.\"\"\"\n        filter: DevOpsMetricsFilterInput!,\n\n        \"\"\"Whether to include 'mean' cycle time as one of the returned metrics.\"\"\"\n        isIncludeCycleTimeMean: Boolean,\n\n        \"\"\"Use to specify list of percentile metrics to compute and return results for. Max limit of 5. Values need to be between 0 and 100.\"\"\"\n        cycleTimePercentiles: [Int!]\n    ): DevOpsMetricsCycleTime\n\n    perIssueMetrics(\n        first: Int!\n        after: String\n        \"\"\"Criteria for filtering the data used in metric calculation.\"\"\"\n        filter: DevOpsMetricsPerIssueMetricsFilter!\n    ): DevOpsMetricsPerIssueMetricsConnection\n\n    perDeploymentMetrics(\n        first: Int!\n        after: String\n        filter: DevOpsMetricsPerDeploymentMetricsFilter!\n    ): DevOpsMetricsPerDeploymentMetricsConnection\n}\n\n\"\"\"No results will be returned unless an association type is specified. Currently only 'jiraProjectIds' association type is supported.\"\"\"\ninput DevOpsMetricsFilterInput {\n    \"\"\"The identifier that indicates which cloud instance this data is to be fetched for.\"\"\"\n    cloudId: ID!\n\n    \"\"\"The start dateTime for overall time interval to return results for. The interval is inclusive of this value.\"\"\"\n    startFromInclusive: DateTime!\n\n    \"\"\"The end dateTime for overall time interval to return results for. The interval is exclusive of this value.\"\"\"\n    endAtExclusive: DateTime!\n\n    \"\"\"\n    The Olson Timezone ID. E.g. 'Australia/Sydney'.\n    Specifies which timezone to aggregate data in so that daylight savings is taken into account if it occurred between request time range.\n    \"\"\"\n    timezoneId: String = \"UTC\"\n\n    \"\"\"\n    The size of time interval in which to rollup data points in. Default is 1 day.\n    E.g. Count of data over 2 weeks with 1 day resolution means rollup is number of datapoints per day over 2 weeks.\n    \"\"\"\n    resolution: DevOpsMetricsResolutionInput = { value: 1, unit: DAY }\n\n    \"\"\"List of Jira projectIds in the given 'cloudId' to fetch metrics for. Max limit of 10.\"\"\"\n    jiraProjectIds: [ID!]\n\n    \"\"\"Issue level filters. Currently, in order to apply this filter, jiraProjectIds must also be provided\"\"\"\n    issueFilters: DevOpsMetricsIssueFilters\n}\n\n\"\"\"No results will be returned unless an association type is specified. Currently only 'jiraProjectIds' association type is supported.\"\"\"\ninput DevOpsMetricsPerIssueMetricsFilter {\n    \"\"\"The identifier that indicates which cloud instance this data is to be fetched for.\"\"\"\n    cloudId: ID!\n\n    \"\"\"The start dateTime for overall time interval to return results for. The interval is inclusive of this value.\"\"\"\n    startFromInclusive: DateTime!\n\n    \"\"\"The end dateTime for overall time interval to return results for. The interval is exclusive of this value.\"\"\"\n    endAtExclusive: DateTime!\n\n    \"\"\"List of Jira projectIds in the given 'cloudId' to fetch metrics for. Max limit of 10.\"\"\"\n    jiraProjectIds: [ID!]\n\n    \"\"\"Issue level filters. Currently, in order to apply this filter, jiraProjectIds must also be provided\"\"\"\n    issueFilters: DevOpsMetricsIssueFilters\n}\n\n\"\"\"No results will be returned unless an association type is specified. Currently only 'jiraProjectIds' association type is supported.\"\"\"\ninput DevOpsMetricsPerDeploymentMetricsFilter {\n    \"\"\"The identifier that indicates which cloud instance this data is to be fetched for.\"\"\"\n    cloudId: ID!\n\n    \"\"\"The start dateTime for overall time interval to return results for. The interval is inclusive of this value.\"\"\"\n    startFromInclusive: DateTime!\n\n    \"\"\"The end dateTime for overall time interval to return results for. The interval is exclusive of this value.\"\"\"\n    endAtExclusive: DateTime!\n\n    \"\"\"List of Jira projectIds in the given 'cloudId' to fetch metrics for. Max limit of 10.\"\"\"\n    jiraProjectIds: [ID!]\n\n    \"\"\"List of environment categories to filter for - only deployments in these categories will be returned.\"\"\"\n    environmentCategories: [DevOpsEnvironmentCategory!]! = [PRODUCTION]\n}\n\ninput DevOpsMetricsResolutionInput {\n    \"\"\"Input value for resolution specified.\"\"\"\n    value: Int!\n\n    \"\"\"Input unit for specified resolution value.\"\"\"\n    unit: DevOpsMetricsResolutionUnit!\n}\n\n\ninput DevOpsMetricsIssueFilters {\n    \"\"\"Only issues of these types will be returned.\"\"\"\n    issueTypeIds: [ID!] @ARI(type: \"issue-type\", owner: \"jira\")\n\n    \"\"\"\n    Only issues in these epics will be returned.\n\n    Note:\n    * If a null ID is included in the list, issues not in epics will be included in the results.\n    * If a subtask's parent issue is in one of the epics, the subtask will also be returned.\n    \"\"\"\n    epicIds: [ID] @ARI(type: \"issue\", owner: \"jira\")\n}\n\ninput DevOpsMetricsRollupType {\n    type: DevOpsMetricsRollupOption!\n    \"\"\"Must only be specified if the rollup kind is PERCENTILE\"\"\"\n    percentile: Int\n}\n\nenum DevOpsMetricsRollupOption {\n    MEAN\n    PERCENTILE\n}\n\n##### Response #####\n\ntype DevOpsMetricsDeploymentFrequencyData {\n    \"\"\"dataTime of data point. Each data point is separated by size of time resolution specified.\"\"\"\n    dateTime: DateTime\n\n    \"\"\"Number of deployments between ('dateTime') and ('dateTime' + 'resolution')\"\"\"\n    count: Int\n}\n\ntype DevOpsMetricsDeploymentFrequency {\n    \"\"\"\n    The size of time interval in which data points are rolled up in.\n    E.g. Count of data over 2 weeks with 1 day resolution means rollup is number of datapoints per day over 2 weeks.\n    \"\"\"\n    resolution: DevOpsMetricsResolution\n\n    \"\"\"Deployment state. Currently will only return for SUCCESSFUL, no State filter/input supported yet.\"\"\"\n    state: DeploymentState\n\n    \"\"\"Deployment environment type.\"\"\"\n    environmentType: DevOpsEnvironmentCategory\n\n    \"\"\"\n    Deployment frequency aggregated according to the time resolution and rollup type specified.\n\n    E.g. if the resolution were one week and the rollup type median, this value would be the median weekly\n    deployment count.\n    \"\"\"\n    aggregateData: Float\n\n    \"\"\"The deployment frequency data points rolled up by specified resolution.\"\"\"\n    data: [DevOpsMetricsDeploymentFrequencyData]\n}\n\ntype DevOpsMetricsDeploymentSizeData {\n    \"\"\"dataTime of data point. Each data point is separated by size of time resolution specified.\"\"\"\n    dateTime: DateTime\n\n    \"\"\"Aggregated number of issues per deployment between ('dateTime') and ('dateTime' + 'resolution')\"\"\"\n    deploymentSize: Float\n}\n\ntype DevOpsMetricsDeploymentSize {\n    \"\"\"\n    Deployment size aggregated according to the rollup type specified.\n\n    E.g. if the rollup type were median, this will be the median number of issues per deployment\n    over the whole time period.\n    \"\"\"\n    aggregateData: Float\n\n    \"\"\"The deployment size data points rolled up by specified resolution.\"\"\"\n    data: [DevOpsMetricsDeploymentSizeData]\n}\n\nenum DevOpsMetricsCycleTimePhase {\n    \"\"\"Development phase from initial code commit to opened pull request.\"\"\"\n    COMMIT_TO_PR\n\n    \"\"\"Development phase from initial code commit to deployed code.\"\"\"\n    COMMIT_TO_DEPLOYMENT\n}\n\ntype DevOpsMetricsCycleTimeData {\n    \"\"\"dataTime of data point. Each data point is separated by size of time resolution specified.\"\"\"\n    dateTime: DateTime\n\n    \"\"\"Rolled up cycle time data (in seconds) between ('dateTime') and ('dateTime' + 'resolution'). Roll up method specified by 'metric'.\"\"\"\n    cycleTimeSeconds: Long\n\n    \"\"\"Number of issues shipped between ('dateTime') and ('dateTime' + 'resolution').\"\"\"\n    issuesShippedCount: Int\n}\n\ninterface DevOpsMetricsCycleTimeMetrics {\n    \"\"\"Data aggregated according to the rollup type specified. Rounded to the nearest second.\"\"\"\n    aggregateData: Long\n\n    \"\"\"The cycle time data points, computed using roll up of the type specified in 'metric'. Rolled up by specified resolution.\"\"\"\n    data: [DevOpsMetricsCycleTimeData]\n}\n\ntype DevOpsMetricsCycleTimeMean implements DevOpsMetricsCycleTimeMetrics {\n    \"\"\"Mean of data points in 'data' array. Rounded to the nearest second.\"\"\"\n    aggregateData: Long\n    data: [DevOpsMetricsCycleTimeData]\n}\n\ntype DevOpsMetricsCycleTimePercentile implements DevOpsMetricsCycleTimeMetrics {\n    \"\"\"\n    The percentile value across all cycle-times in the database between dateTimeFrom and dateTimeTo\n    (not across the datapoints in 'data' array). Rounded to the nearest second.\n    \"\"\"\n    aggregateData: Long\n    data: [DevOpsMetricsCycleTimeData]\n    \"\"\"Percentile metric of returned values. Will be between 0 and 100.\"\"\"\n    percentile: Int\n}\n\ntype DevOpsMetricsCycleTime {\n    \"\"\"\n    The size of time interval in which data points are rolled up in.\n    E.g. Count of data over 2 weeks with 1 day resolution means rollup is number of datapoints per day over 2 weeks.\n    \"\"\"\n    resolution: DevOpsMetricsResolution\n\n    \"\"\"The development phase which the cycle time is calculated for.\"\"\"\n    phase: DevOpsMetricsCycleTimePhase\n\n    \"\"\"Indicates whether user requesting metrics has permission to all contributing issues.\"\"\"\n    hasPermissionForAllContributingIssues: Boolean\n\n    \"\"\"List of cycle time metrics for each requested roll up metric type.\"\"\"\n    cycleTimeMetrics: [DevOpsMetricsCycleTimeMetrics]\n}\n\ntype DevOpsMetricsIssueMetrics {\n    \"\"\" Issue ARI \"\"\"\n    id: ID! @ARI(type: \"issue\", owner: \"jira\")\n    \"\"\" Development time from initial code commit to deployed code in production environment.\"\"\"\n    totalCycleTimeSeconds: Long\n    \"\"\" Average of review times of all pull requests associated with the issueId.\"\"\"\n    meanReviewTimeSeconds: Long\n    commitsCount: Int\n    pullRequestsCount: Int\n    \"\"\" DateTime of the most recent successful deployment to production.\"\"\"\n    lastSuccessfulProductionDeployment: DateTime\n}\n\ntype DevOpsMetricsIssueMetricsEdge {\n    cursor: String!\n    node: DevOpsMetricsIssueMetrics\n}\n\ntype DevOpsMetricsPerIssueMetricsConnection {\n    edges: [DevOpsMetricsIssueMetricsEdge]\n    nodes: [DevOpsMetricsIssueMetrics]\n    pageInfo: PageInfo!\n}\n\ntype DevOpsMetricsDeploymentMetrics {\n    \"\"\"\n    Currently the only size metric supported is \"number of issues per deployment\".\n\n    Note: The issues per deployment count will ignore Jira permissions, meaning the user may not have permission to view all of the issues.\n    The list of `issueIds` contained in the `DeploymentSummary` will however respect Jira permissions.\n    \"\"\"\n    deploymentSize: Long\n    deployment: DeploymentSummary @hydrated(service: \"jira_releases\" field: \"jiraReleases.deploymentsById\" arguments : [{ name:\"deploymentIds\" value:\"$source.deploymentId\"}] identifiedBy : \"id\" batchSize : 100 )\n}\n\ntype DevOpsMetricsDeploymentMetricsEdge {\n    cursor: String!\n    node: DevOpsMetricsDeploymentMetrics\n}\n\ntype DevOpsMetricsPerDeploymentMetricsConnection {\n    edges: [DevOpsMetricsDeploymentMetricsEdge]\n    nodes: [DevOpsMetricsDeploymentMetrics]\n    pageInfo: PageInfo!\n}\n\n##### Common #####\n\n\"\"\"Unit for specified resolution value.\"\"\"\nenum DevOpsMetricsResolutionUnit {\n    HOUR\n    DAY\n    WEEK\n}\n\ntype DevOpsMetricsResolution {\n    \"\"\"Value for resolution specified.\"\"\"\n    value: Int\n\n    \"\"\"Unit for specified resolution value.\"\"\"\n    unit: DevOpsMetricsResolutionUnit\n}\n","jira_releases":"type Query {\n    \"\"\"\n    Namespace for fields relating to issue releases in Jira.\n\n    A \"release\" in this context can refer to a code deployment or a feature flag change.\n\n    This field is currently in BETA.\n    \"\"\"\n    jiraReleases: JiraReleases @beta(name: \"jira-releases-v0\") @namespaced\n}\n\ntype JiraReleases {\n    \"\"\"\n    Issue data that is filtered & ordered based on release-specific information.\n\n    The returned issues will be ordered by the dates of the most recent deployments that\n    match the input filter. An issue that was released more recently will appear earlier\n    in the list.\n    \"\"\"\n    issues(\n        first: Int! = 100\n        after: String\n        filter: JiraReleasesIssueFilter!\n    ): JiraReleasesIssueConnection\n\n    \"\"\"\n    Epic data that is filtered & ordered based on release-specific information.\n\n    The returned epics will be ordered by the dates of the most recent deployments for\n    the issues within the epic that match the input filter. An epic containing an issue\n    that was released more recently will appear earlier in the list.\n    \"\"\"\n    epics(\n        first: Int! = 100\n        after: String\n        filter: JiraReleasesEpicFilter!\n    ): JiraReleasesEpicConnection\n\n    \"\"\"\n    Deployment summaries that are ordered by the date at which they occured (most recent to least recent).\n    \"\"\"\n    deployments(\n        first: Int! = 100\n        after: String\n        filter: JiraReleasesDeploymentFilter!\n    ): JiraReleasesDeploymentSummaryConnection\n\n    \"\"\"\n    Query deployment summaries by ID.\n\n    A maximum of 100 `deploymentIds` can be asked for at the one time.\n    \"\"\"\n    deploymentsById(\n        deploymentIds: [ID!]! @ARI(type: \"deployment\", owner: \"jira\")\n    ): [DeploymentSummary]\n}\n\ninput JiraReleasesIssueFilter {\n    \"\"\"\n    Only issues in this project will be returned.\n    \"\"\"\n    projectId: ID! @ARI(type: \"project\", owner: \"jira\")\n\n    \"\"\"\n    Only issues matching this text filter will be returned (will match against all issue fields).\n    \"\"\"\n    text: String\n\n    \"\"\"\n    Only issues in these epics will be returned.\n\n    Note:\n    * If a null ID is included in the list, issues not in epics will be included in the results.\n    * If a subtask's parent issue is in one of the epics, the subtask will also be returned.\n    \"\"\"\n    epicIds: [ID] @ARI(type: \"issue\", owner: \"jira\")\n\n    \"\"\"\n    Only issues of these types will be returned.\n    \"\"\"\n    issueTypes: [ID!] @ARI(type: \"issue-type\", owner: \"jira\")\n\n    \"\"\"\n    Only issues assigned to these users will be returned.\n    \"\"\"\n    assignees: [ID!]\n\n    \"\"\"\n    Only issues with the supplied fixVersions will be returned.\n    \"\"\"\n    fixVersions: [String!]\n\n    \"\"\"\n    Only issues that have been released in these environments will be returned.\n    \"\"\"\n    environmentDisplayNames: [String!]\n\n    \"\"\"\n    Only issues that have been released in these environment *types* will be returned.\n    \"\"\"\n    environmentCategories: [DevOpsEnvironmentCategory]\n\n    \"\"\"\n    Determines whether issues that haven't been released should be included in the results.\n    \"\"\"\n    releaseStatusFilter: JiraReleasesIssueReleaseStatusFilter! = RELEASED\n\n    \"\"\"\n    Only issues that have been released within this time window will be returned.\n\n    Note: Issues that have not been released within the time window will still be returned\n    if the `includeIssuesWithoutReleases` argument is `true`.\n    \"\"\"\n    timeWindow: JiraReleasesTimeWindowInput!\n}\n\n\"\"\"\nUsed for specifying whether or not issues that haven't been released should be included\nin the results.\n\"\"\"\nenum JiraReleasesIssueReleaseStatusFilter {\n    \"\"\"\n    Only issues that have been released (to any environment) will be included in the results.\n    \"\"\"\n    RELEASED\n\n    \"\"\"\n    Only issues that have *not* been released (to any environment) will be included in the results.\n    \"\"\"\n    UNRELEASED\n\n    \"\"\"\n    Issues that have been released will be returned first, followed by issues that haven't\n    yet been released.\n    \"\"\"\n    RELEASED_AND_UNRELEASED\n}\n\ntype JiraReleasesIssueConnection {\n    edges: [JiraReleasesIssueEdge]\n    nodes: [JiraReleasesIssue]\n    pageInfo: PageInfo!\n}\n\ntype JiraReleasesIssueEdge {\n    cursor: String!\n    node: JiraReleasesIssue\n}\n\ntype JiraReleasesIssue {\n    id: ID! @ARI(type: \"issue\", owner: \"jira\")\n    issueKey: String\n    issueTypeId: ID @ARI(type: \"issue-type\", owner: \"jira\")\n    assignee : User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.assigneeId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    summary: String\n    lastDeployed: DateTime\n    \"\"\"\n    The epic this issue is contained within (either directly or indirectly).\n\n    Note: If the issue and its ancestors are not within an epic, the value will be `null`.\n    \"\"\"\n    epic: JiraReleasesEpic\n}\n\ninput JiraReleasesEpicFilter {\n    \"\"\"\n    Only epics in this project will be returned.\n    \"\"\"\n    projectId: ID! @ARI(type: \"project\", owner: \"jira\")\n\n    \"\"\"\n    Only epics matching this text filter will be returned.\n    \"\"\"\n    text: String\n\n    \"\"\"\n    Determines whether epics that haven't been released should be included in the results.\n    \"\"\"\n    releaseStatusFilter: JiraReleasesEpicReleaseStatusFilter = RELEASED\n}\n\n\"\"\"\nUsed for specifying whether or not epics that haven't been released should be included\nin the results.\n\nFor an epic to be considered as released, at least one of the issues or subtasks within\nit must have been released.\n\"\"\"\nenum JiraReleasesEpicReleaseStatusFilter {\n    \"\"\"\n    Only epics that have been released (to any environment) will be included in the results.\n    \"\"\"\n    RELEASED\n\n    \"\"\"\n    Epics that have been released will be returned first, followed by epics that haven't\n    yet been released.\n    \"\"\"\n    RELEASED_AND_UNRELEASED\n}\n\ntype JiraReleasesEpicConnection {\n    edges: [JiraReleasesEpicEdge]\n    nodes: [JiraReleasesEpic]\n    pageInfo: PageInfo!\n}\n\ntype JiraReleasesEpicEdge {\n    cursor: String!\n    node: JiraReleasesEpic\n}\n\ntype JiraReleasesEpic {\n    id: ID! @ARI(type: \"issue\", owner: \"jira\")\n    issueKey: String\n    issueTypeId: ID @ARI(type: \"issue-type\", owner: \"jira\")\n    assignee : User @hydrated(service: \"identity\" field: \"users\" arguments : [{ name:\"accountIds\" value:\"$source.assigneeId\"}] identifiedBy : \"accountId\" batchSize : 90 )\n    summary: String\n    color: String\n    lastDeployed: DateTime\n}\n\ninput JiraReleasesDeploymentFilter {\n    \"\"\"\n    Only deployments associated with these issues will be returned.\n    \"\"\"\n    issueIds: [ID!] @ARI(type: \"issue\", owner: \"jira\")\n\n    \"\"\"\n    Only deployments associated with these services will be returned.\n    \"\"\"\n    serviceIds: [ID!] @ARI(type: \"service\", owner: \"graph\")\n\n    \"\"\"\n    Only deployments in this time window will be returned.\n    \"\"\"\n    timeWindow: JiraReleasesTimeWindowInput!\n\n    \"\"\"\n    Only deployments in these environments will be returned.\n    \"\"\"\n    environmentDisplayNames: [String!]\n\n    \"\"\"\n    Only deployments in these environment types will be returned.\n    \"\"\"\n    environmentCategories: [DevOpsEnvironmentCategory!]\n}\n\ninput JiraReleasesTimeWindowInput {\n    after: DateTime!\n    before: DateTime!\n}\n\ntype JiraReleasesDeploymentSummaryConnection {\n    edges: [JiraReleasesDeploymentSummaryEdge]\n    nodes: [DeploymentSummary]\n    pageInfo: PageInfo!\n}\n\ntype JiraReleasesDeploymentSummaryEdge {\n    cursor: String!\n    node: DeploymentSummary\n}\n\n\"\"\"\nThis object models a deployment in the Continuous Delivery (CD) Pipeline concept, an automated process (usually comprised of\nmultiple stages) for getting software from version control right through to the production environment.\n\"\"\"\ntype DeploymentSummary implements Node @GenericType(context:DEVOPS){\n    id: ID! @ARI(type: \"deployment\", owner: \"jira\")\n\n    \"\"\"\n    IDs of the issues that are included in the deployment.\n\n    At least one of the commits in the deployment must be associated with an issue for it\n    to appear here (meaning the issue key is mentioned in the commit message).\n    \"\"\"\n    issueIds: [ID!] @ARI(type: \"issue\", owner: \"jira\")\n\n    \"\"\"\n    This is the DevOps provider for the deployment.\n    \"\"\"\n    provider: DevOpsProvider @beta(name : \"DevOpsProvider\")\n\n    \"\"\"\n    Services associated with the deployment.\n\n    At least one of the commits in the deployment must be associated with a service ID for it\n    to appear here.\n    \"\"\"\n    serviceAssociations: [DevOpsService] @hydrated(service: \"devops_service\" field: \"servicesById\" arguments : [{ name : \"ids\", value : \"$source.serviceIds\"}])\n\n    \"\"\"\n    This is the identifier for the deployment.\n\n    It must be unique for the specified pipeline and environment. It must be a monotonically\n    increasing number, as this is used to sequence the deployments.\n    \"\"\"\n    deploymentSequenceNumber: Long\n\n    \"\"\"\n    A number used to apply an order to the updates to the deployment, as identified by the\n    `deploymentSequenceNumber`, in the case of out-of-order receipt of update requests.\n\n    It must be a monotonically increasing number. For example, epoch time could be one\n    way to generate the `updateSequenceNumber`.\n    \"\"\"\n    updateSequenceNumber: Long\n\n    \"\"\"\n    The human-readable name for the deployment. Will be shown in the UI.\n    \"\"\"\n    displayName: String\n\n    \"\"\"\n    A URL users can use to link to this deployment, in this environment.\n    \"\"\"\n    url: String\n\n    \"\"\"\n    A short description of the deployment.\n    \"\"\"\n    description: String\n\n    \"\"\"\n    The state of the deployment.\n    \"\"\"\n    state: DeploymentState\n\n    \"\"\"\n    The last-updated timestamp to present to the user as a summary of the state of the deployment.\n    \"\"\"\n    lastUpdated: DateTime\n\n    \"\"\"\n    This object models the Continuous Delivery (CD) Pipeline concept, an automated process\n    (usually comprised of multiple stages) for getting software from version control right through\n    to the production environment.\n    \"\"\"\n    pipeline: DeploymentPipeline\n\n    \"\"\"\n    The environment that the deployment is present in.\n    \"\"\"\n    environment: DevOpsEnvironment\n}\n","entity_storage_service":"input DeleteAppStoredEntityMutationInput {\n    \"\"\"\n    The identifier for the entity\n\n    Keys must be between 1-100 characters long and must match the following pattern /^[a-zA-Z0-9:._\\s-]+$/\n    \"\"\"\n    key: ID!\n\n    \"\"\"The ARI to store this entity within\"\"\"\n    contextAri: ID!\n\n\n    \"\"\"Specify whether the encrypted value should be deleted\"\"\"\n    encrypted: Boolean\n}\n\n\"\"\"\nGeneric implementation of MutationResponse for responses that don't need any extra data\n\"\"\"\ntype SetAppStoredEntityPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\n\"\"\"\nGeneric implementation of MutationResponse for responses that don't need any extra data\n\"\"\"\ntype DeleteAppStoredEntityPayload implements Payload {\n    success: Boolean!\n    errors: [MutationError!]\n}\n\ntype AppStorageMutation {\n    \"\"\"Set an untyped entity in a specific context given a key\"\"\"\n    setAppStoredEntity(input: SetAppStoredEntityMutationInput!): SetAppStoredEntityPayload @beta(name: \"AppEntityStorage\")\n\n    \"\"\"Delete an untyped entity in a specific context given a key\"\"\"\n    deleteAppStoredEntity(input: DeleteAppStoredEntityMutationInput!): DeleteAppStoredEntityPayload @beta(name: \"AppEntityStorage\")\n}\n\ntype Mutation {\n    appStorage: AppStorageMutation @beta(name: \"AppEntityStorage\")\n}\n\ntype Query {\n    \"\"\"\n    Get an untyped entity in a specific context given a key\n\n    Keys must be between 1-100 characters long and must match the following pattern /^[a-zA-Z0-9:._\\s-]+$/\n    \"\"\"\n    appStoredEntity(contextAri: ID!, key: ID!, encrypted: Boolean): AppStoredEntity @beta(name: \"AppEntityStorage\")\n\n    \"\"\"\n    Get an list of untyped entity in a specific context, optional query parameters where condition, first and after\n\n    where condition to filter\n    returns the first N entities when queried. Should not exceed 20\n    this is a cursor after which (exclusive) the data should be fetched from\n    \"\"\"\n    appStoredEntities(\n        contextAri: ID!\n        where: [AppStoredEntityFilter!]\n        first: Int\n        after: String\n    ): AppStoredEntityConnection @beta(name: \"AppEntityStorage\")\n\n    \"\"\"\n    Get an list of untyped entity in a specific context, optional query parameters where condition, first and after\n    This endpoint should only be called by functions with cleanup: true, as it will be deprecated once a proper GDPR solution\n    is implemented.\n\n    where condition to filter\n    returns the first N entities when queried. Should not exceed 100\n    this is a cursor after which (exclusive) the data should be fetched from\n    \"\"\"\n    appStoredEntitiesForCleanup(\n        contextAri: ID!\n        where: [AppStoredEntityFilter!]\n        first: Int\n        after: String\n    ): AppStoredEntityConnection @beta(name: \"AppEntityStorage\") @deprecated(reason: \"This query is a temporary solution that will be removed\")\n}\n\ninput SetAppStoredEntityMutationInput {\n    \"\"\"\n    The identifier for the entity\n\n    Keys must be between 1-100 characters long and must match the following pattern /^[a-zA-Z0-9:._\\s-]+$/\n    \"\"\"\n    key: ID!\n\n    \"\"\"The ARI to store this entity within\"\"\"\n    contextAri: ID!\n\n    \"\"\"\n    Entities may be up to 2000 bytes long. Note that size within ESS may differ from\n    the size of the entity sent to this service. The entity size is counted within this service.\n    \"\"\"\n    value: JSON!\n\n    \"\"\"Specify whether value should be encrypted\"\"\"\n    encrypted: Boolean\n}\n\ntype AppStoredEntity {\n    \"\"\"\n    Entities may be up to 2000 bytes long. Note that size within ESS may differ from\n    the size of the entity sent to this service. The entity size is counted within this service.\n    \"\"\"\n    value: JSON\n\n    \"\"\"\n    The identifier for this entity\n\n    Keys must be between 1-100 characters long and must match the following pattern /^[a-zA-Z0-9:._\\s-]+$/\n    \"\"\"\n    key: ID!\n}\n\ntype AppStoredEntityConnection {\n    \"\"\"\n    The AppStoredEntityConnection is a paginated list of Entities from storage service\n    \"\"\"\n    edges: [AppStoredEntityEdge]\n\n    \"\"\"\n    nodes field allows easy access for the first N data items\n    \"\"\"\n    nodes: [AppStoredEntity]\n\n    \"\"\"\n    pageInfo determines whether there are more entries to query.\n    \"\"\"\n    pageInfo: AppStoredEntityPageInfo\n\n    \"\"\"\n    totalCount is the number of records retrived on a query.\n    \"\"\"\n    totalCount: Int\n}\n\ntype AppStoredEntityEdge {\n    \"\"\"\n    Edge is a combination of node and cursor and follows the relay specs.\n\n    Cursor returns the key of the last record that was queried and\n    should be used as input to after when querying for paginated entities\n    \"\"\"\n    cursor: String!\n    node: AppStoredEntity\n}\n\nenum AppStoredEntityCondition {\n    STARTS_WITH\n}\n\n\"\"\"\nThe identifier for this entity\n\nwhere condition to filter\n\"\"\"\ninput AppStoredEntityFilter {\n    \"\"\"Condition filter to be provided when querying for Entities.\"\"\"\n    field: String!\n    condition: AppStoredEntityCondition!\n    value: AppStoredEntityFieldValue!\n}\n\ntype AppStoredEntityPageInfo {\n    \"\"\"\n    The pageInfo is the place to allow code to navigate the paginated list.\n    \"\"\"\n    hasNextPage: Boolean!\n    hasPreviousPage: Boolean!\n}\n\n\"\"\"AppStoredEntityFieldValue\"\"\"\nscalar AppStoredEntityFieldValue\n","jsw":"type Query {\n    jsw: JswQuery @namespaced @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    boardScope(boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)): BoardScope @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    developmentInformation(issueId: ID! @ARI(type: \"issue\", owner: \"jira\", interpreted: true)): IssueDevOpsDevelopmentInformation @beta(name : \"IssueDevelopmentInformation\") @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n}\n\ntype Mutation {\n    jsw: JswMutation @namespaced @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    createColumn(input: CreateColumnInput): CreateColumnOutput @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    setColumnName(input: SetColumnNameInput): SetColumnNameOutput @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    rankColumn(input: RankColumnInput): RankColumnOutput @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    setColumnLimit(input: SetColumnLimitInput): SetColumnLimitOutput @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    deleteColumn(input: DeleteColumnInput): DeleteColumnOutput @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    startSprint(input: StartSprintInput): SprintResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    createSprint(input: CreateSprintInput): CreateSprintResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    completeSprint(input: CompleteSprintInput): CompleteSprintResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    deleteSprint(input: DeleteSprintInput): MutationResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    moveSprintUp(input: MoveSprintUpInput): MoveSprintUpResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    moveSprintDown(input: MoveSprintDownInput): MoveSprintDownResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    editSprint(input: EditSprintInput): SprintResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    \"\"\"\n    Sets the user swimlane strategy for the board.  Use NONE if not using swimlanes.\n    Strategy affects the current user alone.\n    \"\"\"\n    setUserSwimlaneStrategy(input: SetSwimlaneStrategyInput): SetSwimlaneStrategyResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    \"\"\"\n    Sets the admin swimlane strategy for the board.  Use NONE is not using swimlanes.\n    Strategy effects everyone who views the board.\n    \"\"\"\n    setSwimlaneStrategy(input: SetSwimlaneStrategyInput): SetSwimlaneStrategyResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    \"\"\"\n    Sets the estimation type for the board. Supported estimationTypes are STORY_POINTS and ORIGINAL_ESTIMATE\n    \"\"\"\n    setEstimationType(input: SetEstimationTypeInput): GenericMutationResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    \"\"\"\n    Creates a new custom filter\n    This mutation is currently in BETA\n    \"\"\"\n    createCustomFilter(input: CreateCustomFilterInput): CustomFilterCreateOutput @beta(name : \"createCustomFilter\") @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    \"\"\"\n    Update the custom filter with the specified custom filter ID\n    This mutation is currently in BETA\n    \"\"\"\n    updateCustomFilter(input: UpdateCustomFilterInput): CustomFilterCreateOutput @beta(name : \"updateCustomFilter\") @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    \"\"\"\n    Delete the custom filter with the specified custom filter ID\n    This mutation is currently in BETA\n    \"\"\"\n    deleteCustomFilter(input: DeleteCustomFilterInput): GenericMutationResponse @beta(name : \"deleteCustomFilter\") @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    \"\"\"\n    This mutation is currently in BETA\n    \"\"\"\n    boardCardMove(input: BoardCardMoveInput): MoveCardOutput @beta(name : \"boardCardMove\") @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    assignIssueParent(input: AssignIssueParentInput): AssignIssueParentOutput @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    unassignIssueParent(input: UnassignIssueParentInput): UnassignIssueParentOutput @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA)\n\n    \"\"\"\n    This mutation is in BETA\n    \"\"\"\n    createCardParent(input: CardParentCreateInput!): CardParentCreateOutput @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA) @beta(name: \"BacklogEpicPanel\") @renamed(from: \"createIssueParent\")\n\n    \"\"\"\n    This mutation is in BETA\n    \"\"\"\n    rankCardParent(input: CardParentRankInput!): GenericMutationResponse @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA) @beta(name: \"BacklogEpicPanel\") @renamed(from: \"rankIssueParent\")\n\n    \"\"\"\n    Set visibility of card cover images of the specified board\n    This mutation is currently in BETA\n    \"\"\"\n    setIssueMediaVisibility(input: SetIssueMediaVisibilityInput): SetIssueMediaVisibilityOutput @scopes(required: [JIRA_ATLASSIAN_EXTERNAL], product: JIRA) @beta(name : \"setIssueMediaVisibility\")\n}\n\ntype JswQuery {\n    boardScope(boardId: ID! @ARI(type: \"board\", owner: \"jira-software\")): BoardScope\n}\n\ntype JswMutation {\n    deleteCard(input: DeleteCardInput): DeleteCardOutput @beta(name : \"deleteCard\") @renamed(from : \"deleteSoftwareCard\")\n}\n\n\"Root node for queries about simple / agility / nextgen boards.\"\ntype BoardScope {\n    board: SoftwareBoard\n    \"Current user's swimlane-strategy, NONE if SWAG was unable to retrieve it\"\n    userSwimlaneStrategy: SwimlaneStrategy\n    \"Null if there's no backlog\"\n    backlog: Backlog\n    \"Null if sprints are disabled (empty if there are no sprints)\"\n    sprints(state: [SprintState]): [Sprint]\n    \"The project location for this board scope\"\n    projectLocation: SoftwareProject!\n    \"Card parents (AKA Epics) for filtering and adding to cards\"\n    cardParents: [CardParent]! @renamed(from: \"issueParents\")\n    \"List of all features on the board, and their state.\"\n    features: [BoardFeature]!\n    \"List of all feature groups on the board. This is similar to the list of features, but support groupings for the frontend to render\"\n    featureGroups: BoardFeatureGroupConnection @beta(name : \"featureGroups\")\n    \"List of reports on this board.  null if reports are not enabled on this board.\"\n    reports: SoftwareReports\n    \"Cards in the board scope with given card IDs\"\n    cards(cardIds: [ID]! @ARI(type: \"issue\", owner: \"jira\", interpreted: true), customFilterIds: [ID!]): [SoftwareCard]!\n    \"Estimation type currently configured for the board.\"\n    estimation: EstimationConfig\n    \"Information about the user making this request.\"\n    currentUser: CurrentUser!,\n    \"Request sprint by Id.\"\n    sprint(sprintId: ID! @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)): Sprint\n    \"Request sprint prototype by Id to be used with start sprint modal.\"\n    startSprintPrototype(sprintId: ID! @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)): Sprint @beta(name : \"startSprintPrototype\")\n    \"Custom filters for this board scope\"\n    customFilters: [CustomFilter] @beta(name : \"customFilters\")\n    \"\"\"\n    Return filtered card Ids on applying custom filters\n    This mutation is currently in BETA\n    \"\"\"\n    filteredCardIds(issueIds: [ID]!, customFilterIds: [ID]!): [ID] @beta(name : \"filteredCardIds\")\n}\n\ntype SoftwareBoard @renamed(from: \"Board\") {\n    id: ID @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    \"Name of the board\"\n    name: String\n    \"The list of columns on the board\"\n    columns: [Column]\n    \"\"\"\n    The current swimlane strategy for the board.  This is a board (not user) property.\n    All users of the board get the same strategy.\n    \"\"\"\n    swimlaneStrategy: SwimlaneStrategy\n    \"Whether any cards on the board are hidden due to board clearing logic (e.g. old cards in the done column are hidden)\"\n    hasClearedCards: Boolean @renamed(from: \"hasClearedIssues\")\n    \"Configuration for showing inline card create\"\n    inlineCardCreate: InlineCardCreateConfig @renamed(from: \"inlineIssueCreate\")\n    \"Configuration for showing media previews on cards\"\n    cardMedia: CardMediaConfig\n    \"List of the assignees of all cards currently displayed on the board\"\n    assignees: [User] @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.assignees.accountId\"}] identifiedBy : \"accountId\"   batchSize : 90)\n\n    \"[CardType]s which can be created in this column _outside of a swimlane_ (if any)\"\n    cardTypes: [CardType]! @renamed(from: \"issueTypes\")\n    \"All cards on the board, optionally filtered by ID\"\n    cards(cardIds: [ID] @ARI(type: \"issue\", owner: \"jira\", interpreted: true), customFilterIds: [ID!]): [SoftwareCard]\n    \"All issue children which are linked to the cards on the board\"\n    cardChildren: [SoftwareCard] @renamed(from: \"issueChildren\")\n    \"\"\"\n    Swimlanes on the board.  If swimlanes are set to \"NONE\" then this there will be a single swimlane object containing\n    all cards on the board.\n    \"\"\"\n    swimlanes: [Swimlane]!\n    \"\"\"\n    User Swimlanes on the board.  If swimlanes are set to \"NONE\" then this there will be a single swimlane object containing\n    all cards on the board.\n    \"\"\"\n    userSwimlanes: [Swimlane]!\n    \"List of all labels on all cards current displayed on the board\"\n    labels: [String]\n    \"Temporarily needed to support legacy write API\"\n    rankCustomFieldId: String\n    \"Board edit config. Contains properties which dictate how to mutate the board data, e.g support for inline issue or column creation\"\n    editConfig: BoardEditConfig,\n    # Column status mapping\n    columnConfigs: ColumnsConfig @beta(name : \"columnConfigs\")\n}\n\n\"A column on the board\"\ntype Column {\n    \"Column's id\"\n    id: ID\n    \"Column's name\"\n    name: String\n    \"The cards contained in the column\"\n    cards(customFilterIds: [ID!]): [SoftwareCard]!\n    \"Number of cards allowed in this column before displaying a warning,  null if no limit\"\n    maxCardCount: Int @renamed(from: \"maxIssueCount\")\n    \"The statuses mapped to this column\"\n    columnStatus: [ColumnStatus!]!,\n    \"Whether this column is the inital column.  Each board has exactly one initial column.\"\n    isInitial: Boolean!\n    \"Whether this column is the done column.  Each board has exactly one done column.\"\n    isDone: Boolean!\n}\n\n\"A status associated with a column, along with its transitions\"\ntype ColumnStatus {\n    \"Possible transitions into this status\"\n    transitions: [SoftwareCardTransition!]!\n    \"The status\"\n    status: CardStatus!\n    \"Possible card transitions with a certain card type into this status\"\n    cardTypeTransitions: [SoftwareCardTypeTransition!] @beta(name : \"SoftwareCardTypeTransitions\")\n}\n\n\"Represents a specific transition between statuses that a card can make.\"\ntype SoftwareCardTransition @renamed(from: \"CardTransition\") {\n    \"Identifier for the card's column in swimlane position, to be used as a target for card transitions\"\n    id: ID\n    \"Name of the transition, as set in the workflow editor\"\n    name: String!,\n    \"The status the card's issue will end up in after executing this CardTransition\"\n    status: CardStatus,\n    \"statuses which can move to this location, null if global transition.\"\n    originStatus: CardStatus,\n    \"Card type that this transition applies to\"\n    cardType: CardType!,\n    \"true if global transition (anything status can move to this location).\"\n    isGlobal: Boolean\n    \"true if the transition is initial\"\n    isInitial: Boolean\n    \"true if the transition has conditions\"\n    hasConditions: Boolean\n}\n\ntype SoftwareCardTypeTransition {\n    \"Non unique ID of the transition used as a target for card transitions\"\n    transitionId: ID\n    \"Name of the transition, as set in the workflow editor\"\n    name: String!,\n    \"The status the card's issue will end up in after executing this SoftwareCardTypeTransition\"\n    status: CardStatus,\n    \"statuses which can move to this location, null if global transition.\"\n    originStatus: CardStatus,\n    \"Card type that this transition applies to\"\n    cardType: CardType!,\n    \"true if global transition (anything status can move to this location).\"\n    isGlobal: Boolean\n    \"true if the transition is initial\"\n    isInitial: Boolean\n    \"true if the transition has conditions\"\n    hasConditions: Boolean\n}\n\ntype CardStatus @renamed(from: \"Status\") {\n    \"Card status id\"\n    id: ID\n    \"Card status name\"\n    name: String\n    \"\"\"\n    Which status category this statue belongs to.  Values:  \"undefined\" | \"new\" (ie todo) | \"indeterminate\" (aka \"in progress\") | \"done\"\n    \"\"\"\n    category: String\n}\n\n\"How to group cards on the board into swimlanes\"\nenum SwimlaneStrategy {\n    NONE,\n    ASSIGNEE,\n    ISSUEPARENT,\n    ISSUECHILDREN,\n}\n\ntype InlineCardCreateConfig @renamed(from: \"InlineIssueCreateConfig\") {\n    \"Whether inline create is enabled\"\n    enabled: Boolean!\n    \"Whether the global create should be used when creating\"\n    useGlobalCreate: Boolean\n}\n\ntype CardMediaConfig {\n    \"Whether or not to show card media on this board\"\n    enabled: Boolean!\n}\n\ntype CardType @renamed(from: \"IssueType\") {\n    id: ID\n    name: String\n    \"URL to the icon to show for this card type\"\n    iconUrl: String\n    \"The configuration for creating cards with this type inline.\"\n    inlineCardCreate: InlineCardCreateConfig @renamed(from: \"inlineIssueCreate\")\n    \"The type of hierarchy level that card type belongs to\"\n    hierarchyLevelType: CardTypeHierarchyLevelType\n}\n\nscalar CardTypeHierarchyLevelType @renamed(from: \"IssueTypeHierarchyLevelType\")\n\nenum CardHierarchyLevelEnumType @renamed(from : \"IssueTypeHierarchyLevelType\") {\n    CHILD,\n    BASE,\n    PARENT\n}\n\n\"A card on the board\"\ntype SoftwareCard @renamed(from: \"Card\") {\n    id: ID @ARI(type: \"issue\", owner: \"jira\", interpreted : true)\n    key: String @renamed(from: \"issue.key\")\n    summary: String @renamed(from: \"issue.summary\")\n    labels: [String] @renamed(from: \"issue.labels\")\n    type: CardType @renamed(from: \"issue.type\")\n    status: CardStatus @renamed(from: \"issue.status\")\n    assignee: User @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.issue.assignee.accountId\"}] identifiedBy : \"accountId\"   batchSize : 90)\n    \"Whether or not this card is flagged\"\n    flagged: Boolean\n    \"Whether or not this card is considered done\"\n    done: Boolean\n    \"Details of the media to show on this card, null if the card has no media\"\n    coverMedia: CardCoverMedia\n    \"Dev Status information for the card\"\n    devStatus: DevStatus\n    \"ID of parent card\"\n    parentId: ID @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n    \"List of children IDs for a card\"\n    childrenIds: [ID] @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n    \"Estimate of size of a card\"\n    estimate: Estimate\n    \"Child cards metadata\"\n    childCardsMetadata: ChildCardsMetadata @renamed(from: \"childIssuesMetadata\")\n    \"Card priority\"\n    priority: CardPriority\n    \"Due date\"\n    dueDate: String\n    \"IDs of the fix versions that this issue is related to\"\n    fixVersionsIds: [ID!]! @renamed(from: \"fixVersions\")\n}\n\ntype CardCoverMedia {\n    attachmentMediaApiId: ID @ARI(type: \"file\", owner: \"media\", interpreted: true)\n    attachmentId: Long\n    token: String\n    clientId: String\n    \"endpoint to retrieve the media from\"\n    endpointUrl: String\n    \"true if this card has media, but it's explicity been hidden by the user\"\n    hiddenByUser: Boolean!\n}\n\ntype InlineColumnEditConfig {\n    enabled: Boolean!\n}\n\ntype BoardEditConfig {\n    \"Configuration for showing inline card create\"\n    inlineCardCreate: InlineCardCreateConfig @renamed(from: \"inlineIssueCreate\")\n    \"Configuration for showing inline column mutations\"\n    inlineColumnEdit: InlineColumnEditConfig\n}\n\n\"Dev status context\"\ntype DevStatus {\n    activity: DevStatusActivity!\n    count: Int\n}\n\nenum DevStatusActivity {\n    PR_OPEN,\n    PR_MERGED,\n    PR_DECLINED,\n    BRANCH_OPEN,\n    COMMIT\n}\n\ntype CustomFilter {\n    id: ID!,\n    name: String!,\n    description: String,\n    filterQuery: FilterQuery\n}\n\ntype FilterQuery {\n    sanitisedJql: String!\n    errors: [String]\n}\n\n\"Estimate object which contains an estimate for a card when it exists\"\ntype Estimate {\n    storyPoints: Float,\n    originalEstimate: OriginalEstimate\n}\n\ntype OriginalEstimate {\n    value: Float,\n    valueAsText: String\n}\n\n\"Children metadata for cards\"\ntype ChildCardsMetadata @renamed(from: \"ChildIssuesMetadata\") {\n    complete: Int\n    total: Int\n}\n\ntype CardPriority @renamed(from: \"Priority\") {\n    name: String\n    iconUrl: String\n}\n\ntype Swimlane {\n    \"\"\"\n    The swimlane ID.  This will match the id of the object the swimlane is grouping by.  e.g. Epic's it will be the\n    epic's issue Id.  For assignees it will be the assignee's atlassian account id.   For swimlanes which do not\n    represent a object (e.g. \"Issues without assignee's\" swimlane) the value will be \"0\".\n    \"\"\"\n    id: ID\n    \"The icon to show for the swimlane\"\n    iconUrl: String\n    \"The name of the swimlane\"\n    name: String\n    \"The set of card types allowed in the swimlane\"\n    allowedCardTypes: [CardType!],\n    \"The column data\"\n    columnsInSwimlane: [ColumnInSwimlane]\n}\n\n\"Represents a column inside a swimlane.  Each swimlane gets a ColumnInSwimlane for each column.\"\ntype ColumnInSwimlane {\n    \"The details of the column\"\n    columnDetails: Column\n    \"The cards contained in this column in the given swimlane\"\n    cards(cardIds:[ID] @ARI(type: \"issue\", owner: \"jira\", interpreted: true), customFilterIds: [ID!]): [SoftwareCard]!\n}\n\ntype Backlog {\n    \"\"\"\n    Temporarily needed to support legacy write API_.  the issue list key to use when creating issue's on the board.\n    Required when creating issues on a board with backlogs\n    \"\"\"\n    boardIssueListKey: String\n    \"Whether or not to show the 'migrate this column to your backlog' prompt (set when first enabling backlogs)\"\n    requestColumnMigration: Boolean!\n    \"connect add-ons information\"\n    extension: BacklogExtension\n    cards(cardIds: [ID] @ARI(type: \"issue\", owner: \"jira\", interpreted: true), customFilterIds: [ID!]) : [SoftwareCard]!\n    \"List of the assignees of all cards currently displayed on the backlog\"\n    assignees: [User] @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.assignees.accountId\"}] identifiedBy : \"accountId\"   batchSize : 90)\n    \"List of card types which can be created directly on the backlog or sprints\"\n    cardTypes: [CardType]! @renamed(from: \"issueTypes\")\n    \"Labels for filtering and adding to cards\"\n    labels: [String]!\n}\n\ntype BacklogExtension {\n    \"list of operations that add-on can perform\"\n    operations: [SoftwareOperation]\n}\n\ntype SoftwareOperation @renamed(from: \"Operation\") {\n    icon: Icon\n    name: String\n    url: String\n    tooltip: String\n    styleClass: String\n}\n\ntype Icon {\n    url: String\n}\n\nenum SprintState {\n    ACTIVE,\n    FUTURE,\n    CLOSED\n}\n\ntype Sprint {\n    id: ID @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)\n    \"The sprint's name\"\n    name: String\n    \"The sprint's goal, null if no goal is set\"\n    goal: String\n    \"The start date of the sprint, in ISO 8601 format\"\n    startDate: DateTime\n    \"The end date of the sprint, in ISO 8601 format\"\n    endDate: DateTime\n    \"The number of days remaining\"\n    daysRemaining: Int\n    cards(cardIds: [ID] @ARI(type: \"issue\", owner: \"jira\", interpreted: true), customFilterIds: [ID!]): [SoftwareCard]!\n    sprintState: SprintState!,\n    sprintMetadata: SoftwareSprintMetadata\n}\n\ntype SoftwareSprintMetadata @renamed(from: \"SprintMetadata\") {\n    # Number of Completed Issues in Sprint\n    numCompletedIssues: Int,\n    # Number of Open Issues in Sprint\n    numOpenIssues: Int,\n    # Keys of Unresolved Cards\n    top100CompletedCardKeysWithIncompleteChildren: [String]\n}\n\ntype SoftwareProject @renamed(from: \"Project\") {\n    \"Project id\"\n    id: ID @ARI(type: \"project\", owner: \"jira\", interpreted: true)\n    \"Project key\"\n    key: String\n    \"Project name\"\n    name: String\n    \"\"\"\n    List of card types available in the project\n    When on the board, these will NOT include Epics or Subtasks, but when in boardScope they will\n    \"\"\"\n    cardTypes(hierarchyLevelType: CardHierarchyLevelEnumType): [CardType] @renamed(from : \"issueTypes\")\n}\n\ntype CardParent @renamed(from: \"IssueParent\") {\n    \"Card id\"\n    id: ID! @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n    \"Card key\"\n    key: String!\n    \"Card summary\"\n    summary: String!\n    \"Card type\"\n    cardType: CardType! @renamed(from: \"issueType\")\n    \"The color for this card\"\n    color: CardPaletteColor\n    \"Card status\"\n    status: CardStatus @renamed(from: \"issue.status\")\n    \"Some info about its children\"\n    childrenInfo: SoftwareCardChildrenInfo,\n    \"The start date set on the issue parent\"\n    startDate: String,\n    \"The due date set on the issue parent\"\n    dueDate: String,\n}\n\ntype SoftwareCardChildrenInfo @renamed(from: \"ChildrenInfo\") {\n    todoStats: SoftwareCardChildrenInfoStats\n    inProgressStats: SoftwareCardChildrenInfoStats\n    doneStats: SoftwareCardChildrenInfoStats\n    lastColumnIssueStats: SoftwareCardChildrenInfoStats\n}\n\ntype SoftwareCardChildrenInfoStats @renamed(from: \"ChildrenInfoStats\") {\n    cardCount: Int @renamed(from: \"issueCount\")\n}\n\n\"\"\"\nSupported colors in the Palette\n\"\"\"\nscalar CardPaletteColor @renamed(from: \"PaletteColor\")\n\ntype BoardFeature {\n    key: SoftwareBoardFeatureKey,\n    status: BoardFeatureStatus,\n    toggle: BoardFeatureToggleStatus,\n    category: String!,\n    prerequisites: [BoardFeature],\n}\n\n# Relay connection definition for a list of board feature groups\ntype BoardFeatureGroupConnection {\n    # Page detail for pagination\n    pageInfo: PageInfo,\n    # The list of edges of this connection\n    edges: [BoardFeatureGroupEdge],\n}\n\n# Relay edge definition for a board feature group\ntype BoardFeatureGroupEdge {\n    # The cursor position of this edge. Used for pagination\n    cursor: String,\n    # The board feature group of the edge\n    node: BoardFeatureGroup,\n}\n\ntype BoardFeatureGroup implements Node {\n    id: ID!,\n    name: String,\n    # The board features in this group\n    features(ids: [String!], first: Int, after: String): BoardFeatureConnection,\n}\n\n# Relay connection definition for a list of board features\ntype BoardFeatureConnection {\n    pageInfo: PageInfo,\n    edges: [BoardFeatureEdge],\n}\n\n# Relay edge definition for a board feature\ntype BoardFeatureEdge {\n    # The cursor position of this edge. Used for pagination\n    cursor: String,\n    # The feature group of the edge\n    node: BoardFeatureView,\n}\n\nunion BoardFeatureView = BasicBoardFeatureView | EstimationBoardFeatureView\n\ntype BasicBoardFeatureView implements Node {\n    id: ID!,\n    title: String,\n    description: String,\n    # Possible states: ENABLED, DISABLED, COMING_SOON\n    status: String,\n    canEnable: Boolean,\n    learnMoreLink: String,\n    imageUri: String,\n}\n\ntype EstimationBoardFeatureView implements Node {\n    id: ID!,\n    title: String,\n    description: String,\n    # Possible states: ENABLED, DISABLED, COMING_SOON\n    status: String,\n    canEnable: Boolean,\n    learnMoreLink: String,\n    imageUri: String,\n    permissibleEstimationTypes: [PermissibleEstimationType],\n    selectedEstimationType: PermissibleEstimationType\n}\n\ntype PermissibleEstimationType {\n    # Possible estimation type values: STORY_POINTS, ORIGINAL_ESTIMATE, ISSUE_COUNT (Issue count is not supported yet)\n    value: String,\n    name: String,\n    description: String\n}\n\nenum BoardFeatureToggleStatus {\n    ENABLED,\n    DISABLED,\n}\n\nenum BoardFeatureStatus {\n    ENABLED,\n    DISABLED,\n    COMING_SOON,\n}\n\nscalar SoftwareBoardFeatureKey @renamed(from: \"BoardFeatureKey\")\n\ntype SoftwareReport @renamed(from: \"Report\") {\n    id: ID!\n    \"unique key identifying the report\"\n    key: String!\n    \"the name of the report in the user's language\"\n    localisedName: String!\n    \"the name of the report in the user's language\"\n    localisedDescription: String!\n    \"Which group this report should be shown in\"\n    group: String!\n    \"uri of the report's icon\"\n    imageUri: String!\n    \"\"\"\n    suffix to apply to the reports url to load this report.\n    e.g. https://tenant.com/secure/RapidBoard.jspa?rapidView=*boardId*&view=reports&report=*urlName*\n    \"\"\"\n    urlName: String!\n    \"whether or not this report is applicable (is enabled for) this board\"\n    isApplicable: Boolean!\n    \"if not applicable - localised text as to why\"\n    inapplicableReason: String\n    \"if not applicable - localised text as to why\"\n    inapplicableDescription: String\n}\n\ntype EstimationConfig {\n    \"Currently configured estimation.\"\n    current: CurrentEstimation!,\n    \"All available estimation types that can be used in the project.\"\n    available: [AvailableEstimations!]!,\n}\n\ntype CurrentEstimation {\n    \"Custom field configured as the estimation type. Null when estimation feature is disabled.\"\n    customFieldId: String,\n    \"Name of the custom field.\"\n    name: String,\n}\n\ntype AvailableEstimations {\n    \"\"\"\n    Unique identifier of the estimation. Temporary naming until we remove \"statistic\" from Jira.\n    \"\"\"\n    statisticFieldId: String!,\n    \"Name of the estimation.\"\n    name: String!,\n}\n\n\"Information about the current user. Different users will see different results.\"\ntype CurrentUser {\n    \"List of permissions the *user making the request* has for this board.\"\n    permissions: [SoftwareBoardPermission]!\n}\n\nscalar SoftwareBoardPermission @renamed(from: \"BoardPermission\")\n\n\"\"\"\nGeneral Report Types\n====================\n\"\"\"\ntype TimeSeriesPoint {\n    id: ID!,\n    x: DateTime!,\n    y: Int!,\n}\n\n\"Node for querying any report page's data\"\ntype SoftwareReports @renamed(from: \"Reports\") {\n    \"Data for the reports list overview\"\n    overview: ReportsOverview\n    \"Data for the cumulative flow diagram report\"\n    cumulativeFlowDiagram: CumulativeFlowDiagram\n    \"Data for the burndown chart report\"\n    burndownChart: BurndownChart!\n}\n\n\"Data for the reports overview page\"\ntype ReportsOverview {\n    metadata: [SoftwareReport]!\n}\n\n\"Node for querying the Cumulative Flow Diagram report\"\ntype CumulativeFlowDiagram {\n    chart(first: Int, cursor: String): CFDChartConnection!\n    filters: CFDFilters!\n}\n\n\"\"\"\nReport pagination\n-----------------\n\"\"\"\ntype CFDChartConnection {\n    edges: [CFDChartEdge]!\n    pageInfo: PageInfo!\n}\n\ntype CFDChartEdge {\n    cursor: String!\n    node: CFDChartData!\n}\n\n\"\"\"\nReport data\n-----------------\n\"\"\"\ntype CFDChartData {\n    timestamp: DateTime!\n    changes: [CFDIssueColumnChangeEntry]!\n    columnCounts: [CFDColumnCount]!\n}\n\ntype CFDIssueColumnChangeEntry {\n    key: ID,\n    \"in ISO 8601 format\"\n    timestamp: String!,\n    columnFrom: Int,\n    columnTo: Int,\n    statusTo: ID,\n    point: TimeSeriesPoint,\n}\n\ntype CFDColumnCount {\n    columnIndex: Int!,\n    count: Int!,\n}\n\n\"\"\"\nReport filters\n--------------\n\"\"\"\ntype CFDFilters {\n    columns: [CFDColumn]!\n}\n\ntype CFDColumn {\n    name: String!\n}\n\n\"Burndown chart focuses on remaining scope over time\"\ntype BurndownChart {\n    \"Burndown charts are graphing the remaining over time\"\n    chart(sprintId: ID, estimation: SprintReportsEstimationStatisticType): BurndownChartData!\n\n    \"Filters for the report\"\n    filters: SprintReportsFilters!\n}\n\ntype SprintReportsFilters {\n    \"List of sprints to select from\"\n    sprints: [Sprint]!\n    \"Possible statistic that we want to track\"\n    estimationStatistic: [SprintReportsEstimationStatisticType]!\n}\n\nenum SprintReportsEstimationStatisticType @renamed(from: \"SprintReportsEstimationStatistic\") {\n    STORY_POINTS\n    ISSUE_COUNT\n    ORIGINAL_ESTIMATE\n}\n\ntype BurndownChartData {\n    \"the start time of the sprint\"\n    startTime: DateTime\n\n    \"the set end time of the sprint, not when the sprint completed\"\n    endTime: DateTime\n\n    \"data for sprint start event\"\n    sprintStartEvent: SprintStartData!\n\n    \"\"\"\n    data for a sprint scope change\n    each point are assumed to be scope change during a sprint\n    \"\"\"\n    scopeChangeEvents: [SprintScopeChangeData]!\n\n    \"\"\"\n    data for sprint end event\n    can be null if sprint has not been completed yet\n    \"\"\"\n    sprintEndEvent: SprintEndData\n\n    \"data for the table\"\n    table: BurndownChartDataTable\n\n    \"the current user's timezone\"\n    timeZone: String\n}\n\ntype BurndownChartDataTable {\n    scopeChanges: [BurndownChartDataTableScopeChangeRow]!\n    incompleteIssues: [BurndownChartDataTableIssueRow]!\n    completedIssues: [BurndownChartDataTableIssueRow]!\n    completedIssuesOutsideOfSprint: [BurndownChartDataTableIssueRow]!\n    issuesRemovedFromSprint: [BurndownChartDataTableIssueRow]!\n}\n\ntype BurndownChartDataTableScopeChangeRow {\n    timestamp: DateTime!\n    sprintScopeChange: SprintScopeChangeData!\n    cardType: CardType @renamed(from: \"issueType\")\n    cardParent: CardParent @renamed(from: \"issueParent\")\n}\n\ntype BurndownChartDataTableIssueRow {\n    issueKey: String!\n    issueSummary: String!\n    cardType: CardType @renamed(from: \"issueType\")\n    cardParent: CardParent @renamed(from: \"issueParent\")\n    cardStatus: CardStatus @renamed(from: \"status\")\n    assignee: User @hydrated(service: \"identity\" field: \"users\" arguments : [ { name : \"accountIds\", value : \"$source.assignee.accountId\"}] identifiedBy : \"accountId\"   batchSize : 90)\n    estimate: Float\n}\n\ntype SprintStartData {\n    timestamp: DateTime!\n\n    \"list of all issues that are in the sprint with their estimates\"\n    issueList: [ScopeSprintIssue]!\n\n    \"scope estimate for start of sprint\"\n    scopeEstimate: Float!\n}\n\ntype ScopeSprintIssue {\n    \"issue key\"\n    issueKey: String!\n\n    \"issue description\"\n    issueSummary: String!\n\n    \"the estimate on the issue\"\n    estimate: Float!\n}\n\ntype SprintEndData {\n    \"timestamp of when sprint was completed\"\n    timestamp: DateTime!\n\n    \"list of all issues that are in the sprint with their estimates\"\n    issueList: [ScopeSprintIssue]!\n\n    \"scope remaining at the end of the sprint\"\n    remainingEstimate: Float!\n}\n\ntype SprintScopeChangeData {\n    \"timestamp of change\"\n    timestamp: DateTime!\n\n    \"the issue involved in the change\"\n    issueKey: String!\n\n    \"the issue description\"\n    issueSummary: String!\n\n    \"type of event\"\n    eventType: SprintScopeChangeEventType!\n\n    \"sprint scope after this change\"\n    scope: Float!\n\n    \"amount completed of the esimtation statistic\"\n    completion: Float!\n\n    \"amount remaining of the estimation statistic\"\n    remaining: Float!\n\n    \"estimation of the issue after this change\"\n    estimate: Float\n\n    \"the previous completed amount before this change\"\n    prevCompletion: Float!\n\n    \"the sprint scope before the change\"\n    prevScope: Float!\n\n    \"the previous remaining amount before this change\"\n    prevRemaining: Float!\n\n    \"the previous estimation before this change\"\n    prevEstimate: Float\n}\n\nscalar SprintScopeChangeEventType @renamed(from: \"ScopeChangeEventType\")\n\n\"Information related to the development process of an issue\"\ntype IssueDevOpsDevelopmentInformation @renamed(from: \"DevelopmentInformation\") {\n    details(instanceTypes: [String!]! = []): IssueDevOpsDetails\n}\n\n\"Aggregates all the instance types (bitbucket, stash, github) and its development information\"\ntype IssueDevOpsDetails @renamed(from: \"DevDetails\") {\n    instanceTypes: [IssueDevOpsProviderInstance!]!\n    featureFlagProviders: [IssueDevOpsFeatureFlagProvider!]\n    deploymentProviders: [IssueDevOpsDeploymentProviderDetails!]\n    remoteLinksByType: IssueDevOpsRemoteLinksByType\n    embeddedMarketplace: IssueDevOpsEmbeddedMarketplace!\n}\n\n\"Detailed information of an instance and its data (source data, build data, deployment data)\"\ntype IssueDevOpsProviderInstance @renamed(from: \"Instance\") {\n    id: String!\n    \"The name of the instance type\"\n    name: String\n    \"Raw type of the instance. e.g. bitbucket, stash, github\"\n    type: String\n    repository: [IssueDevOpsRepositoryDetails!]\n    buildProviders: [IssueDevOpsBuildProvider!]\n    \"The descriptive name of the instance type. e.g. Bitbucket Cloud\"\n    typeName: String\n    \"Indicates if it is possible to return more than a single instance per type. Only possible with FeCru\"\n    isSingleInstance: Boolean\n    baseUrl: String\n    \"\"\"\n    An error message related to this instance passed down from DevStatus\n    These are not GraphQL errors. When an instance type is requested,\n    DevStatus may respond with a list instances and strings nested inside the 'errors' field, as follows:\n    `{ 'errors': [{'_instance': { ... }, error: 'unauthorized' }], detail: [ ... ] }`.\n    The status code for this response however is still 200\n    since only part of the instances requested may present these issues.\n    `devStatusErrorMessage` is deprecated. Use `devStatusErrorMessages`.\n    \"\"\"\n    devStatusErrorMessage: String\n    devStatusErrorMessages: [String!]\n    \"\"\"\n    There are common cases where a Pull Request is merged and its branch is deleted.\n    The downstream sources do not provide repository information on the PR, only branches information.\n    When the branch is deleted, it's not possible to create the bridge between PRs and Repository.\n    For this reason, any PR that couldn't be assigned to a repository will appear on this list.\n    \"\"\"\n    danglingPullRequests: [IssueDevOpsPullRequestDetails!]\n}\n\n\"Detailed information of a VCS repository\"\ntype IssueDevOpsRepositoryDetails @renamed(from: \"RepositoryDetails\") {\n    \"The repository avatar URL\"\n    avatarUrl: String\n    description: String\n    name: String!\n    url: String\n    \"A reference to the parent repository from where this has been forked for\"\n    parent: IssueDevOpsRepositoryParent\n    pullRequests: [IssueDevOpsPullRequestDetails!]\n    branches: [IssueDevOpsBranchDetails!]\n    commits: [IssueDevOpsCommitDetails!]\n}\n\n\"Short description of the parent repository from which the fork was made\"\ntype IssueDevOpsRepositoryParent @renamed(from: \"RepositoryParent\") {\n    name: String!\n    url: String\n}\n\n\"A build pipeline provider\"\ntype IssueDevOpsBuildProvider @renamed(from: \"BuildProvider\") {\n    id: String!\n    name: String\n    url: String\n    description: String\n    avatarUrl: String\n    builds: [IssueDevOpsBuildDetail!]\n}\n\n\"Detailed information about a build tied to a provider\"\ntype IssueDevOpsBuildDetail @renamed(from: \"BuildDetail\") {\n    id: String!\n    buildNumber: Int\n    name: String\n    description: String\n    url: String\n    state: String\n    testSummary: IssueDevOpsTestSummary\n    lastUpdated: DateTime\n    references: [IssueDevOpsBuildReference!]\n}\n\n\"A summary for the tests results for a particular build\"\ntype IssueDevOpsTestSummary @renamed(from: \"TestSummary\") {\n    totalNumber: Int\n    numberPassed: Int\n    numberFailed: Int\n    numberSkipped: Int\n}\n\n\"Information that links a build to a version control system (commits, branches, etc.)\"\ntype IssueDevOpsBuildReference @renamed(from: \"BuildReference\") {\n    name: String!\n    uri: String\n}\n\n\"Detailed information of a pull request\"\ntype IssueDevOpsPullRequestDetails @renamed(from: \"PullRequestDetails\") {\n    id: String!\n    url: String\n    name: String\n    branchName: String\n    branchUrl: String\n    \"Time of the last update in ISO 8601 format\"\n    lastUpdate: DateTime\n    commentCount: Int\n    status: IssueDevOpsPullRequestStatus\n    author: IssueDevOpsPullRequestAuthor\n    reviewers: [IssueDevOpsPullRequestReviewer!]\n}\n\nenum IssueDevOpsPullRequestStatus {\n    OPEN\n    MERGED\n    DECLINED\n}\n\n\"Description of a pull request or commit author\"\ntype IssueDevOpsPullRequestAuthor @renamed(from: \"Author\") {\n    \"The avatar URL of the author\"\n    avatarUrl: String\n    name: String!\n}\n\n\"Description of a pull request reviewer\"\ntype IssueDevOpsPullRequestReviewer @renamed(from: \"PullRequestReviewer\") {\n    \"The avatar URL of the reviewer\"\n    avatarUrl: String\n    name: String!\n    \"Flag representing if the reviewer has already approved the PR\"\n    isApproved: Boolean\n}\n\n\"Detailed information of a repository's branch\"\ntype IssueDevOpsBranchDetails @renamed(from: \"BranchDetails\") {\n    name: String!\n    url: String\n    createReviewUrl: String\n    createPullRequestUrl: String\n    lastCommit: IssueDevOpsHeadCommit\n    pullRequests: [IssueDevOpsBranchPullRequestStatesSummary!]\n    reviews: [IssueDevOpsReview!]\n}\n\n\"Latest commit on a branch\"\ntype IssueDevOpsHeadCommit @renamed(from: \"HeadCommit\") {\n    url: String\n    displayId: String!\n    \"Time of the commit in ISO 8601 format\"\n    timestamp: DateTime\n}\n\n\"Short description of a pull request associated with a branch\"\ntype IssueDevOpsBranchPullRequestStatesSummary @renamed(from: \"BranchPullRequestStatesSummary\") {\n    name: String!\n    url: String\n    status: IssueDevOpsPullRequestStatus\n    \"Time of the last update in ISO 8601 format\"\n    lastUpdate: DateTime\n}\n\n\"Short desciption of a review associated with a branch or commit\"\ntype IssueDevOpsReview @renamed(from: \"Review\") {\n    state: String\n    url: String\n    id: String!\n}\n\n\"Detailed information of a commit in a repository\"\ntype IssueDevOpsCommitDetails @renamed(from: \"CommitDetails\") {\n    id: String!\n    isMerge: Boolean\n    \"Time of the commit update in ISO 8601 format\"\n    timestamp: DateTime\n    url: String\n    createReviewUrl: String\n    displayId: String\n    message: String\n    author: IssueDevOpsPullRequestAuthor\n    files: [IssueDevOpsCommitFile!]\n    reviews: [IssueDevOpsReview!]\n}\n\n\"Information of a file modified in a commit\"\ntype IssueDevOpsCommitFile @renamed(from: \"CommitFile\") {\n    linesAdded: Int\n    linesRemoved: Int\n    changeType: IssueDevOpsCommitChangeType\n    url: String\n    path: String!\n}\n\nenum IssueDevOpsCommitChangeType {\n    ADDED\n    DELETED\n    COPIED\n    MOVED\n    MODIFY\n    UNKNOWN\n}\n\ntype IssueDevOpsFeatureFlagProvider @renamed(from: \"FeatureFlagProvider\") {\n    id: String!,\n    createFlagTemplateUrl: String,\n    linkFlagTemplateUrl: String,\n    featureFlags: [IssueDevOpsFeatureFlag!]\n}\n\ntype IssueDevOpsFeatureFlag @renamed(from: \"FeatureFlag\") {\n    \"Can be used to link to a provider record if required\"\n    providerId : String,\n    \"the identifier for the feature flag as provided\"\n    id: String!,\n    key: String,\n    displayName: String,\n    summary: IssueDevOpsFeatureFlagSummary\n    details: [IssueDevOpsFeatureFlagDetails!]\n}\n\ntype IssueDevOpsFeatureFlagSummary @renamed(from: \"FeatureFlagSummary\") {\n    url: String,\n    status: IssueDevOpsFeatureFlagStatus!,\n    lastUpdated: String\n}\n\ntype IssueDevOpsFeatureFlagStatus @renamed(from: \"FeatureFlagStatus\") {\n    enabled: Boolean!,\n    defaultValue : String,\n    rollout: IssueDevOpsFeatureFlagRollout\n}\n\ntype IssueDevOpsFeatureFlagRollout @renamed(from: \"FeatureFlagRollout\") {\n    percentage: Float,\n    text: String,\n    rules: Int\n}\n\ntype IssueDevOpsFeatureFlagDetails @renamed(from: \"FeatureFlagDetails\") {\n    url: String!,\n    lastUpdated: String,\n    environment: IssueDevOpsFeatureFlagEnvironment,\n    status: IssueDevOpsFeatureFlagStatus\n}\n\ntype IssueDevOpsFeatureFlagEnvironment @renamed(from: \"FeatureFlagEnvironment\") {\n    name: String!,\n    type: String\n}\n\ntype IssueDevOpsRemoteLinksByType @renamed(from: \"RemoteLinksByType\") {\n    providers: [IssueDevOpsRemoteLinkProvider!]!,\n    types: [IssueDevOpsRemoteLinkType!]!\n}\n\ntype IssueDevOpsRemoteLinkProvider @renamed(from: \"RemoteLinkProvider\") {\n    id: String!,\n    name: String,\n    homeUrl: String,\n    logoUrl: String,\n    documentationUrl: String,\n    actions: [IssueDevOpsRemoteLinkProviderAction!]\n}\n\ntype IssueDevOpsRemoteLinkProviderAction @renamed(from: \"RemoteLinkProviderAction\") {\n    id: String!,\n    label: IssueDevOpsRemoteLinkLabel,\n    templateUrl: String\n}\n\ntype IssueDevOpsRemoteLinkLabel @renamed(from: \"RemoteLinkLabel\") {\n    value: String!\n}\n\ntype IssueDevOpsRemoteLinkType @renamed(from: \"RemoteLinkType\") {\n    type: String!,\n    remoteLinks: [IssueDevOpsRemoteLink!]\n}\n\ntype IssueDevOpsRemoteLink @renamed(from: \"RemoteLink\") {\n    id: String!,\n    providerId: String,\n    displayName: String,\n    url: String,\n    type: String,\n    description: String,\n    status: IssueDevOpsRemoteLinkStatus,\n    actionIds: [String!],\n    attributeMap: [IssueDevOpsRemoteLinkAttributeTuple!]\n}\n\ntype IssueDevOpsRemoteLinkStatus @renamed(from: \"RemoteLinkStatus\") {\n    appearance: String,\n    label: String,\n}\n\ntype IssueDevOpsRemoteLinkAttributeTuple @renamed(from: \"RemoteLinkAttributeTuple\") {\n    key: String!,\n    value: String!\n}\n\n\"\"\"\nA set of booleans that indicate if the embedded marketplace\nshould be shown if a user does not have installed providers\n\"\"\"\ntype IssueDevOpsEmbeddedMarketplace @renamed(from: \"EmbeddedMarketplace\") {\n    shouldDisplayForFeatureFlags: Boolean!\n    shouldDisplayForBuilds: Boolean!\n    shouldDisplayForDeployments: Boolean!\n}\n\n\"\"\"\nThis object witholds deployment providers essential information,\nas well as its list of latest deployments per pipeline.\nA provider without deployments related to the asked issueId will not be returned.\n\"\"\"\ntype IssueDevOpsDeploymentProviderDetails @renamed(from: \"DeploymentProviderDetails\") {\n    id: String!\n    name: String\n    homeUrl: String\n    logoUrl: String\n    \"A list of the latest deployments of each pipeline\"\n    deployments: [IssueDevOpsDeploymentDetails!]\n}\n\n\"Detailed information of a deployment\"\ntype IssueDevOpsDeploymentDetails @renamed(from: \"DeploymentDetails\") {\n    displayName: String\n    url: String\n    state: IssueDevOpsDeploymentState\n    lastUpdated: DateTime\n    environment: IssueDevOpsDeploymentEnvironment\n    pipelineId: String!\n    pipelineDisplayName: String\n    pipelineUrl: String\n}\n\nenum IssueDevOpsDeploymentState @renamed(from: \"DeploymentState\") {\n    PENDING\n    IN_PROGRESS\n    SUCCESSFUL\n    CANCELLED\n    FAILED\n    ROLLED_BACK\n    UNKNOWN\n}\n\ntype IssueDevOpsDeploymentEnvironment @renamed(from: \"DeploymentEnvironment\") {\n    id: String!\n    type: IssueDevOpsDeploymentEnvironmentType\n    displayName: String\n}\n\nenum IssueDevOpsDeploymentEnvironmentType @renamed(from: \"DeploymentEnvironmentType\") {\n    PRODUCTION\n    STAGING\n    TESTING\n    DEVELOPMENT\n    UNMAPPED\n}\n\n\n### Mutations\n\n### Column Mutations ###\n\ninput CreateColumnInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    columnName: String!\n}\n\ntype CreateColumnOutput implements MutationResponse {\n    newColumn: Column,\n    columns: [Column!],\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\ninput SetColumnNameInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    columnId: ID!\n    columnName: String!\n}\n\ntype SetColumnNameOutput implements MutationResponse {\n    column: Column,\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\ninput RankColumnInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    columnId: ID!\n    position: Int!\n}\n\ntype RankColumnOutput implements MutationResponse {\n    columns: [Column!],\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\ninput SetColumnLimitInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    columnId: ID!\n    limit: Int\n}\n\ntype SetColumnLimitOutput implements MutationResponse {\n    columns: [Column!]\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\ninput DeleteColumnInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    columnId: ID!\n}\n\ntype DeleteColumnOutput implements MutationResponse {\n    columns: [Column!]\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\ntype ColumnsConfig {\n    columnConfigSwimlanes: [ColumnConfigSwimlane],\n    unmappedStatuses: [RawStatus],\n    isUpdating: Boolean\n}\n\ntype ColumnConfigSwimlane {\n    # UUID to identify the swimlane\n    id: ID,\n    # All issue types belong to the swimlane\n    issueTypes: [CardType],\n    # Original statuses belong to the swimlane\n    uniqueStatuses: [RawStatus],\n    # Ghost statuses belong to the swimlane\n    sharedStatuses: [RawStatus]\n}\n\n# Represents a status object from a workflow in Jira without any calculcated fields\ntype RawStatus {\n    # Unique identifier of the status, in UUID type\n    id: ID,\n    # Jira's Id of the status\n    jiraId: ID,\n    # Name of the status\n    name: String,\n    # Which status category this statue belongs to\n    category: String\n}\n\n\"\"\"\nStart sprint\n\"\"\"\ninput StartSprintInput @renamed(from: \"SprintInput\") {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    sprintId: ID! @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)\n    name: String!\n    goal: String\n    startDate: String!\n    endDate: String!\n}\n\ntype SprintResponse implements MutationResponse @renamed(from: \"SprintOutput\") {\n    sprint: Sprint\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\n\"\"\"\nCreate sprint\n\"\"\"\ninput CreateSprintInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n}\n\ntype CreatedSprint {\n    \"\"\"The ID of the sprint\"\"\"\n    id: ID! @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)\n    \"\"\"The sprint's name\"\"\"\n    name: String\n    \"\"\"The start date of the sprint, in ISO 8601 format\"\"\"\n    startDate: DateTime\n    \"\"\"The end date of the sprint, in ISO 8601 format\"\"\"\n    endDate: DateTime\n    \"\"\"The number of days remaining\"\"\"\n    daysRemaining: Int\n    \"\"\"The state of the sprint, can be one of the following (FUTURE, ACTIVE, CLOSED)\"\"\"\n    sprintState: SprintState\n    \"\"\"Can this sprint be update by the current user\"\"\"\n    canUpdateSprint: Boolean\n}\n\ntype CreateSprintResponse implements MutationResponse @renamed(from: \"CreateSprintOutput\") {\n    sprint: CreatedSprint\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\n\"\"\"\nComplete sprint\n\"\"\"\ninput CompleteSprintInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    sprintId: ID! @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)\n    incompleteCardsDestination: SoftwareCardsDestination!\n}\n\ninput SoftwareCardsDestination @renamed(from: \"CardsDestination\") {\n    destination: SoftwareCardsDestinationEnum\n    sprintId: ID @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)\n}\n\nenum SoftwareCardsDestinationEnum @renamed(from: \"CardsDestinationEnum\") {\n    NEW_SPRINT\n    BACKLOG\n    EXISTING_SPRINT\n}\n\ntype CompleteSprintResponse implements MutationResponse @renamed(from: \"CompleteSprintOutput\") {\n    boardScope: BoardScope\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\n\"\"\"\nEdit sprint\n\"\"\"\ninput EditSprintInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    sprintId: ID! @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)\n    name: String\n    goal: String\n    startDate: String\n    endDate: String\n}\n\n\"\"\"\nDelete sprint\n\"\"\"\ninput DeleteSprintInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    sprintId: ID! @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)\n}\n\n\"\"\"\nMove sprint up\n\"\"\"\ninput MoveSprintUpInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    sprintId: ID! @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)\n}\n\ntype MoveSprintUpResponse implements MutationResponse @renamed(from: \"MoveSprintUpOutput\") {\n    boardScope: BoardScope\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\n\"\"\"\nMove sprint down\n\"\"\"\ninput MoveSprintDownInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    sprintId: ID! @ARI(type: \"sprint\", owner: \"jira-software\", interpreted: true)\n}\n\ntype MoveSprintDownResponse implements MutationResponse @renamed(from: \"MoveSprintDownOutput\") {\n    boardScope: BoardScope\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\n\"\"\"\nSwimlane Mutations\n\"\"\"\n\ninput SetSwimlaneStrategyInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    strategy: SwimlaneStrategy!\n}\n\ntype SetSwimlaneStrategyResponse implements MutationResponse @renamed(from: \"SetSwimlaneStrategyOutput\") {\n    strategy: SwimlaneStrategy!\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n}\n\n\"\"\"\nEstimation Mutation\n\"\"\"\ninput SetEstimationTypeInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    estimationType: String!\n}\n\n\"\"\"\nCustomFilters Mutation\n\"\"\"\ninput CreateCustomFilterInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    name: String!\n    jql: String!\n    description: String\n}\n\ntype CustomFilterCreateOutput implements MutationResponse {\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n    customFilter: CustomFilter\n    validationErrors: [CustomFiltersValidationError!]!\n}\n\ntype CustomFiltersValidationError {\n    fieldName: String!\n    errorMessage: String!\n    errorKey: String!\n}\n\n\"\"\"\nUpdates a custom filter with the given id in the board with the given boardId.\nThe update will update the entire filter (ie. not a partial update)\n\"\"\"\ninput UpdateCustomFilterInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    id: ID!\n    name: String!\n    jql: String!\n    description: String\n}\n\ninput DeleteCustomFilterInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    customFilterId: String!\n}\n\n\"\"\"\nCard mutations response\n\"\"\"\ntype MoveCardOutput {\n    issuesWereTransitioned: Boolean\n    statusCode: Int\n    success: Boolean\n    message: String\n    clientMutationId: ID\n}\n\ninput BoardCardMoveInput {\n    \"\"\"\n    the ID of a board\n    \"\"\"\n    boardId: ID @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n\n    \"\"\"\n    The IDs of cards to move\n    \"\"\"\n    cardIds: [ID] @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n\n    \"\"\"\n    The swimlane position, which might set additional fields\n    \"\"\"\n    swimlaneId: ID\n\n    \"\"\"\n    The ID of the transition\n    \"\"\"\n    transition: ID\n\n    \"\"\"\n    Card information on where card should be positioned\n    \"\"\"\n    rank: CardRank\n}\n\ninput DeleteCardInput {\n    cardId: ID! @ARI(type: \"card\", owner: \"jira-software\")\n}\n\ntype DeleteCardOutput {\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n    clientMutationId: ID\n}\n\ninput SetIssueMediaVisibilityInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    isVisible: Boolean\n}\n\ntype SetIssueMediaVisibilityOutput implements MutationResponse {\n    boardScope: BoardScope\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n    clientMutationId: ID\n}\n\ninput AssignIssueParentInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    issueIds: [ID!]! @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n    issueParentId: ID! @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n}\n\ntype AssignIssueParentOutput implements MutationResponse {\n    boardScope: BoardScope\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n    clientMutationId: ID\n}\n\ninput UnassignIssueParentInput {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    issueIds: [ID!]! @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n}\n\ntype UnassignIssueParentOutput implements MutationResponse {\n    boardScope: BoardScope\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n    clientMutationId: ID\n}\n\ninput CardParentCreateInput @renamed(from: \"IssueParentCreateInput\") {\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    newIssueParents: [NewCardParent!]!\n}\n\ninput NewCardParent @renamed(from: \"NewIssueParent\") {\n    summary: String!,\n    issueTypeId: ID!,\n}\n\ntype CardParentCreateOutput implements MutationResponse @renamed(from: \"IssueParentCreateOutput\") {\n    newCardParents: [CardParent] @renamed(from: \"newIssueParents\")\n    statusCode: Int!\n    success: Boolean!\n    message: String!\n    clientMutationId: ID\n}\n\ninput CardParentRankInput @renamed(from: \"IssueParentRankInput\") {\n    issueParentIds: [ID!]! @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n    boardId: ID! @ARI(type: \"board\", owner: \"jira-software\", interpreted: true)\n    rankBeforeIssueParentId: Long\n    rankAfterIssueParentId: Long\n}\n\ninput CardRank {\n    \"\"\"\n    The card that is after this card\n    \"\"\"\n    afterCardId: ID @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n\n    \"\"\"\n    The card that is before this card\n    \"\"\"\n    beforeCardId: ID @ARI(type: \"issue\", owner: \"jira\", interpreted: true)\n}\n"}